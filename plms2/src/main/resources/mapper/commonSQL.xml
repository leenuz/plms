<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="commonSQL">

	
	<select id="selectAllJisaList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		<![CDATA[
		select sc_code_name as jm_jisa_name 
		from sys_code 
		where sc_group_code='JSA000' 
		and sc_sort_order > 0 and sc_use_yn='Y'
		]]><if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(LOGIN_JISA)">
		AND SC_CODE_NAME LIKE CONCAT('%', #{LOGIN_JISA}, '%')
		</if><![CDATA[
		order by sc_sort_order
		]]>
	</select>
	<select id="selectYongdoList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		<![CDATA[
		select * from jisang_yongdo
		]]>
	</select>
	<select id="selectPipeNameList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		<![CDATA[
		select * from jisa_zone_name where jzn_jisa=#{idx}
		]]>
	</select>
	<select id="selectJimokList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		<![CDATA[
		select jimok_cd as jm_idx , jimok_text as jm_name from jimok_code 
		]]>
	</select>
	<select id="selectAddressList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		<![CDATA[
		select * from jijuk_2024 where juso like concat('%',#{address},'%')
		]]>
	</select>
	<select id="selectLcodeList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		<![CDATA[
		select * from jijuk_2024 where bcode like concat(#{address},'%')
		]]>
	</select>
	<select id="getSidoMaster" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		<![CDATA[
		select sm_idx,sm_sido as sm_name from sido_plms_2023 order by sm_name 
		]]>
	</select>
	<select id="getSigunMaster" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		
		 select sm_idx,sm_sigungu as sm_gugun from sigun_plms_2023 
		 where 1=1
		 <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(key)" > 
		 and sm_sido=#{key} 
		 </if>
		
	</select>
	<select id="getDongMaster" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		<![CDATA[
			SELECT bm_dong FROM bdong_plms_2023 where bm_sido=#{sidoKey} AND bm_sigungu = #{gugunKey}
		]]>
	</select>
	<select id="getRiMaster" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		<![CDATA[
			SELECT rm_ri FROM ri_plms_2023 where rm_sido=#{sidoKey} AND rm_sigungu = #{gugunKey} AND rm_dong = #{dongKey}
		]]>
	</select>
	
	<insert id="pnuAtcUpload" parameterType="java.util.HashMap" useGeneratedKeys="true" keyColumn="pa_idx" keyProperty="pa_idx">
		
		INSERT INTO  pnu_atcfile
		(
		 pa_pnu
		,pa_file_nm
		,pa_file_path
		,pa_file_seq
		,pa_pmt_no
		,pa_manage_no
		
		 ) 
		 VALUES (
		 #{pnu}
		 ,#{filename}
		 ,#{filepath}
		 ,#{fileseq}
		 ,#{pmt_no}
		
		 ,#{manage_no}
		)
	
	</insert>
	
	<insert id="minwonAgreeAtcUpload" parameterType="java.util.HashMap" useGeneratedKeys="true" keyColumn="pa_idx" keyProperty="pa_idx">
		
		INSERT INTO  minwon_agree_atcfile
		(
		 maa_mw_seq
		 ,maa_agree_seq
		 ,maa_file_nm
		 ,maa_file_path
		 ) 
		 VALUES (
		 #{maa_mw_seq}
		 ,#{maa_agree_seq}
		 ,#{filename}
		 ,#{filepath}
		)
	
	</insert>

	<delete id="pnuAtcDelete" parameterType="java.util.HashMap">

		delete from pnu_atcfile
		where pa_idx = #{pa_idx}::int

	</delete>
	
	<select id="selectFilePathByPaIdx" parameterType="java.util.HashMap" resultType="java.util.HashMap">
    SELECT pa_file_path
    FROM pnu_atcfile
    WHERE pa_idx = #{pa_idx}::int
	</select>
	
	
	<insert id="putMemoData" parameterType="java.util.HashMap" useGeneratedKeys="true" keyColumn="mm_idx" keyProperty="mm_idx">
		
		INSERT INTO  memo_master
		(
		 mm_manage_no
		 ,mm_user_name
		 ,mm_memo
		 ,mm_wdate
		 ,mm_user_id
		
		 ) 
		 VALUES (
		 #{manage_no}
		 ,#{wname}
		 ,#{wmemo}
		 ,Now()
		 ,#{wid}
		)
	
	</insert>
	<insert id="updateMemoData" parameterType="java.util.HashMap" useGeneratedKeys="true" keyColumn="mm_idx" keyProperty="mm_idx">
		
		update  memo_master set 
		
		
		 mm_user_name = #{wname}
		 ,mm_memo = #{wmemo}
		 ,mm_wdate = Now()
		
		where 1=1
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(idx)" >
		and  mm_idx=${idx}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(manage_no)" >
		and  mm_manage_no=#{manage_no}
		</if>
	
	</insert>
	
	
	<insert id="deleteMemoData" parameterType="java.util.HashMap" useGeneratedKeys="true" keyColumn="mm_idx" keyProperty="mm_idx">
		delete from  memo_master 
		where 1=1
		and  mm_idx=${idx}
	</insert>
	
	<select id="selectMemoList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		select *,(row_number() over()) as no 
		from memo_master 
		where 1=1
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(manage_no)" >
		and mm_manage_no=#{manage_no}
		</if>
	</select>
	
	<select id="selectAddressFromJijuk" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		select *,(row_number() over()) as NO
  	from jijuk_2024
  	WHERE 1=1
	<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(sido_nm)" >
	and sido_nm=#{sido_nm}
	</if>
	<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(sgg_nm)" >
	and sgg_nm=#{sgg_nm}
	</if>
	<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(emd_nm)" >
	and emd_nm=#{emd_nm}
	</if>
	<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(ri_nm)" >
	and ri_nm=#{ri_nm}
	</if>
	<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(jibun)" >
	and jibun=#{jibun}
	</if>
	<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(address)" >
	AND regexp_replace(juso,'\s+',' ') LIKE '%${address}%' 
	limit 100
	</if>
	</select>
	
  <select id="selectAddressFromJijuk1" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		select *,(row_number() over()) as NO
  	from jijuk_2024
  	WHERE 1=1
	<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(sido_nm)" >
	and sido_nm=#{sido_nm}
	</if>
	<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(sgg_nm)" >
	and sgg_nm=#{sgg_nm}
	</if>
	<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(emd_nm)" >
	and (emd_nm=#{emd_nm} or ri_nm=#{emd_nm}) 
	</if>
	<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(jibun)" >
	and jibun=#{jibun}
	</if>
	<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(address)" >
	AND regexp_replace(juso,'\s+',' ') LIKE '%${address}%' 
	limit 100
	</if>
	</select>
	
	<select id="selectJijukFromJisangAddress" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		select *
		,(row_number() over()) as NO
		,j2.PNU,
       j2.JIBUN,
       j2.SIDO_NM,
       j2.SGG_NM,
       j2.EMD_NM,
       j2.RI_NM,
       j2.GOVER_OWN_YN,
       j2.JISANG_STATUS,
       j2.JIJUK_AREA,
       j2.JIBUN_FULL,
       j2.JIMOK_TEXT,
       j2.DOSIPLAN,
       j2.PIPE_OVERLAP_YN,
       jm.jm_permitted_yn as PERMITTED_YN,
       jm.jm_comple_yn as COMPLE_YN

	from jijuk_2024 j2 left join jisang_master jm on jm.jm_pnu =j2.pnu  
	WHERE 1=1
	<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(sido_nm)" >
	and j2.sido_nm=#{sido_nm}
	</if>
	<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(sgg_nm)" >
	and j2.sgg_nm=#{sgg_nm}
	</if>
	<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(emd_nm)" >
	and j2.emd_nm=#{emd_nm}
	</if>
	<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(ri_nm)" >
	and j2.ri_nm=#{ri_nm}
	</if>
	<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(jibun)" >
	and j2.jibun=#{jibun}
	</if>
	<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(address)" >
	AND regexp_replace(j2.juso,'\s+',' ') LIKE '%${address}%' 	
	</if>
	</select>	
	
	<select id="selectJijuk" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT *
		FROM jijuk_2024
		WHERE 1=1
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(sido_nm)" >
			and sido_nm=#{sido_nm}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(sgg_nm)" >
			and sgg_nm=#{sgg_nm}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(emd_nm)" >
			and emd_nm=#{emd_nm}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(ri_nm)" >
			and ri_nm=#{ri_nm}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(jibun)" >
			and ri_nm=#{jibun}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(TARGET_PNU)" >
			and pnu = #{TARGET_PNU}
		</if>
	</select>
	
	
	<select id="selectGetPLMSCompforeXML" parameterType="java.util.HashMap" resultType="Integer">
		select count(*) from plms_approval where pa_dockey=#{dockey} and (pa_status is null or pa_status not in ('X'))
	</select>
	
	<update id="updateEchoOut" parameterType="java.util.HashMap" >
		update plms_approval set pa_out_flag=#{outflag},pa_out_url=#{outurl} where pa_dockey=#{dockey}
	</update>
	
	<insert id="insertEchoOut" parameterType="java.util.HashMap" useGeneratedKeys="true" keyColumn="pa_idx" keyProperty="pa_idx">
		insert into plms_approval (pa_seq,pa_dockey,pa_out_flag,pa_out_url,pa_usernm,pa_deptcd,pa_deptnm,pa_updeptcd)
		values
		(#{seq},#{dockey},#{outflag},#{outurl},#{usernm},#{deptcd},#{deptnm},#{updeptcd})
	</insert>
	
	<select id="selectNextAppovalNo" parameterType="java.util.HashMap" resultType="Integer">

		SELECT nextval('APPROVAL_CNT_SEQ')
	</select>
	
	<select id="selectUsePurposList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
	    <![CDATA[
	    SELECT * 
	    FROM sys_code
	    WHERE sc_group_code = 'GVR000'
	      AND sc_use_yn = 'Y'
	      AND sc_code != 'GVR000'
	    ORDER BY sc_sort_order ASC
	    ]]>
	</select>
	
	<select id="selectJisaList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
	    <![CDATA[
	    SELECT * 
	    FROM sys_code
	    WHERE sc_group_code = 'JSA000'
	      AND sc_use_yn = 'Y'
	      AND sc_code != 'JSA000'
	      AND sc_code != 'JSA999'
	    ORDER BY sc_sort_order ASC
	    ]]>
	</select>
	
		<insert id="insertLog" parameterType="HashMap">
            <![CDATA[ 
			INSERT INTO SYS_LOG
    			(SEQ,LOG_DATE, EMPCD, LOG_MENU_CD, GUBUN)
			VALUES 
				(nextVal(LOG_SEQ),Now(),#{EMPCD},#{LOG_MENU_CD},#{GUBUN})
			]]>
	</insert>

<select id="selectGetPLMSCompforXML" parameterType="java.util.HashMap" resultType="Integer">
		SELECT count(*) FROM PLMS_APPROVAL where pa_DOCKEY = #{DOCKEY} and (pa_status is null or pa_status not in ('X'))
	</select>
	
	<update id="updateGetPLMSCompforXML" parameterType="HashMap">
		UPDATE PLMS_APPROVAL SET
		pa_GUBUN = #{GUBUN}
		, pa_LANG = #{LANG}
		, pa_SDATE = #{SDATE}
		, pa_STIME = #{STIME}
		, pa_USERCD = #{USERCD}
		, pa_SEARCHKEY1 = #{SEARCHKEY1}
		, pa_WDID = #{WDID}
		, pa_URL = #{URL}
		, pa_STATUS = #{STATUS}
		, pa_DISPOSE = #{DISPOSE}
		WHERE pa_DOCKEY = #{DOCKEY}
	</update>
	
	<insert id="insertGetPLMSCompforXML" parameterType="HashMap">
           
			insert into PLMS_APPROVAL
				( pa_SEQ, pa_GUBUN, pa_LANG, pa_SDATE, pa_STIME, pa_USERCD, pa_SEARCHKEY1, pa_DOCKEY, pa_WDID, pa_URL, pa_STATUS )
			values
				( nextval('APPROVAL_CNT_SEQ'),	#{GUBUN}, #{LANG}, #{SDATE}, #{STIME}, #{USERCD}#, #{SEARCHKEY1}, #{DOCKEY}, #{WDID}, #{URL}, #{STATUS})
			
	</insert>
	
	<select id="selectJijukBefore" parameterType="java.util.HashMap" resultType="java.util.HashMap">
SELECT PNU
     , JISANG_NO AS JISANG_NO_OLD
     , JISANG_STATUS AS JISANG_STATUS_OLD
     , GOVER_OWN_YN AS GOVER_OWN_YN_OLD
     , PIPE_OVERLAP_YN AS PIPE_OVERLAP_YN_OLD
     , JISA AS JISA_OLD
  FROM JIJUK_2024
 WHERE PNU IN ( SELECT PNU FROM JISANG_MASTER WHERE jm_JISANG_NO = #{JISANGNO} )
</select>

<update id="updateJijukMasterStatus" parameterType="HashMap">
		UPDATE JIJUK_2024 SET
		JISANG_STATUS = 'N'
		, ERP_NO = ''
		, JISANG_NO = ''
		, DOSIPLAN = ''
		, GOVER_OWN_YN = 'N'
		, JISA = ''
		WHERE PNU IN ( SELECT jm_pnu as PNU FROM JISANG_MASTER WHERE jm_JISANG_NO = #{JISANGNO} )
	</update>
	
	<select id="selectPnuIssue" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT T.pnu as PNU
		, T.seq as SEQ
		, T.code_depth1 as CODE_DEPTH1
		, (SELECT S.CODE_NAME FROM PLMS_ISSUE_CODE S WHERE S.CODE = T.CODE_DEPTH1) AS CODE_DEPTH1_NAME
		, T.code_depth2 as CODE_DEPTH2
		, (SELECT S.CODE_NAME FROM PLMS_ISSUE_CODE S WHERE S.CODE = T.CODE_DEPTH2) AS CODE_DEPTH2_NAME
	  , T.code_depth3 as CODE_DEPTH3
	  , (SELECT S.CODE_NAME FROM PLMS_ISSUE_CODE S WHERE S.CODE = T.CODE_DEPTH3) AS CODE_DEPTH3_NAME
	  , T.issue_comment as ISSUE_COMMENT
	  , T.del_flag as DEL_FLAG
	  , T.del_comment as DEL_COMMENT
	  , TO_CHAR(T.ISSUE_DATE, 'YYYY-MM-DD HH24:MI:SS') AS ISSUE_DATE
	  , T.addrcode as ADDRCODE
	  , T.jibun as JIBUN
	  ,registed_yn as REGISTED_YN
	  ,permitted_yn as PERMITTED_YN
	  FROM plms_POTENTIAL_ISSUE T
	  WHERE ((T.PNU = #{PNU} AND COALESCE(T.PNU, '99999') != '99999')
	  OR  ( T.addrcode= #{ADDRCODE} AND T.JIBUN = #{JIBUN} ))
	  AND T.DEL_FLAG = 'N'
	  ORDER BY T.ISSUE_DATE DESC
	</select>
	
	<select id="selectPnuIssueFromScheduler" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT T.pnu as PNU
		, T.seq as SEQ
		, T.code_depth1 as CODE_DEPTH1
		, (SELECT S.CODE_NAME FROM PLMS_ISSUE_CODE S WHERE S.CODE = T.CODE_DEPTH1) AS CODE_DEPTH1_NAME
		, T.code_depth2 as CODE_DEPTH2
		, (SELECT S.CODE_NAME FROM PLMS_ISSUE_CODE S WHERE S.CODE = T.CODE_DEPTH2) AS CODE_DEPTH2_NAME
	  , T.code_depth3 as CODE_DEPTH3
	  , (SELECT S.CODE_NAME FROM PLMS_ISSUE_CODE S WHERE S.CODE = T.CODE_DEPTH3) AS CODE_DEPTH3_NAME
	  , T.issue_comment as ISSUE_COMMENT
	  , T.del_flag as DEL_FLAG
	  , T.del_comment as DEL_COMMENT
	  , TO_CHAR(T.ISSUE_DATE, 'YYYY-MM-DD HH24:MI:SS') AS ISSUE_DATE
	  , T.addrcode as ADDRCODE
	  , T.jibun as JIBUN
	  ,registed_yn as REGISTED_YN
	  ,permitted_yn as PERMITTED_YN
	  FROM plms_POTENTIAL_ISSUE T
	  WHERE ((T.PNU = #{pnu} AND COALESCE(T.PNU, '99999') != '99999')
	  OR  ( T.addrcode= #{ADDRCODE} AND T.JIBUN = #{JIBUN} ))
	  AND T.DEL_FLAG = 'N'
	  ORDER BY T.ISSUE_DATE DESC
	</select>
	
	<!--  -->
	<select id="selectJijuk_PNU" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT *
		FROM jijuk_2024
		WHERE 1=1
		and pnu = #{TARGET_PNU}
	</select>
	
<!-- JIJUK PNU와 비교해서 지상권 추가정보 조회 -->
<select id="selectAddressExtraInfo_JISANG" parameterType="java.util.HashMap" resultType="java.util.HashMap">
	SELECT  
		JM.jm_jisang_no
		, JM.jm_sido_nm
		, JM.jm_sgg_nm
		, JM.jm_emd_nm
		, JM.jm_ri_nm
		, JM.jm_jibun
		, JM.jm_jisa
		, JM.jm_chuideuk_date
		, JM.jm_chuideuk_money
		, JM.jm_jijuk_area
		, JM.jm_pipe_name
		, JM.jm_sun_gubun
		, JM.jm_yongdo
		, JM.jm_dosiplan
		, JM.jm_comple_yn
		, JM.jm_pyeonib_area
		, JM.jm_use_state
		, JM.jm_deunggi_date
		, JM.jm_deunggi_no
		, JM.jm_deunggiso
		, JM.jm_jasan_no
		, JM.jm_cancle_yn
		, JM.jm_cancle_date
		, JM.jm_cancle_empcd
		, JM.jm_cancle_name
		, JM.jm_cancle_bosang_yn
		, JM.jm_cancle_bosang_money
		, JM.jm_gover_own_yn
		, JM.jm_bunhal_yn
		, JM.jm_bunhal_date
		, JM.jm_bunhal_reason
		, JM.jm_bunhal_org_no
		, JM.jm_addrcode
		, JM.jm_pnu
		, JM.jm_gammoney
		, JM.jm_remainder_money
		, JM.jm_location
		, JM.jm_special_cont
		, JM.jm_jimok_text
		, JM.jm_jibun_2
		, JM.jm_dockey
		, JM.jm_toji_type
		, JM.jm_bunhal_comment
		, JM.jm_cancle_comment
		, JM.jm_cancle_reason
		, JM.jm_jasan_money
		, JM.jm_merge_comment
		, JM.jm_merge_no
		, JM.jm_merge_reason
		, JM.jm_merge_rep_yn
		, JM.jm_pipe_yn
		, JM.jm_save_status
		, JM.jm_set_money
		, JM.jm_permitted_yn
		, JM.jm_wdate
		, JM.jm_udate
		, JM.jm_account_yn
		, JM.jm_pipe_meter
		, JM.jm_manage_yn
		, JM.jm_idx
	FROM jisang_master JM
	WHERE
		JM.jm_jisang_no = #{jisang_no}
</select>
	
<!-- JIJUK PNU와 비교해서 회사토지 추가정보 조회 -->
<select id="selectAddressExtraInfo_GOVER" parameterType="java.util.HashMap" resultType="java.util.HashMap">
	SELECT 
		 GM.gm_gover_no
		, GM.gm_jisa
		, GM.gm_yongdo
		, GM.gm_pipe_name
		, GM.gm_sun_gubun
		, GM.gm_pipe_meter
		, GM.gm_cancle_yn
		, GM.gm_cancle_date
		, GM.gm_cancle_name
		, GM.gm_cancle_empcd
		, GM.gm_use_purpos
		, GM.gm_gover_st_date
		, GM.gm_gover_ed_date
		, GM.gm_pmt_status
		, GM.gm_dockey
		, GM.gm_pmt_office
		, GM.gm_adm_office
		, GM.gm_office_depart
		, GM.gm_office_charege
		, GM.gm_office_contact
		, GM.gm_office_mobile
		, GM.gm_gover_period
		, GM.gm_pipe_meter2
		, GM.gm_save_status
		, GM.gm_newregreason
		, GM.gm_occunonpayreason
		, GM.gm_permpossyn
		, GM.gm_occuprepayyn
		, GM.gm_occuprepaydate
		, GM.gm_udate
		, GM.gm_wdate
		, GM.gm_exemptionyn
		, GM.gm_idx
	FROM gover_master GM
	WHERE GM.gm_gover_no = #{jisang_no}
</select>

<!-- JIJUK PNU와 비교해서 미지정 추가정보 조회 -->
<select id="selectAddressExtraInfo_DOPCO" parameterType="java.util.HashMap" resultType="java.util.HashMap">
	SELECT 
		 DM.dom_dopco_no
		, DM.dom_sido_nm
		, DM.dom_sgg_nm
		, DM.dom_emd_nm
		, DM.dom_ri_nm
		, DM.dom_jibun
		, DM.dom_addrcode
		, DM.dom_jisa
		, DM.dom_dopco_status
		, DM.dom_yongdo
		, DM.dom_pipe_name
		, DM.dom_sun_gubun
		, DM.dom_jijuk_area
		, DM.dom_gover_own_yn
		, DM.dom_dosiplan
		, DM.dom_jasan_no
		, DM.dom_comple_yn
		, DM.dom_deunggi_date
		, DM.dom_deunggi_no
		, DM.dom_deunggiso
		, DM.dom_pnu
		, DM.dom_cancle_yn
		, DM.dom_cancle_date
		, DM.dom_cancle_name
		, DM.dom_cancle_empcd
		, DM.dom_jimok_text
		, DM.dom_chuideuk_date
		, DM.dom_jasan_money
		, DM.dom_souja_name
		, DM.dom_dom_wdate
		, DM.dom_dom_udate
		, DM.dom_idx
	FROM dopco_master DM
	WHERE
		DM.dom_dopco_no = #{jisang_no}
</select>

<!-- JIJUK PNU와 비교해서 지상권 추가정보 조회 -->
<select id="selectAddressExtraInfo_NOTSET" parameterType="java.util.HashMap" resultType="java.util.HashMap">
	SELECT 
		 NM.nm_notset_no
		, NM.nm_sido_nm
		, NM.nm_sgg_nm
		, NM.nm_emd_nm
		, NM.nm_ri_nm
		, NM.nm_jibun
		, NM.nm_jisa
		, NM.nm_jijuk_area
		, NM.nm_pipe_name
		, NM.nm_sun_gubun
		, NM.nm_gover_own_yn
		, NM.nm_addrcode
		, NM.nm_pnu
		, NM.nm_jimok_text
		, NM.nm_dockey
		, NM.nm_pipe_yn
		, NM.nm_pipe_meter
		, NM.nm_pipe_meter2
		, NM.nm_toji_type
		, NM.nm_del_flag
		, NM.nm_comple_yn
		, NM.nm_wdate
		, NM.nm_udate
		, NM.nm_del_date
		, NM.nm_comple_date
		, NM.nm_manage_yn
		, NM.nm_idx
	FROM notset_master NM
	WHERE
		NM.nm_notset_no = #{jisang_no}
</select>
	
</mapper>