<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="jisangSQL">
<select id="selectAllList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		select * from jisang_master jm LEFT JOIN jisang_souja js ON js.js_jisang_no=jm.jm_jisang_no
		where 1=1
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(idx)" >
		and jm.jm_jisang_no=#{idx}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(index)" >
		and jm_idx=cast(${index} as varchar)
		</if>
	</select>
	<select id="selectAllData" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		select *
		,concat(jm_sido_nm,' ',jm_sgg_nm,' ',jm_emd_nm,' ',jm_ri_nm,' ',jm_jibun) as address
		from jisang_master 
		where 1=1
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(idx)" >
		and jm_jisang_no=#{idx}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(index)" >
		and jm_idx=cast(#{index} as integer)
		</if>
		
	</select>
	<select id="selectSoyujaData" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		select *,(row_number() over()) as no 
		from jisang_souja 
		where 1=1
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(idx)" >
			and js_jisang_no=#{idx}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(js_idx)" >
			and js_idx=CAST(#{js_idx} AS INTEGER)
		</if>
		
	</select>
	
	<select id="selectPermitList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		select *,(row_number() over()) as no 
		from jisang_master jm left join jisang_permit_master jpm on jpm.jpm_dockey=jm.jm_dockey
		where 1=1
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(idx)" >
		and jm.jm_jisang_no=#{idx}
		</if>
			AND jm.jm_dockey IS NOT null
		AND jpm.jpm_dockey IS NOT null
		
		
	</select>
	
	
	<select id="selectAtcFileList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		select *,(row_number() over()) as no 
		from jisang_atcfile 
		where 1=1
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(idx)" >
		and ja_jisang_no=#{idx}
		</if>
		
		
	</select>
	
	<select id="selectModifyList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		select *,(row_number() over()) as no 
		from jisang_modify 
		where 1=1
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(idx)" >
		and jm_jisang_no=#{idx}
		</if>
			
	</select>
	<select id="selectMergeList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		select *,(row_number() over()) as no 
		from jisang_merge 
		where 1=1
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(idx)" >
		and jm_jisang_no=#{idx}
		</if>
			
	</select>
	<select id="selectIssueList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		select (row_number() over()) as NO
		 , to_char(pi_issue_date,'YYYY-MM-DD HH:MM:SS') as issue_date
		 ,*
		  FROM potential_issue PI
		  LEFT JOIN 
		  (
		
				SELECT 
				jm.jm_jisang_no AS manage_no
				,COALESCE(jm.jm_comple_yn,'') AS comple_yn
				,COALESCE(jm.jm_permitted_yn,'') AS permitted_yn
				,SUBSTRING(jm.jm_jisang_no,1,1) AS rtype
				 FROM jisang_master jm
				 
				 UNION all
				 
				 
					SELECT 
				gm.gm_gover_no AS manage_no
				,COALESCE('','') AS comple_yn
				,COALESCE('','') AS permitted_yn
				,SUBSTRING(gm.gm_gover_no,1,1) AS rtype
				
				 FROM gover_master gm
				 
				 UNION all
				 
				 	SELECT 
				nm.nm_notset_no AS manage_no
				,COALESCE('','') AS comple_yn
				,COALESCE('','') AS permitted_yn
				,SUBSTRING(nm.nm_notset_no,1,1) AS rtype
				 FROM notset_master nm
		 
		 ) AS u
		 ON PI.pi_manage_no = u.manage_no
		 WHERE 1=1
		
		and pi_pnu=#{pnu}
			
	</select>
	<select id="selectIssueHistoryList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT *,(row_number() over()) as no 
		 FROM  potential_issue pi left join potential_issue_history pih on pi.pi_pnu=pih.pih_pnu 
		WHERE 1=1
		and pih_pnu=#{pnu}
		
			
	</select>
	
	<select id="selectPnuAtcFileList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		select *,(row_number() over()) as no 
		from pnu_atcfile 
		where 1=1
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(idx)" >
		and pa_manage_no=#{idx}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(pnu)" >
		and pa_pnu=#{pnu}
		</if>
	</select>
	
	
	<select id="selectIssueCodeAtcFileList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		select *,(row_number() over()) as no 
		from issue_code_atc_file 
		where 1=1
		
		and icaf_code in (#{issueManualCode1},#{issueManualCode2},#{issueManualCode3})
		
			
	</select>
	
	<!-- selectBasicSearchList 지적정보에서 검색-->
	<select id="selectBasicSearchList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		select *,(row_number() over()) as no 
		FROM jijuk_2024 jm2
		WHERE 1=1
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(sido_nm)" >
		and jm2.sido_nm=#{sido_nm}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(sgg_nm)" >
			and regexp_replace(jm2.sgg_nm,'[\"]','','g')=#{sgg_nm}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(emd_nm)" >
			and regexp_replace(jm2.emd_nm,'[\"]','','g')=#{emd_nm}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(ri_nm)" >
			and regexp_replace(jm2.ri_nm,'[\"]','','g')=#{ri_nm}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(jibun)" >
			and jm2.jibun like '%${jibun}%'
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(address)" >
			and regexp_replace(jm2.juso,'[\"]','','g') like '%${address}%'
		</if>
		AND jm2.pnu IS NOT null

		limit 10
		

			
	</select>
	<select id="selectAllList2" parameterType="java.util.HashMap" resultType="java.util.HashMap"><![CDATA[
		select jm_set_money,jm_save_status from jisang_master 
	]]></select>

	<select id="selectJisangList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT *,
		(row_number() OVER()) AS no
		FROM (
		SELECT jm.jm_idx AS index,
		jm.jm_jisang_no AS idx,
		0 AS gidx,
		jm.jm_jisa AS jisa,
		jm.jm_save_status AS save_status,
		jm.jm_account_yn AS account_yn,
		jm.jm_cancel_date AS cancel_date,
		COALESCE(jm.jm_pipe_yn, 'N') AS pipe_yn,
		jm.jm_toji_type AS toji_type,
		jm.jm_pipe_meter AS pipe_meter,
		jm.jm_jimok_text AS jimok_text,
		js.js_souja_name AS souja_name,
		COALESCE(jm.jm_jijuk_area, NULL) AS jijuk_area,
		COALESCE(jm.jm_pyeonib_area, NULL) AS pyeonib_area,
		jm.jm_sido_nm AS sido_nm,
		jm.jm_sgg_nm AS sgg_nm,
		jm.jm_emd_nm AS emd_nm,
		jm.jm_ri_nm AS ri_nm,
		jm.jm_jibun AS jibun,
		jm.jm_deunggi_date AS deunggi_date,
		TRIM(CONCAT(jm.jm_sido_nm, ' ', jm.jm_sgg_nm, ' ', jm.jm_ri_nm, ' ', jm.jm_jibun)) AS address,
		COALESCE(jm.jm_jasan_no, '') AS jasan_no,
		COALESCE(jm.jm_comple_yn, '') AS comple_yn,

		COALESCE(jm.jm_permitted_yn, '') AS permitted_yn,
		COALESCE(jm.jm_chuideuk_date, NULL) AS chuideuk_date,
		COALESCE('', '') AS gover_date,
		NULL AS pay_date,
		NULL AS gover_area,
		NULL AS gover_length,
		jm.jm_jasan_money AS jasan_money,
		NULL AS pay_money,
		jm.jm_cancel_yn AS cancel_yn,
		jm.jm_manage_yn AS manage_yn,
		jm.jm_dosiplan AS dosiplan,
		jjm.x AS x,
		jjm.y AS y,
		CASE
		WHEN (SELECT count(dm.dm_idx) FROM dosi_master dm WHERE dm.dm_pnu = jm.jm_pnu) > 0 THEN 'Y'
		WHEN (SELECT count(dm.dm_idx) FROM dosi_master dm WHERE dm.dm_pnu = jm.jm_pnu) = 0 THEN 'N'
		END AS toji_plan
		FROM jisang_master jm
		LEFT JOIN jisang_souja js ON js.js_jisang_no = jm.jm_jisang_no
		LEFT JOIN jijuk_2024 jjm ON jjm.pnu= jm.jm_pnu
		WHERE 1 = 1
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(jisa)" >
			and jm.jm_jisa=#{jisa}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(orderCol)" >
			ORDER BY ${orderCol} ${desc}
		</if>
		
		) AS r
		where 1=1
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(idx)" >
			and r.idx=#{idx}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(cancel_yn)" >
			and r.cancel_yn=#{cancel_yn}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(manageYn)" >
			and r.manage_yn=#{manageYn}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(dosiplan)" >
			and r.dosiplan=#{dosiplan}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(address)" >
			and r.address like '%${address}%'
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(jimokArray) and jimokArray.length > 0">
			and r.jimok_text IN
			<foreach item="item" index="index" collection="jimokArray" open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(souja)" >
			and r.souja_name like '%${souja}%'
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(jasan_no)" >
			and r.jasan_no like '%${jasan_no}%'
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(comple_yn)" >
			and r.comple_yn=#{comple_yn}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(cancel_yn)" >
			and r.cancel_yn=#{cancel_yn}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(account_yn)" >
			and r.account_yn=#{account_yn}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(start_date) and @org.apache.commons.lang3.ObjectUtils@isNotEmpty(end_date)" >
			and r.deunggi_date::date between #{start_date}::date and #{end_date}::date
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(right_overlap)" >
			and (SELECT COUNT(o.address) AS overlap
			FROM
			(
			(
			SELECT trim(concat(jm.jm_sido_nm,' ',jm.jm_sgg_nm,' ',jm.jm_ri_nm,' ',jm.jm_jibun)) as address
			FROM jisang_master jm LEFT JOIN jisang_souja js ON js.js_jisang_no=jm.jm_jisang_no
			where 1=1

			)
			) as o  WHERE o.address = r.address GROUP BY o.address ) >1
		</if>
<if test="length>0">
			limit #{length} offset #{start}
		</if>
		

	</select>

<select id="selectJisangListDemo" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT *,
		(row_number() OVER()) AS no
		FROM (
		SELECT jm.jm_idx AS index,
		jm.jm_jisang_no AS idx,
		0 AS gidx,
		jm.jm_jisa AS jisa,
		jm.jm_save_status AS save_status,
		jm.jm_account_yn AS account_yn,
		jm.jm_cancel_date AS cancel_date,
		COALESCE(jm.jm_pipe_yn, 'N') AS pipe_yn,
		jm.jm_toji_type AS toji_type,
		jm.jm_pipe_meter AS pipe_meter,
		jm.jm_jimok_text AS jimok_text,
		js.js_souja_name AS souja_name,
		COALESCE(jm.jm_jijuk_area, NULL) AS jijuk_area,
		COALESCE(jm.jm_pyeonib_area, NULL) AS pyeonib_area,
		jm.jm_sido_nm AS sido_nm,
		jm.jm_sgg_nm AS sgg_nm,
		jm.jm_emd_nm AS emd_nm,
		jm.jm_ri_nm AS ri_nm,
		jm.jm_jibun AS jibun,
		jm.jm_deunggi_date AS deunggi_date,
		TRIM(CONCAT(jm.jm_sido_nm, ' ', jm.jm_sgg_nm, ' ', jm.jm_ri_nm, ' ', jm.jm_jibun)) AS address,
		COALESCE(jm.jm_jasan_no, '') AS jasan_no,
		COALESCE(jm.jm_comple_yn, '') AS comple_yn,

		COALESCE(jm.jm_permitted_yn, '') AS permitted_yn,
		COALESCE(jm.jm_chuideuk_date, NULL) AS chuideuk_date,
		COALESCE('', '') AS gover_date,
		NULL AS pay_date,
		NULL AS gover_area,
		NULL AS gover_length,
		jm.jm_jasan_money AS jasan_money,
		NULL AS pay_money,
		jm.jm_cancel_yn AS cancel_yn,
		jm.jm_manage_yn AS manage_yn,
		jm.jm_dosiplan AS dosiplan,
		'126.613134733938' AS x,
		'33.4692482054001' AS y,
		CASE
		WHEN (SELECT count(dm.dm_idx) FROM dosi_master dm WHERE dm.dm_pnu = jm.jm_pnu) > 0 THEN 'Y'
		WHEN (SELECT count(dm.dm_idx) FROM dosi_master dm WHERE dm.dm_pnu = jm.jm_pnu) = 0 THEN 'N'
		END AS toji_plan
		FROM jisang_master jm
		LEFT JOIN jisang_souja js ON js.js_jisang_no = jm.jm_jisang_no
		
		WHERE 1 = 1
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(jisa)" >
			and jm.jm_jisa=#{jisa}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(orderCol)" >
			ORDER BY ${orderCol} ${desc}
		</if>
		
		) AS r
		where 1=1
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(idx)" >
			and r.idx=#{idx}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(cancel_yn)" >
			and r.cancel_yn=#{cancel_yn}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(manageYn)" >
			and r.manage_yn=#{manageYn}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(dosiplan)" >
			and r.dosiplan=#{dosiplan}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(address)" >
			and r.address like '%${address}%'
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(jimokArray) and jimokArray.length > 0">
			and r.jimok_text IN
			<foreach item="item" index="index" collection="jimokArray" open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(souja)" >
			and r.souja_name like '%${souja}%'
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(jasan_no)" >
			and r.jasan_no like '%${jasan_no}%'
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(comple_yn)" >
			and r.comple_yn=#{comple_yn}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(cancel_yn)" >
			and r.cancel_yn=#{cancel_yn}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(account_yn)" >
			and r.account_yn=#{account_yn}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(start_date) and @org.apache.commons.lang3.ObjectUtils@isNotEmpty(end_date)" >
			and r.deunggi_date::date between #{start_date}::date and #{end_date}::date
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(right_overlap)" >
			and (SELECT COUNT(o.address) AS overlap
			FROM
			(
			(
			SELECT trim(concat(jm.jm_sido_nm,' ',jm.jm_sgg_nm,' ',jm.jm_ri_nm,' ',jm.jm_jibun)) as address
			FROM jisang_master jm LEFT JOIN jisang_souja js ON js.js_jisang_no=jm.jm_jisang_no
			where 1=1

			)
			) as o  WHERE o.address = r.address GROUP BY o.address ) >1
		</if>
<if test="length>0">
			limit #{length} offset #{start}
		</if>
		

	</select>



	<select id="selectTotalCount" parameterType="java.util.HashMap" resultType="Integer">
		SELECT count(*) as count FROM (
		SELECT jm.jm_idx AS index,
		jm.jm_jisang_no AS idx,
		0 AS gidx,
		jm.jm_jisa AS jisa,
		jm.jm_save_status AS save_status,
		jm.jm_account_yn AS account_yn,
		jm.jm_cancel_date AS cancel_date,
		COALESCE(jm.jm_pipe_yn, 'N') AS pipe_yn,
		jm.jm_toji_type AS toji_type,
		jm.jm_pipe_meter AS pipe_meter,
		jm.jm_jimok_text AS jimok_text,
		js.js_souja_name AS souja_name,
		COALESCE(jm.jm_jijuk_area, NULL) AS jijuk_area,
		COALESCE(jm.jm_pyeonib_area, NULL) AS pyeonib_area,
		jm.jm_sido_nm AS sido_nm,
		jm.jm_sgg_nm AS sgg_nm,
		jm.jm_emd_nm AS emd_nm,
		jm.jm_ri_nm AS ri_nm,
		jm.jm_jibun AS jibun,
		jm.jm_chuideuk_date AS chuideuk_date,
		jm.jm_deunggi_date AS deunggi_date,
		TRIM(CONCAT(jm.jm_sido_nm, ' ', jm.jm_sgg_nm, ' ', jm.jm_ri_nm, ' ', jm.jm_jibun)) AS address,
		COALESCE(jm.jm_jasan_no, '') AS jasan_no,
		COALESCE(jm.jm_comple_yn, '') AS comple_yn,
		COALESCE(jm.jm_permitted_yn, '') AS permitted_yn,
		COALESCE(jm.jm_chuideuk_date, NULL) AS chuideuk_date,
		COALESCE('', '') AS gover_date,
		NULL AS pay_date,
		NULL AS gover_area,
		NULL AS gover_length,
		jm.jm_jasan_money AS jasan_money,
		NULL AS pay_money,
		jm.jm_cancel_yn AS cancel_yn,
		jm.jm_manage_yn AS manage_yn,
		jm.jm_dosiplan AS dosiplan,
		CASE
		WHEN (SELECT count(dm.dm_idx) FROM dosi_master dm WHERE dm.dm_pnu = jm.jm_pnu) > 0 THEN 'Y'
		WHEN (SELECT count(dm.dm_idx) FROM dosi_master dm WHERE dm.dm_pnu = jm.jm_pnu) = 0 THEN 'N'
		END AS toji_plan
		FROM jisang_master jm
		LEFT JOIN jisang_souja js ON js.js_jisang_no = jm.jm_jisang_no
		WHERE 1 = 1
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(jisa)" >
			and jm.jm_jisa=#{jisa}
		</if>
		) AS r
		where 1=1
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(idx)" >
			and r.idx=#{idx}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(cancelYn)" >
			and r.cancel_yn=#{cancelYn}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(manageYn)" >
			and r.manage_yn=#{manageYn}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(dosiplan)" >
			and r.dosiplan=#{dosiplan}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(address)" >
			and r.address like '%${address}%'
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(jimokArray) and jimokArray.length > 0">
			and r.jimok_text IN
			<foreach item="item" index="index" collection="jimokArray" open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(souja)" >
			and r.souja_name like '%${souja}%'
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(jasan_no)" >
			and r.jasan_no like '%${jasan_no}%'
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(comple_yn)" >
			and r.comple_yn=#{comple_yn}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(account_yn)" >
			and r.account_yn=#{account_yn}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(start_date) and @org.apache.commons.lang3.ObjectUtils@isNotEmpty(end_date)" >
			and r.deunggi_date::date between #{start_date}::date and #{end_date}::date
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(right_overlap)" >
			and (SELECT COUNT(o.address) AS overlap
			FROM
			(
			(
			SELECT trim(concat(jm.jm_sido_nm,' ',jm.jm_sgg_nm,' ',jm.jm_ri_nm,' ',jm.jm_jibun)) as address
			FROM jisang_master jm LEFT JOIN jisang_souja js ON js.js_jisang_no=jm.jm_jisang_no
			where 1=1
			)

			) as o  WHERE o.address = r.address GROUP BY o.address ) >1
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(toji_type)" >
			and r.toji_type=#{toji_type}
		</if>
	</select>
	
	<select id="selectJisangPermitTotalCount" parameterType="java.util.HashMap" resultType="Integer">
		SELECT count(*) as count FROM (
		SELECT jpm.jpm_idx AS index,
		jpm.jpm_pmt_no AS idx,
		jpm.jpm_echo_no as echo_no,
		jpm.jpm_use_purpos as use_purpos,
		jpm.jpm_use_st_date as use_st_date,
		jpm.jpm_use_ed_date as use_ed_date,
		jpm.jpm_spot_result as spot_result,
		jpm.jpm_review as review,
		jpm.jpm_contract as contract,
		jpm.jpm_pmt_status as pmt_status,
		jpm.jpm_dockey as dockey,
		jpt.jpt_jisang_no AS jisang_no,
		jpt.jpt_pmt_user as pmt_user
		,jpt.jpt_soyuja as soyuja
		,jpt.jpt_jimok as jimok
		,jpt.jpt_jasan_no as jasan_no
		,jpt.jpt_addr as addr
		,jpt.jpt_jibun as jibun
		,jm.jm_jisa as jisa
		 
		FROM jisang_permit_master jpm
			LEFT JOIN jisang_permit_togi jpt ON jpt.jpt_pmt_no=jpm.jpm_pmt_no
			LEFT JOIN jisang_master jm ON jm.jm_jisang_no=jpt.jpt_jisang_no
		) as r
		WHERE 1 = 1
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(jisa)" >
		and r.jisa=#{jisa}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(status)" >
		and r.pmt_status=#{status}
		</if>
		
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(address)" >
		and r.addr like '%${address}%'
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(jibun)" >
		and r.jibun = #{jibun}
		</if>
		
		
		
	</select>
	 <select id="selectJisangPermitList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT *,
		(row_number() OVER()) AS no
		FROM (
		SELECT jpm.jpm_idx AS index,
		jpm.jpm_pmt_no AS idx,
		jpm.jpm_echo_no as echo_no,
		jpm.jpm_use_purpos as use_purpos,
		jpm.jpm_use_st_date as use_st_date,
		jpm.jpm_use_ed_date as use_ed_date,
		jpm.jpm_spot_result as spot_result,
		jpm.jpm_review as review,
		jpm.jpm_contract as contract,
		jpm.jpm_pmt_status as pmt_status,
		jpm.jpm_dockey as dockey,
		jpt.jpt_jisang_no AS jisang_no,
		jpt.jpt_pmt_user as pmt_user
		,jpt.jpt_soyuja as soyuja
		,jpt.jpt_jimok as jimok
		,jpt.jpt_jasan_no as jasan_no
		,jpt.jpt_addr as addr
		,jpt.jpt_jibun as jibun
		,jm.jm_jisa as jisa
		 
		FROM jisang_permit_master jpm
			LEFT JOIN jisang_permit_togi jpt ON jpt.jpt_pmt_no=jpm.jpm_pmt_no
			LEFT JOIN jisang_master jm ON jm.jm_jisang_no=jpt.jpt_jisang_no
		WHERE 1 = 1
		
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(orderCol)" >
			ORDER BY ${orderCol} ${desc}
		</if>
		
		) AS r
		where 1=1
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(jisa)" >
		and r.jisa=#{jisa}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(status)" >
		and r.pmt_status=#{status}
		</if>
		
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(address)" >
		and r.addr like '%${address}%'
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(jibun)" >
		and r.jibun = #{jibun}
		</if>
		
		
		<if test="length>0">
			limit #{length} offset #{start}
		</if>
		

	</select> 
	
	
	<select id="selectPermitData" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT *,
		(row_number() OVER()) AS no
		FROM (
		SELECT jpm.jpm_idx AS index,
		jpm.jpm_pmt_no AS idx,
		jpm.jpm_echo_no as echo_no,
		jpm.jpm_use_purpos as use_purpos,
		jpm.jpm_use_st_date as use_st_date,
		jpm.jpm_use_ed_date as use_ed_date,
		jpm.jpm_spot_result as spot_result,
		jpm.jpm_review as review,
		jpm.jpm_contract as contract,
		jpm.jpm_pmt_status as pmt_status,
		jpm.jpm_dockey as dockey,
		jpt.jpt_jisang_no AS jisang_no,
		jpt.jpt_pmt_user as pmt_user
		,jpt.jpt_soyuja as soyuja
		,jpt.jpt_jimok as jimok
		,jpt.jpt_jasan_no as jasan_no
		,jpt.jpt_addr as addr
		,jpt.jpt_jibun as jibun
		,jm.jm_jisa as jisa
		 
		FROM jisang_permit_master jpm
			LEFT JOIN jisang_permit_togi jpt ON jpt.jpt_pmt_no=jpm.jpm_pmt_no
			LEFT JOIN jisang_master jm ON jm.jm_jisang_no=jpt.jpt_jisang_no
		WHERE 1 = 1
		
		
		
		) AS r
		where 1=1
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(idx)" >
		and r.idx=#{idx}
		</if>
		
		
		
		
	</select>

	<select id="selectJisangBunhalList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT *,
		(row_number() OVER()) AS no
		FROM (

		SELECT jm.jm_idx AS index,
		jm.jm_jisang_no AS idx,
		0 AS gidx,
		jm.jm_jisa AS jisa,
		jm.jm_save_status AS save_status,
		jm.jm_account_yn AS account_yn,
		jm.jm_cancel_date AS cancel_date,
		COALESCE(jm.jm_pipe_yn, 'N') AS pipe_yn,
		jm.jm_toji_type AS toji_type,
		jm.jm_pipe_meter AS pipe_meter,
		jm.jm_jimok_text AS jimok_text,
		js.js_souja_name AS souja_name,
		COALESCE(jm.jm_jijuk_area, NULL) AS jijuk_area,
		COALESCE(jm.jm_pyeonib_area, NULL) AS pyeonib_area,
		jm.jm_sido_nm AS sido_nm,
		jm.jm_sgg_nm AS sgg_nm,
		jm.jm_emd_nm AS emd_nm,
		jm.jm_ri_nm AS ri_nm,
		jm.jm_jibun AS jibun,
		jm.jm_deunggi_date AS deunggi_date,
		TRIM(CONCAT(jm.jm_sido_nm, ' ', jm.jm_sgg_nm, ' ', jm.jm_ri_nm, ' ', jm.jm_jibun)) AS address,
		COALESCE(jm.jm_jasan_no, '') AS jasan_no,
		COALESCE(jm.jm_comple_yn, '') AS comple_yn,
		COALESCE(jm.jm_permitted_yn, '') AS permitted_yn,
		COALESCE(jm.jm_chuideuk_date, NULL) AS chuideuk_date,
		COALESCE('', '') AS gover_date,
		jm.jm_jasan_money AS jasan_money,
		jm.jm_cancel_yn AS cancel_yn,
		jm.jm_manage_yn AS manage_yn,
		jm.jm_dosiplan AS dosiplan,
		jb.jb_yongdo AS yongdo,
		jb.jb_set_money AS set_money,
		jb.jb_remainder_money AS remainder_money,
		jb.jb_profit_loss AS profit_loss,
		jb.jb_gover_own_yn AS gover_own_yn,
		jb.jb_gammoney AS gammoney,
		jb.jb_dockey AS dockey,
		jb.jb_demise AS demise,
		jb.jb_chuideuk_money AS chuideuk_money,
		jb.jb_bunhal_date AS bunhal_date,
		jb.jb_bunhal_org_no AS bunhal_org_no,
		jb.jb_bunhal_yn AS bunhal_yn,
		jjm.x AS x,
		jjm.y AS y,
		js.js_idx,
		NULL AS pay_date,
		NULL AS gover_area,
		NULL AS gover_length,
		NULL AS pay_money,
		CASE
		WHEN (SELECT count(dm.dm_idx) FROM dosi_master dm WHERE dm.dm_pnu = jb.jb_pnu) > 0 THEN 'Y'
		WHEN (SELECT count(dm.dm_idx) FROM dosi_master dm WHERE dm.dm_pnu = jb.jb_pnu) = 0 THEN 'N'
		END AS toji_plan
		FROM jisang_master jm
		LEFT JOIN jisang_souja js ON js.js_jisang_no = jm.jm_jisang_no
		LEFT JOIN jisang_bunhal jb ON jb.jb_jisang_no = jm.jm_jisang_no
		LEFT JOIN jijuk_2024 jjm ON jjm.pnu= jm.jm_pnu
		WHERE 1 = 1
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(jisa)" >
			and jb.jb_jisa=#{jisa}
		</if>
		) AS r
		where 1=1
		and r.idx !=''
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(idx)" >
			and r.idx=#{idx}
		</if>
<!--		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(manageYn)" >-->
<!--			and r.manage_yn=#{manageYn}-->
<!--		</if>-->
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(dosiplan)" >
			and r.dosiplan=#{dosiplan}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(address)" >
			and r.address like '%${address}%'
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(account_yn)" >
			and r.account_yn=#{account_yn}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(jimokArray) and jimokArray.length > 0">
			and r.jimok_text IN
			<foreach item="item" index="index" collection="jimokArray" open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(souja)" >
			and r.souja_name like '%${souja}%'
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(jasan_no)" >
			and r.jasan_no like '%${jasan_no}%'
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(start_date) and @org.apache.commons.lang3.ObjectUtils@isNotEmpty(end_date)" >
			and r.deunggi_date::date between #{start_date}::date and #{end_date}::date
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(right_overlap)" >
			and (SELECT COUNT(o.address) AS overlap
			FROM
			(
			(
			SELECT trim(concat(jb.jb_sido_nm,' ',jb.jb_sgg_nm,' ',jb.jb_ri_nm,' ',jb.jb_jibun)) as address
			FROM jisang_master jm LEFT JOIN jisang_souja js ON js.js_jisang_no=jb.jb_jisang_no
			where 1=1

			)
			) as o  WHERE o.address = r.address GROUP BY o.address ) >1
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(orderCol)" >
			ORDER BY r.${orderCol} ${desc}
		</if>
		<if test="length>0">
			limit #{length} offset #{start}
		</if>

	</select>

	<select id="selectJisangBunhalCount" parameterType="java.util.HashMap" resultType="Integer">
		SELECT count(*) as count FROM (
		SELECT jm.jm_idx AS index,
		jm.jm_jisang_no AS idx,
		0 AS gidx,
		jm.jm_jisa AS jisa,
		jm.jm_save_status AS save_status,
		jm.jm_account_yn AS account_yn,
		jm.jm_cancel_date AS cancel_date,
		COALESCE(jm.jm_pipe_yn, 'N') AS pipe_yn,
		jm.jm_toji_type AS toji_type,
		jm.jm_pipe_meter AS pipe_meter,
		jm.jm_jimok_text AS jimok_text,
		js.js_souja_name AS souja_name,
		COALESCE(jm.jm_jijuk_area, NULL) AS jijuk_area,
		COALESCE(jm.jm_pyeonib_area, NULL) AS pyeonib_area,
		jm.jm_sido_nm AS sido_nm,
		jm.jm_sgg_nm AS sgg_nm,
		jm.jm_emd_nm AS emd_nm,
		jm.jm_ri_nm AS ri_nm,
		jm.jm_jibun AS jibun,
		jm.jm_deunggi_date AS deunggi_date,
		TRIM(CONCAT(jm.jm_sido_nm, ' ', jm.jm_sgg_nm, ' ', jm.jm_ri_nm, ' ', jm.jm_jibun)) AS address,
		COALESCE(jm.jm_jasan_no, '') AS jasan_no,
		COALESCE(jm.jm_comple_yn, '') AS comple_yn,
		COALESCE(jm.jm_permitted_yn, '') AS permitted_yn,
		COALESCE(jm.jm_chuideuk_date, NULL) AS chuideuk_date,
		COALESCE('', '') AS gover_date,
		jm.jm_jasan_money AS jasan_money,
		jm.jm_cancel_yn AS cancel_yn,
		jm.jm_manage_yn AS manage_yn,
		jm.jm_dosiplan AS dosiplan,
		jb.jb_yongdo AS yongdo,
		jb.jb_set_money AS set_money,
		jb.jb_remainder_money AS remainder_money,
		jb.jb_profit_loss AS profit_loss,
		jb.jb_gover_own_yn AS gover_own_yn,
		jb.jb_gammoney AS gammoney,
		jb.jb_dockey AS dockey,
		jb.jb_demise AS demise,
		jb.jb_chuideuk_money AS chuideuk_money,
		jb.jb_bunhal_date AS bunhal_date,
		jb.jb_bunhal_org_no AS bunhal_org_no,
		jb.jb_bunhal_yn AS bunhal_yn,
		jjm.x AS x,
		jjm.y AS y,
		NULL AS pay_date,
		NULL AS gover_area,
		NULL AS gover_length,
		NULL AS pay_money,
		CASE
		WHEN (SELECT count(dm.dm_idx) FROM dosi_master dm WHERE dm.dm_pnu = jb.jb_pnu) > 0 THEN 'Y'
		WHEN (SELECT count(dm.dm_idx) FROM dosi_master dm WHERE dm.dm_pnu = jb.jb_pnu) = 0 THEN 'N'
		END AS toji_plan
		FROM jisang_master jm
		LEFT JOIN jisang_souja js ON js.js_jisang_no = jm.jm_jisang_no
		LEFT JOIN jisang_bunhal jb ON jb.jb_jisang_no = jm.jm_jisang_no
		LEFT JOIN jijuk_2024 jjm ON jjm.pnu= jm.jm_pnu
		WHERE 1 = 1
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(jisa)" >
			and jb.jb_jisa=#{jisa}
		</if>
		) AS r
		where 1=1
		and r.idx !=''
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(idx)" >
			and r.idx=#{idx}
		</if>
<!--		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(manageYn)" >-->
<!--			and r.manage_yn=#{manageYn}-->
<!--		</if>-->
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(dosiplan)" >
			and r.dosiplan=#{dosiplan}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(address)" >
			and r.address like '%${address}%'
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(jimokArray) and jimokArray.length > 0">
			and r.jimok_text IN
			<foreach item="item" index="index" collection="jimokArray" open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(account_yn)" >
			and r.account_yn=#{account_yn}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(souja)" >
			and r.souja_name like '%${souja}%'
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(jasan_no)" >
			and r.jasan_no like '%${jasan_no}%'
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(start_date) and @org.apache.commons.lang3.ObjectUtils@isNotEmpty(end_date)" >
			and r.deunggi_date::date between #{start_date}::date and #{end_date}::date
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(right_overlap)" >
			and (SELECT COUNT(o.address) AS overlap
			FROM
			(
			(
			SELECT trim(concat(jb.jb_sido_nm,' ',jb.jb_sgg_nm,' ',jb.jb_ri_nm,' ',jb.jb_jibun)) as address
			FROM jisang_master jm LEFT JOIN jisang_souja js ON js.js_jisang_no=jb.jb_jisang_no
			where 1=1

			)
			) as o  WHERE o.address = r.address GROUP BY o.address ) >1
		</if>

	</select>

	<select id="selectJibunList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
<!--		select *,(row_number() over()) as no,-->
<!--		TRIM(CONCAT(jb.jb_sido_nm, ' ', jb.jb_sgg_nm, ' ', jb.jb_ri_nm, ' ' ,jb.jb_emd_nm )) AS address,-->
<!--		jb.jb_jibun AS jibun-->
<!--		from jisang_bunhal jb-->
<!--		where 1 = 1-->
<!--		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(idx)" >-->
<!--		and jb.jb_bunhal_org_no = #{idx}-->
<!--		</if>-->

		SELECT
		row_number() OVER() AS no,
		TRIM(CONCAT(jb_sido_nm, ' ', jb_sgg_nm, ' ', jb_ri_nm, ' ', jb_jibun)) AS address,
		jb_jibun AS jibun,
		jb_idx, jb_jisang_no, jb_sido_nm, jb_sgg_nm, jb_emd_nm, jb_ri_nm, jb_jisa, jb_jijuk_area, jb_yongdo, jb_pyeonib_area, jb_jasan_no, jb_gover_own_yn, jb_cancel_yn, jb_bunhal_yn, jb_bunhal_date, jb_bunhal_reason, jb_bunhal_org_no, jb_addrcode, jb_pnu, jb_remainder_money, jb_jimok_text, jb_dockey, jb_toji_type, jb_pipe_yn, jb_bunhal_comment, jb_set_money, jb_bunhal_status, jb_chuideuk_money, jb_gammoney, jb_bosang_money, jb_profit_loss, jb_demise, jb_bunhal_complete
		FROM
		jisang_bunhal
		where 1 = 1
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(idx)" >
		AND jb_bunhal_org_no = #{idx}
		</if>
		GROUP BY
		jibun,  jb_idx, jb_jisang_no, jb_sido_nm, jb_sgg_nm, jb_emd_nm, jb_ri_nm, jb_jisa, jb_jijuk_area, jb_yongdo, jb_pyeonib_area, jb_jasan_no, jb_gover_own_yn, jb_cancel_yn, jb_bunhal_yn, jb_bunhal_date, jb_bunhal_reason, jb_addrcode, jb_pnu, jb_remainder_money, jb_jimok_text, jb_dockey, jb_toji_type, jb_pipe_yn, jb_bunhal_comment, jb_set_money, jb_bunhal_status, jb_chuideuk_money, jb_gammoney, jb_bosang_money, jb_profit_loss, jb_demise, jb_bunhal_complete
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(idx)" >
			,jb_bunhal_org_no
		</if>
	</select>
	
	
	<select id="selectjisangBunhalList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
<!--		select *,(row_number() over()) as no,-->
<!--		TRIM(CONCAT(jb.jb_sido_nm, ' ', jb.jb_sgg_nm, ' ', jb.jb_ri_nm, ' ' ,jb.jb_emd_nm )) AS address,-->
<!--		jb.jb_jibun AS jibun-->
<!--		from jisang_bunhal jb-->
<!--		where 1 = 1-->
<!--		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(idx)" >-->
<!--		and jb.jb_bunhal_org_no = #{idx}-->
<!--		</if>-->

		SELECT
		row_number() OVER() AS no,
		TRIM(CONCAT(jb_sido_nm, ' ', jb_sgg_nm, ' ', jb_ri_nm, ' ', jb_jibun)) AS address,
		jb_jibun AS jibun,
		jb_idx, jb_jisang_no, jb_sido_nm, jb_sgg_nm, jb_emd_nm, jb_ri_nm, jb_jisa, jb_jijuk_area, jb_yongdo, jb_pyeonib_area, jb_jasan_no, jb_gover_own_yn, jb_cancel_yn, jb_bunhal_yn, jb_bunhal_date, jb_bunhal_reason, jb_bunhal_org_no, jb_addrcode, jb_pnu, jb_remainder_money, jb_jimok_text, jb_dockey, jb_toji_type, jb_pipe_yn, jb_bunhal_comment, jb_set_money, jb_bunhal_status, jb_chuideuk_money, jb_gammoney, jb_bosang_money, jb_profit_loss, jb_demise, jb_bunhal_complete
		FROM
		jisang_bunhal
		where 1 = 1
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(idx)" >
		AND jb_bunhal_org_no = #{idx}
		</if>
		GROUP BY
		jibun,  jb_idx, jb_jisang_no, jb_sido_nm, jb_sgg_nm, jb_emd_nm, jb_ri_nm, jb_jisa, jb_jijuk_area, jb_yongdo, jb_pyeonib_area, jb_jasan_no, jb_gover_own_yn, jb_cancel_yn, jb_bunhal_yn, jb_bunhal_date, jb_bunhal_reason, jb_addrcode, jb_pnu, jb_remainder_money, jb_jimok_text, jb_dockey, jb_toji_type, jb_pipe_yn, jb_bunhal_comment, jb_set_money, jb_bunhal_status, jb_chuideuk_money, jb_gammoney, jb_bosang_money, jb_profit_loss, jb_demise, jb_bunhal_complete
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(idx)" >
			,jb_bunhal_org_no
		</if>
	</select>


	<select id="selectAllTmpData" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		select *
		,concat(jmt_sido_nm,' ',jmt_sgg_nm,' ',jmt_ri_nm,' ',jmt_jibun) as address
		from jisang_master_tmp
		where 1=1
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(idx)" >
			and jmt_jisang_no=#{idx}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(index)" >
			and jmt_idx=cast(#{index} as integer)
		</if>

	</select>

	<insert id="upsertJisangMasterTmp" parameterType="map">
		INSERT INTO jisang_master_tmp (
		jmt_jisang_no,
		jmt_idx,
		jmt_jisa,
		jmt_yongdo,
		jmt_pipe_name,
		jmt_sun_gubun,
		jmt_sido_nm,
		jmt_sgg_nm,
		jmt_ri_nm,
		jmt_jibun,
		jmt_jijuk_area,
		jmt_gover_own_yn,
		jmt_jasan_no,
		jmt_chuideuk_date,
		jmt_pyeonib_area,
		jmt_use_state,
		jmt_deunggi_date,
		jmt_deunggi_no,
		jmt_deunggiso,
		jmt_dosiplan,
		jmt_account_yn,
		jmt_cancel_date,
		jmt_chuideuk_money,
		jmt_gammoney,
		jmt_remainder_money,
		jmt_cancel_bosang_yn,
		jmt_cancel_bosang_money,
		jmt_cancel_reason,
		jmt_cancel_comment,
		jmt_cancel_yn
		) VALUES (
		#{jisang_no},
		#{idx},
		#{jisa},
		#{yongdo},
		#{pipe_name},
		#{sun_gubun},
		#{sido_nm},
		#{sgg_nm},
		#{ri_nm},
		#{jibun},
		#{jijuk_area},
		#{gover_own_yn},
		#{jasan_no},
		TO_DATE(#{chuideuk_date},'YYYY-MM-DD'),
		#{pyeonib_area},
		#{use_state},
		TO_DATE(#{deunggi_date},'YYYY-MM-DD'),
		#{deunggi_no},
		#{deunggiso},
		#{dosiplan},
		#{account_yn},
		TO_DATE(#{cancel_date},'YYYY-MM-DD'),
		#{chuideuk_money},
		#{gammoney},
		#{remainder_money},
		#{cancel_bosang_yn},
		#{cancel_bosang_money},
		#{cancel_reason},
		#{cancel_comment},
		'Y'
		)
		ON CONFLICT (jmt_jisang_no, jmt_idx)
		DO UPDATE SET
		jmt_jisa = EXCLUDED.jmt_jisa,
		jmt_yongdo = EXCLUDED.jmt_yongdo,
		jmt_pipe_name = EXCLUDED.jmt_pipe_name,
		jmt_sun_gubun = EXCLUDED.jmt_sun_gubun,
		jmt_sido_nm = EXCLUDED.jmt_sido_nm,
		jmt_sgg_nm = EXCLUDED.jmt_sgg_nm,
		jmt_ri_nm = EXCLUDED.jmt_ri_nm,
		jmt_jibun = EXCLUDED.jmt_jibun,
		jmt_jijuk_area = EXCLUDED.jmt_jijuk_area,
		jmt_gover_own_yn = EXCLUDED.jmt_gover_own_yn,
		jmt_jasan_no = EXCLUDED.jmt_jasan_no,
		jmt_chuideuk_date = EXCLUDED.jmt_chuideuk_date,
		jmt_pyeonib_area = EXCLUDED.jmt_pyeonib_area,
		jmt_use_state = EXCLUDED.jmt_use_state,
		jmt_deunggi_date = EXCLUDED.jmt_deunggi_date,
		jmt_deunggi_no = EXCLUDED.jmt_deunggi_no,
		jmt_deunggiso = EXCLUDED.jmt_deunggiso,
		jmt_dosiplan = EXCLUDED.jmt_dosiplan,
		jmt_account_yn = EXCLUDED.jmt_account_yn,
		jmt_cancel_date = EXCLUDED.jmt_cancel_date,
		jmt_chuideuk_money = EXCLUDED.jmt_chuideuk_money,
		jmt_gammoney = EXCLUDED.jmt_gammoney,
		jmt_remainder_money = EXCLUDED.jmt_remainder_money,
		jmt_cancel_bosang_yn = EXCLUDED.jmt_cancel_bosang_yn,
		jmt_cancel_bosang_money = EXCLUDED.jmt_cancel_bosang_money,
		jmt_cancel_reason = EXCLUDED.jmt_cancel_reason,
		jmt_cancel_comment = EXCLUDED.jmt_cancel_comment;
	</insert>
	
	<!-- 해지부분필수첨부파일 -->
	<insert id="insertJisangReqDoc1" parameterType="map">
		INSERT INTO jisang_req_doc1 (
		jrd_manage_no,
		jrd_fseq,
		jrd_fname,
		jrd_fpath,
		jrd_wdate
		) VALUES (
		#{jisang_no},
		#{fseq}::int,
		#{file_name},
		#{file_path},
		Now()
		
		)
		
	</insert>
	<update id="updateJisangReqDoc1" parameterType="map">
		update jisang_req_doc1 set 
		
		jrd_fname=#{file_name},
		jrd_fpath=#{file_path},
		jrd_wdate=Now()
		where jrd_manage_no=#{jisang_no} and jrd_fseq=#{fseq}::int 
	</update>
	<select id="selectJisangReqDoc1Count" parameterType="map" resultType="Integer">
		select count(*) as count from jisang_req_doc1
		where jrd_manage_no=#{jisang_no} and jrd_fseq=#{fseq}::int 
	</select>
	<select id="selectJisangReqDoc1" parameterType="map" resultType="java.util.HashMap">
		select * from jisang_req_doc1
		where jrd_manage_no=#{manage_no} 
	</select>
	

	<update id="updateJisangMaster" parameterType="map">
		UPDATE jisang_master
		SET
		jm_jisa = #{jm_jisa},
		jm_yongdo = #{jm_yongdo},
		jm_pipe_name = #{jm_pipe_name},
		jm_sun_gubun = #{jm_sun_gubun},
		jm_sido_nm = #{jm_sido_nm},
		jm_sgg_nm = #{jm_sgg_nm},
		jm_ri_nm = #{jm_ri_nm},
		jm_jibun = #{jm_jibun},
		jm_jijuk_area = #{jm_jijuk_area},
		jm_gover_own_yn = #{jm_gover_own_yn},
		jm_jasan_no = #{jm_jasan_no},
		jm_chuideuk_date = TO_DATE(#{jm_chuideuk_date}, 'YYYY-MM-DD'),
		jm_pyeonib_area = #{jm_pyeonib_area},
		jm_use_state = #{jm_use_state},
		jm_deunggi_date = TO_DATE(#{jm_deunggi_date}, 'YYYY-MM-DD'),
		jm_deunggi_no = #{jm_deunggi_no},
		jm_deunggiso = #{jm_deunggiso},
		jm_dosiplan = #{jm_dosiplan},
		jm_cancel_date = TO_DATE(#{jm_cancel_date}, 'YYYY-MM-DD'),
		jm_chuideuk_money = #{jm_chuideuk_money},
		jm_gammoney = #{jm_gammoney},
		jm_remainder_money = #{jm_remainder_money},
		jm_cancel_bosang_yn = #{jm_cancel_bosang_yn},
		jm_cancel_bosang_money = #{jm_cancel_bosang_money},
		jm_cancel_reason = #{jm_cancel_reason},
		jm_cancel_comment = #{jm_cancel_comment},
		jm_cancel_yn = 'Y'
		WHERE jm_jisang_no = #{jm_jisang_no}
		AND jm_idx = cast(#{jm_idx} as integer)
	</update>

	<delete id="deleteJisangMasterTmp" parameterType="map">
		DELETE FROM jisang_master_tmp
		WHERE jmt_jisang_no = #{idx}
		AND jmt_idx = cast(#{index} as integer)
	</delete>



	<!-- 지상기본정보 seq 가져오기 -->
	<select id="selectJisangMasterNextval" parameterType="java.util.HashMap" resultType="Integer">
		SELECT NEXTVAL('jisang_master_jm_idx_seq')
	</select>

	<!-- 지상권기본정보 저장 -->
	<insert id="insertJisangData" parameterType="java.util.HashMap" useGeneratedKeys="true" keyColumn="jm_idx" keyProperty="jm_idx">

		INSERT INTO jisang_master
		(
		 jm_idx
		 ,jm_jisang_no, jm_sido_nm, jm_sgg_nm, jm_emd_nm, jm_ri_nm
		 ,jm_jibun, jm_jisa
<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(chuideuk_date)">
		 ,jm_chuideuk_date
</if>
<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(chuideuk_money)" >
		 ,jm_chuideuk_money
		 </if>
		 <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(jijuk_area)" >
		 ,jm_jijuk_area
		 </if>
		 ,jm_pipe_name,jm_sun_gubun,jm_yongdo
		 <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(dosiplan)" >
		 ,jm_dosiplan
		 </if>
		 ,jm_comple_yn
		 ,jm_pyeonib_area
		 <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(use_state)" >
		 ,jm_use_state
		 </if>
		 <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(deunggi_date)" >
		 ,jm_deunggi_date
		 </if>
		 <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(deunggi_no)" >
		 ,jm_deunggi_no
		 </if>
		 <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(deunggiso)" >
		 ,jm_deunggiso
		 </if>
		 <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(jasan_no)" >
		 ,jm_jasan_no
		 </if>
		 ,jm_gover_own_yn
		 <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(pnu)" >
		 ,jm_pnu
		 </if>
		 ,jm_udate

		 )
		 VALUES (
		  #{idx}
		  ,#{seq}, #{sido_nm}, #{sgg_nm}, #{emd_nm}, #{ri_nm}
		  ,#{jibun}, #{jisa}
		   <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(chuideuk_date)" >
		  ,#{chuideuk_date}::date
		  </if>
		  <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(chuideuk_money)" >
		  ,NULLIF(cast(#{chuideuk_money} as varchar),'')::numeric
		  </if>
		  <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(jijuk_area)" >
		  ,nullif(cast(#{jijuk_area} as varchar),''):: integer
		  </if>
		  ,#{pipe_name}, #{sun_gubun}, #{yongdo}
		  <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(dosiplan)" >
		  , #{dosiplan}
		  </if>
		  , #{comple_yn}
		  ,nullif(cast(#{pyeonib_area} as varchar),''):: numeric
		  <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(use_state)" >
		  , #{use_state}
		  </if>
		  <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(deunggi_date)" >
		  ,#{deunggi_date}::date
		  </if>
		  <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(deunggi_no)" >
		  , #{deunggi_no}
		  </if>
		  <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(deunggiso)" >
		  , #{deunggiso}
		  </if>
		  <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(jasan_no)" >
		  ,#{jasan_no}
		  </if>
		  , #{gover_own_yn}
		  <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(pnu)" >
		  ,#{pnu}
		  </if>
		  ,Now()

		   )

	<!-- 지상기본정보 --></insert>



	<insert id="insertJisangSoujaData" parameterType="java.util.HashMap" useGeneratedKeys="true" keyColumn="js_idx" keyProperty="js_idx">

		INSERT INTO jisang_souja
		(

		 js_jisang_no
		 ,js_jibun
		 ,js_souja_name
		 ,js_address
		 ,js_phone_number
		  <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(soujaContact2)" >
		 ,js_home_number
		 </if>
		 )
		 VALUES (
		  #{seq}
		  ,#{jibun}
		  ,#{soujaName}
		  ,#{soujaAddress}
		  ,#{soujaContact1}
		  <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(soujaContact2)" >
		  ,#{soujaContact2}
		  </if>
		    )

	</insert>
	
	<insert id="insertJisangUploadData" parameterType="java.util.HashMap" useGeneratedKeys="true" keyColumn="ja_idx" keyProperty="ja_idx">
		
		INSERT INTO jisang_atcfile 
		(

		 ja_jisang_no
		 ,ja_seq
		 ,ja_file_path
		 ,ja_file_nm
		 ,ja_file_seq
		) 
		 VALUES (
		  #{jisangNo}
		  ,#{seq}::integer
		  ,#{fpath}
		  ,#{fname}
		  ,#{fseq}
		  
		    )
	
	</insert>

	<select id="bunhalAddressSearch" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		select *,(row_number() over()) as no,
		COALESCE(jm2.ri_nm, '') AS ri_nm2
		FROM jijuk_2024 jm2
		WHERE 1=1

<!--		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(pnu)" >-->
			and jm2.pnu=#{pnu}
<!--		</if>-->
<!--		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(sido_nm)" >-->
<!--			and jm2.sido_nm=#{sido_nm}-->
<!--		</if>-->
<!--		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(sgg_nm)" >-->
<!--			and regexp_replace(jm2.sgg_nm,'[\"]','','g')=#{sgg_nm}-->
<!--		</if>-->
<!--		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(emd_nm)" >-->
<!--			and regexp_replace(jm2.emd_nm,'[\"]','','g')=#{emd_nm}-->
<!--		</if>-->
<!--		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(ri_nm)" >-->
<!--			and regexp_replace(jm2.ri_nm,'[\"]','','g')=#{ri_nm}-->
<!--		</if>-->
<!--		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(jibun)" >-->
<!--			and jm2.jibun like '%${jibun}%'-->
<!--		</if>-->
<!--		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(address)" >-->
<!--			and regexp_replace(jm2.juso,'[\"]','','g') like '%${address}%'-->
<!--		</if>-->
		AND jm2.pnu IS NOT null
		limit 10



	</select>
	
	
	
	<delete id="jisangReqDoc1Delete" parameterType="java.util.HashMap">

		delete from jisang_req_doc1
		where jrd_manage_no=#{manage_no} and jrd_fseq=#{fseq}::int

	</delete>
	
	<insert id="insertJIsangBunhalTmp" parameterType="java.util.HashMap">
		INSERT INTO jisang_bunhal
		(
		
		 jb_jisang_no
		 ,jb_sido_nm
		 ,jb_sgg_nm
		 ,jb_emd_nm
		 ,jb_ri_nm
		 ,jb_jibun
		 ,jb_jisa
		 ,jb_jijuk_area
		 ,jb_yongdo
		 ,jb_pyeonib_area
		 ,jb_jasan_no
		 ,jb_gover_own_yn
		 ,jb_cancel_yn
		 ,jb_bunhal_yn
		 ,jb_bunhal_date
		 ,jb_bunhal_reason
		 ,jb_bunhal_org_no
		 ,jb_addrcode
		 ,jb_pnu
		 ,jb_remainder_money
		 ,jb_jimok_text
		 ,jb_dockey
		 ,jb_toji_type
		 ,jb_pipe_yn
		 ,jb_bunhal_comment
		 ,jb_set_money
		 ,jb_bunhal_status
		 ,jb_chuideuk_money
		 ,jb_gammoney
		 ,jb_bosang_money
		 ,jb_profit_loss
		 ,jb_demise
		 ,jb_bunhal_complete
		 ) 
		 VALUES (
		 #{JISANG_NO}
		 ,#{SIDO_NM}
		 ,#{SGG_NM}
		 ,#{EMD_NM}
		 ,#{RI_NM}
		 ,#{JIBUN}
		 ,#{JISA}
		 ,NULLIF(cast(#{JIJUK_AREA} as varchar),'')::numeric
		 ,#{YOUNGDO}
		 ,NULLIF(cast(#{PYEONIB_AREA} as varchar),'')::numeric
		 ,#{JASAN_NO}
		 ,#{CANCLE_YN}
		 ,#{GOVER_OWN_YN}
		 ,#{BUNHAL_YN}
		 ,Now()
		 ,#{BUNHAL_REASON}
		 ,#{BUNHAL_ORG_NO}
		 ,#{ADDRCODE}
		 ,#{PNU}
		 ,NULLIF(cast(#{REMAINDER_MONEY} as varchar),'')::numeric
		 ,#{JIMOK_TEXT}
		 ,#{DOCKEY}
		 ,#{TOJI_TYPE}
		 ,#{PIPE_YN}
		 ,#{BUNHAL_COMMENT}
		 ,NULLIF(cast(#{SET_MONEY} as varchar),'')::numeric
		 ,'임시저장'
		 ,NULLIF(cast(#{CHUIDEUK_MONEY} as varchar),'')::numeric
		 ,NULLIF(cast(#{GAMMONEY} as varchar),'')::numeric
		 ,NULLIF(cast(#{BOSANG_MONEY} as varchar),'')::numeric
		 ,NULLIF(cast(#{PROFIT_LOSS} as varchar),'')::numeric
		 ,#{DEMISE}
		 ,#{BUNHAL_COMPLETE}
		 	  	  	   
		)
	</insert>
	
	
	
	
</mapper>