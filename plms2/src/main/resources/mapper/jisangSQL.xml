<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="jisangSQL">
<select id="selectAllList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		select * from jisang_master jm LEFT JOIN jisang_souja js ON js.js_jisang_no=jm.jm_jisang_no
		where 1=1
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(idx)" >
		and jm.jm_jisang_no=#{idx}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(index)" >
		and jm_idx=cast(${index} as varchar)
		</if>
	</select>
	<select id="selectAllData" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		select *
		,concat(jm_sido_nm,' ',jm_sgg_nm,' ',jm_emd_nm,' ',jm_ri_nm,' ',jm_jibun) as address
		from jisang_master jm left join jisang_bunhal jb on jb.jb_jisang_no=jm.jm_jisang_no
		where 1=1
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(idx)" >
		and jm.jm_jisang_no=#{idx}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(index)" >
		and jm.jm_idx=cast(#{index} as integer)
		</if>
		
	</select>
	<select id="selectSoyujaData" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		select *,(row_number() over()) as no 
		from jisang_souja 
		where 1=1
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(idx)" >
			and js_jisang_no=#{idx}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(js_idx)" >
			and js_idx=CAST(#{js_idx} AS INTEGER)
		</if>
		
	</select>
	
	<select id="selectPermitList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		select *,(row_number() over()) as no 
		from jisang_master jm 
		left join permit_master jpm on jpm.dockey=jm.jm_dockey
		left join permit_togi jpt on jpt.jisang_no=jm.jm_jisang_no
		where 1=1
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(idx)" >
		and jm.jm_jisang_no=#{idx}
		</if>
		AND jm.jm_dockey IS NOT null
		AND jpm.dockey IS NOT null
	</select>

	<select id="selectAtcFileList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		select *,(row_number() over()) as no
		from jisang_atcfile
		where 1=1
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(idx)" >
		and ja_jisang_no=#{idx}
		</if>
	</select>

	<select id="selectModifyList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		select *,(row_number() over()) as no
		from jisang_modify
		where 1=1
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(idx)" >
		and jm_jisang_no=#{idx}
		</if>
	</select>

	<select id="selectMergeList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		select *,(row_number() over()) as no
		from jisang_merge
		where 1=1
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(idx)" >
		and jm_jisang_no=#{idx}
		</if>
	</select>

	<select id="selectIssueList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT (ROW_NUMBER() OVER()) AS NO
     , TO_CHAR(PI.issue_date, 'YYYY-MM-DD HH:MI:SS') AS issue_date  -- HH:MM:SS -> HH:MI:SS 수정
     , PI.*
     , (SELECT code_name FROM plms_issue_code pic WHERE pic."code" = PI.code_depth1) AS DEPTH1_title
     , (SELECT code_name FROM plms_issue_code pic WHERE pic."code" = PI.code_depth2) AS DEPTH2_title
     , (SELECT code_name FROM plms_issue_code pic WHERE pic."code" = PI.code_depth3) AS DEPTH3_title
FROM plms_potential_issue PI
LEFT JOIN (
    SELECT
        jm.jm_jisang_no AS manage_no,
        COALESCE(jm.jm_comple_yn, '') AS comple_yn,
        COALESCE(jm.jm_permitted_yn, '') AS permitted_yn,
        SUBSTRING(jm.jm_jisang_no, 1, 1) AS rtype,
        jm.jm_pnu AS pnu
    FROM jisang_master jm

    UNION ALL

    SELECT
        gm.gm_gover_no AS manage_no,
        COALESCE('', '') AS comple_yn,
        COALESCE('', '') AS permitted_yn,
        SUBSTRING(gm.gm_gover_no, 1, 1) AS rtype,
        gp.gp_pnu AS pnu
    FROM gover_master gm
    LEFT JOIN gover_pnu gp ON gp.gp_gover_no = gm.gm_gover_no

    UNION ALL

    SELECT
        nm.nm_notset_no AS manage_no,
        COALESCE('', '') AS comple_yn,
        COALESCE('', '') AS permitted_yn,
        SUBSTRING(nm.nm_notset_no, 1, 1) AS rtype,
        nm.nm_pnu AS pnu
    FROM notset_master nm
) AS u
ON PI.pnu = u.pnu

	where 1=1 	and PI.pnu=#{pnu}
	</select>

	<select id="selectIssueHistoryList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT *,(row_number() over()) as no
		 FROM  plms_potential_issue pi left join plms_issue_history pih on pi.pnu=pih.pnu
		WHERE 1=1
		and pi.pnu=#{pnu}
	</select>

	<select id="selectPnuAtcFileList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		select *,(row_number() over()) as no
		from pnu_atcfile
		where 1=1
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(idx)" >
		and pa_manage_no=#{idx}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(pnu)" >
		and pa_pnu=#{pnu}
		</if>
	</select>

	<select id="selectIssueCodeAtcFileList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		select *,(row_number() over()) as no
		from issue_code_atc_file
		where 1=1
		and icaf_code in (#{issueManualCode1},#{issueManualCode2},#{issueManualCode3})
	</select>

	<!-- selectBasicSearchList 지적정보에서 검색-->
	<select id="selectBasicSearchList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		select *,(row_number() over()) as no
		FROM jijuk_2024 jm2
		WHERE 1=1
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(sido_nm)" >
		and jm2.sido_nm=#{sido_nm}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(sgg_nm)" >
			and regexp_replace(jm2.sgg_nm,'[\"]','','g')=#{sgg_nm}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(emd_nm)" >
			and regexp_replace(jm2.emd_nm,'[\"]','','g')=#{emd_nm}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(ri_nm)" >
			and regexp_replace(jm2.ri_nm,'[\"]','','g')=#{ri_nm}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(jibun)" >
			and jm2.jibun like '%${jibun}%'
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(address)" >
			AND regexp_replace(jm2.juso,'\s+',' ') LIKE '%${address}%' 
		</if>
		AND jm2.pnu IS NOT null
		limit 100
	</select>
	
	<select id="selectAllList2" parameterType="java.util.HashMap" resultType="java.util.HashMap"><![CDATA[
		select jm_set_money,jm_save_status from jisang_master
	]]></select>

	<select id="selectJisangList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT *,
		(row_number() OVER()) AS no
		FROM (
		SELECT jm.jm_idx AS index,
		jm.jm_jisang_no AS idx,
		0 AS gidx,
		jm.jm_jisa AS jisa,
		jm.jm_save_status AS save_status,
		jm.jm_account_yn AS account_yn,
		jm.jm_cancle_date AS cancel_date,
		COALESCE(jm.jm_pipe_yn, 'N') AS pipe_yn,
		jm.jm_toji_type AS toji_type,
		jm.jm_pipe_meter AS pipe_meter,
		jm.jm_jimok_text AS jimok_text,
		js.js_souja_name AS souja_name,
		COALESCE(jm.jm_jijuk_area, NULL) AS jijuk_area,
		COALESCE(jm.jm_pyeonib_area, NULL) AS pyeonib_area,
		jm.jm_sido_nm AS sido_nm,
		jm.jm_sgg_nm AS sgg_nm,
		jm.jm_emd_nm AS emd_nm,
		jm.jm_ri_nm AS ri_nm,
		jm.jm_jibun AS jibun,
		jm.jm_deunggi_date AS deunggi_date,
		TRIM(CONCAT(jm.jm_sido_nm, ' ', jm.jm_sgg_nm, ' ', jm.jm_ri_nm, ' ', jm.jm_jibun)) AS address,
		COALESCE(jm.jm_jasan_no, '') AS jasan_no,
		COALESCE(jm.jm_comple_yn, '') AS comple_yn,

		COALESCE(jm.jm_permitted_yn, '') AS permitted_yn,
		COALESCE(jm.jm_chuideuk_date, NULL) AS chuideuk_date,
		COALESCE('', '') AS gover_date,
		NULL AS pay_date,
		NULL AS gover_area,
		NULL AS gover_length,
		jm.jm_jasan_money AS jasan_money,
		NULL AS pay_money,
		jm.jm_cancle_yn AS cancel_yn,
		jm.jm_manage_yn AS manage_yn,
		jm.jm_dosiplan AS dosiplan,
		jjm.x AS x,
		jjm.y AS y,
		CASE
		WHEN (SELECT count(dm.dm_idx) FROM dosi_master dm WHERE dm.dm_pnu = jm.jm_pnu) > 0 THEN 'Y'
		WHEN (SELECT count(dm.dm_idx) FROM dosi_master dm WHERE dm.dm_pnu = jm.jm_pnu) = 0 THEN 'N'
		END AS toji_plan
		FROM jisang_master jm
		LEFT JOIN jisang_souja js ON js.js_jisang_no = jm.jm_jisang_no
		LEFT JOIN jijuk_2024 jjm ON jjm.pnu= jm.jm_pnu
		WHERE 1 = 1
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(jisa)" >
			and jm.jm_jisa=#{jisa}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(orderCol)" >
			ORDER BY ${orderCol} ${desc}
		</if>

		) AS r
		where 1=1
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(idx)" >
			and r.idx=#{idx}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(cancel_yn)" >
			and r.cancle_yn=#{cancel_yn}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(manageYn)" >
			and r.manage_yn=#{manageYn}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(dosiplan)" >
			and r.dosiplan=#{dosiplan}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(address)" >
			and r.address like '%${address}%'
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(jimokArray) and jimokArray.length > 0">
			and r.jimok_text IN
			<foreach item="item" index="index" collection="jimokArray" open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(souja)" >
			and r.souja_name like '%${souja}%'
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(jasan_no)" >
			and r.jasan_no like '%${jasan_no}%'
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(comple_yn)" >
			and r.comple_yn=#{comple_yn}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(cancel_yn)" >
			and r.cancle_yn=#{cancel_yn}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(account_yn)" >
			and r.account_yn=#{account_yn}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(start_date) and @org.apache.commons.lang3.ObjectUtils@isNotEmpty(end_date)" >
			and r.deunggi_date::date between #{start_date}::date and #{end_date}::date
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(right_overlap)" >
			and (SELECT COUNT(o.address) AS overlap
			FROM
			(
			(
			SELECT trim(concat(jm.jm_sido_nm,' ',jm.jm_sgg_nm,' ',jm.jm_ri_nm,' ',jm.jm_jibun)) as address
			FROM jisang_master jm LEFT JOIN jisang_souja js ON js.js_jisang_no=jm.jm_jisang_no
			where 1=1

			)
			) as o  WHERE o.address = r.address GROUP BY o.address ) >1
		</if>
<if test="length>0">
			limit #{length} offset #{start}
		</if>


	</select>

<select id="selectJisangListDemo" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT *,
		(row_number() OVER()) AS no
		FROM (
		SELECT jm.jm_idx AS index,
		jm.jm_jisang_no AS idx,
		0 AS gidx,
		jm.jm_jisa AS jisa,
		jm.jm_save_status AS save_status,
		jm.jm_account_yn AS account_yn,
		jm.jm_cancle_date AS cancel_date,
		COALESCE(jm.jm_pipe_yn, 'N') AS pipe_yn,
		jm.jm_toji_type AS toji_type,
		jm.jm_pipe_meter AS pipe_meter,
		jm.jm_jimok_text AS jimok_text,
		js.js_souja_name AS souja_name,
		COALESCE(jm.jm_jijuk_area, NULL) AS jijuk_area,
		COALESCE(jm.jm_pyeonib_area, NULL) AS pyeonib_area,
		jm.jm_sido_nm AS sido_nm,
		jm.jm_sgg_nm AS sgg_nm,
		jm.jm_emd_nm AS emd_nm,
		jm.jm_ri_nm AS ri_nm,
		jm.jm_jibun AS jibun,
		jm.jm_deunggi_date AS deunggi_date,
		TRIM(CONCAT(jm.jm_sido_nm, ' ', jm.jm_sgg_nm, ' ', jm.jm_ri_nm, ' ', jm.jm_jibun)) AS address,
		COALESCE(jm.jm_jasan_no, '') AS jasan_no,
		COALESCE(jm.jm_comple_yn, '') AS comple_yn,

		COALESCE(jm.jm_permitted_yn, '') AS permitted_yn,
		COALESCE(jm.jm_chuideuk_date, NULL) AS chuideuk_date,
		COALESCE('', '') AS gover_date,
		NULL AS pay_date,
		NULL AS gover_area,
		NULL AS gover_length,
		jm.jm_jasan_money AS jasan_money,
		NULL AS pay_money,
		jm.jm_cancle_yn AS cancel_yn,
		jm.jm_manage_yn AS manage_yn,
		jm.jm_dosiplan AS dosiplan,
		'126.613134733938' AS x,
		'33.4692482054001' AS y,
		CASE
		WHEN (SELECT count(dm.dm_idx) FROM dosi_master dm WHERE dm.dm_pnu = jm.jm_pnu) > 0 THEN 'Y'
		WHEN (SELECT count(dm.dm_idx) FROM dosi_master dm WHERE dm.dm_pnu = jm.jm_pnu) = 0 THEN 'N'
		END AS toji_plan
		FROM jisang_master jm
		LEFT JOIN jisang_souja js ON js.js_jisang_no = jm.jm_jisang_no

		WHERE 1 = 1
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(jisa)" >
			and jm.jm_jisa=#{jisa}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(orderCol)" >
			ORDER BY ${orderCol} ${desc}
		</if>

		) AS r
		where 1=1
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(idx)" >
			and r.idx=#{idx}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(cancel_yn)" >
			and r.cancle_yn=#{cancel_yn}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(manageYn)" >
			and r.manage_yn=#{manageYn}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(dosiplan)" >
			and r.dosiplan=#{dosiplan}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(address)" >
			and r.address like '%${address}%'
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(jimokArray) and jimokArray.length > 0">
			and r.jimok_text IN
			<foreach item="item" index="index" collection="jimokArray" open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(souja)" >
			and r.souja_name like '%${souja}%'
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(jasan_no)" >
			and r.jasan_no like '%${jasan_no}%'
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(comple_yn)" >
			and r.comple_yn=#{comple_yn}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(cancel_yn)" >
			and r.cancle_yn=#{cancel_yn}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(account_yn)" >
			and r.account_yn=#{account_yn}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(start_date) and @org.apache.commons.lang3.ObjectUtils@isNotEmpty(end_date)" >
			and r.deunggi_date::date between #{start_date}::date and #{end_date}::date
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(right_overlap)" >
			and (SELECT COUNT(o.address) AS overlap
			FROM
			(
			(
			SELECT trim(concat(jm.jm_sido_nm,' ',jm.jm_sgg_nm,' ',jm.jm_ri_nm,' ',jm.jm_jibun)) as address
			FROM jisang_master jm LEFT JOIN jisang_souja js ON js.js_jisang_no=jm.jm_jisang_no
			where 1=1

			)
			) as o  WHERE o.address = r.address GROUP BY o.address ) >1
		</if>
<if test="length>0">
			limit #{length} offset #{start}
		</if>
	</select>

  <select id="selectJisangListOrg" parameterType="java.util.HashMap" resultType="java.util.HashMap">
    SELECT *
		FROM ( SELECT ROW_NUMBER() OVER(
                     ORDER BY JM.jm_JISANG_NO DESC
                ) as no
                			 ,jm.jm_idx AS index
											 ,jm.jm_jisang_no AS idx
											 ,0 AS gidx
                       , JM.jm_jisang_no as JISANG_NO
                       , JM.jm_sido_nm as SIDO_NM
                       , JM.jm_jasan_no as JASAN_NO
                       , JM.jm_sgg_nm as SGG_NM
                       , JM.jm_emd_nm as EMD_NM
                       , JM.jm_ri_nm as RI_NM
                       , JM.jm_jibun as JIBUN
                       , JM.jm_jisa as JISA
                       , TO_CHAR(JM.jm_CHUIDEUK_DATE, 'YYYY-MM-DD') AS CHUIDEUK_DATE
                       , JM.jm_chuideuk_money as CHUIDEUK_MONEY
                       , TO_CHAR(JM.jm_DEUNGGI_DATE, 'YYYY-MM-DD') AS DEUNGGI_DATE
                       , trim(JM.jm_pnu) as PNU
                       , JM.jm_jimok_text as JIMOK_TEXT
                       , JM.jm_JIJUK_AREA + COALESCE((SELECT SUM(S.jm_JIJUK_AREA) FROM JISANG_MERGE S WHERE S.jm_REP_JISANG_NO = JM.jm_JISANG_NO), 0) AS JIJUK_AREA
                       , JM.jm_PYEONIB_AREA + COALESCE((SELECT SUM(S.jm_PYEONIB_AREA) FROM JISANG_MERGE S WHERE S.jm_REP_JISANG_NO = JM.jm_JISANG_NO), 0) AS PYEONIB_AREA
                       , JM.jm_permitted_yn as PERMITTED_YN
                       , JM.jm_addrcode as ADDRCODE
                       , JM.jm_cancle_yn as CANCEL_YN
                       , JS.js_souja_name as SOUJA_NAME
                       , (
                    SELECT COUNT(*) - 1
                      FROM JISANG_SOUJA
                     WHERE js_JISANG_NO = JM.jm_JISANG_NO
                ) AS SOUJA_CNT
                       , CASE
                    WHEN JM.jm_COMPLE_YN IS NULL THEN 'N'
                    ELSE JM.jm_COMPLE_YN
                END AS COMPLE_YN
                       , (
                    SELECT CASE
                        WHEN COUNT(*) > 0 THEN 'Y'
                        ELSE 'N'
                    END
                      FROM PERMIT_TOGI PTD
                     WHERE JM.jm_JISANG_NO = PTD.JISANG_NO
                ) AS PERMIT_YN
                       , JHT.jmt_rep_jisang_no as REP_JISANG_NO
                       , JMT.jmt_JISANG_NO AS T_JISANG_NO
                       , JM.jm_save_status as SAVE_STATUS
                       , (
                    SELECT PA.pa_STATUS
                      FROM PLMS_APPROVAL PA
                     WHERE PA.pa_DOCKEY = JHT.jmt_DOCKEY
                ) AS MERGE_STATUS
                       , (
                    SELECT PA.pa_STATUS
                      FROM PLMS_APPROVAL PA
                     WHERE PA.pa_DOCKEY = JMT.jmt_DOCKEY
                ) AS APPROVAL_STATUS
                  ,TRIM(CONCAT(jm.jm_sido_nm, ' ', jm.jm_sgg_nm, ' ', jm.jm_emd_nm, ' ', jm.jm_ri_nm, ' ', jm.jm_jibun)) AS address
                  ,jm.jm_cancle_date AS cancel_date
                  FROM JISANG_MASTER       JM
                  LEFT OUTER JOIN (
                    SELECT *
                      FROM (
                        SELECT js_JISANG_NO
                               , js_JIBUN
                               , js_SOUJA_NAME
                               , js_ADDRESS
                               , js_PONE_NUMBER
                               , js_HOME_NUMBER
                               , ROW_NUMBER() OVER(
                            PARTITION BY js_JISANG_NO
                             ORDER BY js_JISANG_NO ASC
                        ) AS ROW_IDX
                          FROM JISANG_SOUJA
                    ) sub1
                     WHERE ROW_IDX = 1
                ) JS ON JM.jm_JISANG_NO = JS.js_JISANG_NO
                  LEFT OUTER JOIN JISANG_MASTER_TMP   JMT ON JM.jm_JISANG_NO = JMT.jmt_JISANG_NO
                  LEFT OUTER JOIN JISANG_MERGE_TMP    JHT ON JM.jm_JISANG_NO = JHT.jmt_JISANG_NO
                 WHERE 1 = 1
                   AND ( JM.jm_CANCLE_YN IS NULL
                    OR JM.jm_cancle_YN != 'Y' )
				<if test="PAGE_GUBUN != null and PAGE_GUBUN != ''">
				    <if test="PAGE_GUBUN != '1'">
				        AND JM.jm_SAVE_STATUS = '승인'
				    </if>
				</if>
		<if test="ADDRESSCODE != null and ADDRESSCODE != ''">
			AND JM.jm_ADDRCODE LIKE '$ADDRESSCODE$%'
		</if>
		<if test="jibeon != null and jibeon != ''">
			AND JM.jm_JIBUN LIKE '${JIBEON}%'
		</if>
		<if test="jisa != null and jisa != ''">
			AND JM.jm_JISA = #{jisa}
		</if>
		<if test="DG_STARTDAY != null and DG_STARTDAY != ''">
			AND JM.jm_DEUNGGI_DATE >=to_date( #{DG_STARTDAY} , 'yyyy-mm-dd')
		</if>
		<if test="DG_ENDDAY != null and DG_ENDDAY != ''">
			AND JM.jm_DEUNGGI_DATE &lt;=to_date( #{DG_ENDDAY} , 'yyyy-mm-dd')
		</if>
		<if test="CD_STARTDAY != null and CD_STARTDAY != ''">
			AND JM.jm_CHUIDEUK_DATE >=	to_date( #{CD_STARTDAY} , 'yyyy-mm-dd')
		</if>
		<if test="CD_ENDDAY != null and CD_ENDDAY != ''">
			AND JM.jm_CHUIDEUK_DATE &lt;= 	to_date( #{CD_ENDDAY} , 'yyyy-mm-dd')
		</if>
		<if test="souja!= null and souja != ''">
			AND JS.js_SOUJA_NAME LIKE '%${souja}%'
		</if>
		<if test="JISANGNO != null and JISANGNO != ''">
			AND JM.jm_JISANG_NO = #{JISANGNO}
		</if>
		<if test="JASAN_NO != null and JASAN_NO != ''">
			AND JM.jm_JASAN_NO LIKE '%'|| #{JASAN_NO}||'%'
		</if>
		<if test="COMPLE_YN != null and COMPLE_YN != ''">
			AND JM.jm_COMPLE_YN = #{COMPLE_YN}
		</if>
		<if test="JIMOK_TEXT != null and JIMOK_TEXT != ''"> 
		
			AND JM.jm_JIMOK_TEXT IN 
		    <foreach item="item" index="index" collection="JIMOK_TEXT" open="(" separator="," close=")">
		        #{item}
		    </foreach>

		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(address)" >
			AND TRIM(CONCAT(jm.jm_sido_nm, ' ', jm.jm_sgg_nm, ' ', jm.jm_emd_nm, ' ', jm.jm_ri_nm, ' ', jm.jm_jibun)) LIKE '%${address}%'
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(sido_nm)" >
			AND JM.jm_sido_nm = #{sido_nm}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(sgg_nm)" >
			AND JM.jm_sgg_nm = #{sgg_nm}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(emd_nm)" >
			AND JM.jm_emd_nm = #{emd_nm}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(ri_nm)" >
			AND JM.jm_ri_nm = #{ri_nm}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(jibun)" >
			AND JM.jm_jibun LIKE '%${jibun}%'
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(comple_yn)" >
			AND JM.jm_comple_yn = #{comple_yn}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(account_yn)" >
			AND JM.jm_account_yn = #{account_yn}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(cancel_yn)">
		    AND JM.jm_CANCLE_YN = #{cancel_yn}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(jasan_no)" >
			AND JM.jm_jasan_no LIKE '%${jasan_no}%'
		</if>
	  <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(start_date)">
        AND JM.jm_chuideuk_date &gt;= TO_DATE(#{start_date}, 'YYYY-MM-DD')
    </if>
    <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(end_date)">
        AND JM.jm_chuideuk_date &lt;= TO_DATE(#{end_date}, 'YYYY-MM-DD')
    </if>
		) AA WHERE 1=1
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(orderCol)" >
			ORDER BY ${orderCol} ${desc}
			</if>
		<if test="length>0">
			limit #{length} offset #{start}
		</if>
	</select>

<select id="selectJisangListCount" parameterType="java.util.HashMap" resultType="integer">
SELECT count(*)
		FROM ( SELECT ROW_NUMBER() OVER(
                     ORDER BY JM.jm_JISANG_NO DESC
                ) as no
                ,jm.jm_idx AS index
				,jm.jm_jisang_no AS idx
				,0 AS gidx
                       , JM.jm_jisang_no as JISANG_NO
                       , JM.jm_sido_nm as SIDO_NM
                       , JM.jm_jasan_no as JASAN_NO
                       , JM.jm_sgg_nm as SGG_NM
                       , JM.jm_emd_nm as EMD_NM
                       , JM.jm_ri_nm as RI_NM
                       , JM.jm_jibun as JIBUN
                       , JM.jm_jisa as JISA
                       , TO_CHAR(JM.jm_CHUIDEUK_DATE, 'YYYY-MM-DD') AS CHUIDEUK_DATE
                       , JM.jm_chuideuk_money as CHUIDEUK_MONEY
                       , TO_CHAR(JM.jm_DEUNGGI_DATE, 'YYYY-MM-DD') AS DEUNGGI_DATE
                       , JM.jm_pnu as PNU
                       , JM.jm_jimok_text as JIMOK_TEXT
                       , JM.jm_JIJUK_AREA + COALESCE((SELECT SUM(S.jm_JIJUK_AREA) FROM JISANG_MERGE S WHERE S.jm_REP_JISANG_NO = JM.jm_JISANG_NO), 0) AS JIJUK_AREA
                       , JM.jm_PYEONIB_AREA + COALESCE((SELECT SUM(S.jm_PYEONIB_AREA) FROM JISANG_MERGE S WHERE S.jm_REP_JISANG_NO = JM.jm_JISANG_NO), 0) AS PYEONIB_AREA
                       , JM.jm_permitted_yn as PERMITTED_YN
                       , JM.jm_addrcode as ADDRCODE
                       , JS.js_souja_name as SOUJA_NAME
                       , (
                    SELECT COUNT(*) - 1
                      FROM JISANG_SOUJA
                     WHERE js_JISANG_NO = JM.jm_JISANG_NO
                ) AS SOUJA_CNT
                       , CASE
                    WHEN JM.jm_COMPLE_YN IS NULL THEN 'N'
                    ELSE JM.jm_COMPLE_YN
                END AS COMPLE_YN
                       , (
                    SELECT CASE
                        WHEN COUNT(*) > 0 THEN 'Y'
                        ELSE 'N'
                    END
                      FROM PERMIT_TOGI PTD
                     WHERE JM.jm_JISANG_NO = PTD.JISANG_NO
                ) AS PERMIT_YN
                       , JHT.jmt_rep_jisang_no as REP_JISANG_NO
                       , JMT.jmt_JISANG_NO AS T_JISANG_NO
                       , JM.jm_save_status as SAVE_STATUS
                       , (
                    SELECT PA.pa_STATUS
                      FROM PLMS_APPROVAL PA
                     WHERE PA.pa_DOCKEY = JHT.jmt_DOCKEY
                ) AS MERGE_STATUS
                       , (
                    SELECT PA.pa_STATUS
                      FROM PLMS_APPROVAL PA
                     WHERE PA.pa_DOCKEY = JMT.jmt_DOCKEY
                ) AS APPROVAL_STATUS
                  ,TRIM(CONCAT(jm.jm_sido_nm, ' ', jm.jm_sgg_nm, ' ', jm.jm_emd_nm, ' ', jm.jm_ri_nm, ' ', jm.jm_jibun)) AS address
                  ,jm.jm_cancle_date AS cancle_date
                  FROM JISANG_MASTER       JM
                  LEFT OUTER JOIN (
                    SELECT *
                      FROM (
                        SELECT js_JISANG_NO
                               , js_JIBUN
                               , js_SOUJA_NAME
                               , js_ADDRESS
                               , js_PONE_NUMBER
                               , js_HOME_NUMBER
                               , ROW_NUMBER() OVER(
                            PARTITION BY js_JISANG_NO
                             ORDER BY js_JISANG_NO ASC
                        ) AS ROW_IDX
                          FROM JISANG_SOUJA
                    ) sub1
                     WHERE ROW_IDX = 1
                ) JS ON JM.jm_JISANG_NO = JS.js_JISANG_NO
                  LEFT OUTER JOIN JISANG_MASTER_TMP   JMT ON JM.jm_JISANG_NO = JMT.jmt_JISANG_NO
                  LEFT OUTER JOIN JISANG_MERGE_TMP    JHT ON JM.jm_JISANG_NO = JHT.jmt_JISANG_NO
                 WHERE 1 = 1
                   AND ( JM.jm_CANCLE_YN IS NULL
                    OR JM.jm_cancle_YN != 'Y' )
		<if test="PAGE_GUBUN != null and PAGE_GUBUN != ''">
		    <if test="PAGE_GUBUN != '1'">
		        AND JM.jm_SAVE_STATUS = '승인'
		    </if>
		</if>
		<if test="ADDRESSCODE != null and ADDRESSCODE != ''">
			AND JM.jm_ADDRCODE LIKE '$ADDRESSCODE$%'
		</if>
		<if test="JIBEON != null and JIBEON != ''">
			AND JM.jm_JIBUN LIKE '${JIBEON}%'
		</if>
		<if test="jisa != null and jisa != ''">
			AND JM.jm_JISA = #{jisa}
		</if>
		<if test="JISA != null and JISA != ''">
			AND JM.jm_JISA = #{JISA}
		</if>
		<if test="DG_STARTDAY != null and DG_STARTDAY != ''">
			AND JM.jm_DEUNGGI_DATE >=to_date( #{DG_STARTDAY} , 'yyyy-mm-dd')
		</if>
		<if test="DG_ENDDAY != null and DG_ENDDAY != ''">
			AND JM.jm_DEUNGGI_DATE &lt;=to_date( #{DG_ENDDAY} , 'yyyy-mm-dd')
		</if>
		<if test="CD_STARTDAY != null and CD_STARTDAY != ''">
			AND JM.jm_CHUIDEUK_DATE >=	to_date( #{CD_STARTDAY} , 'yyyy-mm-dd')
		</if>
		<if test="CD_ENDDAY != null and CD_ENDDAY != ''">
			AND JM.jm_CHUIDEUK_DATE &lt;= 	to_date( #{CD_ENDDAY} , 'yyyy-mm-dd')
		</if>
		<if test="SOYU != null and SOYU != ''">
			AND JS.js_SOUJA_NAME LIKE '%${SOYU}%'
		</if>
		<if test="souja!= null and souja != ''">
			AND JS.js_SOUJA_NAME LIKE '%${souja}%'
		</if>
		<if test="JISANGNO != null and JISANGNO != ''">
			AND JM.jm_JISANG_NO = #{JISANGNO}
		</if>
		<if test="JASAN_NO != null and JASAN_NO != ''">
			AND JM.jm_JASAN_NO LIKE '%'|| #{JASAN_NO}||'%'
		</if>
		<if test="COMPLE_YN != null and COMPLE_YN != ''">
			AND JM.jm_COMPLE_YN = #{COMPLE_YN}
		</if>
		<if test="JIMOK_TEXT != null and JIMOK_TEXT != ''">
			AND JM.jm_JIMOK_TEXT IN 
		    <foreach item="item" index="index" collection="JIMOK_TEXT" open="(" separator="," close=")">
		        #{item}
		    </foreach>

		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(address)" >
			AND TRIM(CONCAT(jm.jm_sido_nm, ' ', jm.jm_sgg_nm, ' ', jm.jm_emd_nm, ' ', jm.jm_ri_nm, ' ', jm.jm_jibun)) LIKE '%${address}%'
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(sido_nm)" >
			AND JM.jm_sido_nm = #{sido_nm}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(sgg_nm)" >
			AND JM.jm_sgg_nm = #{sgg_nm}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(emd_nm)" >
			AND JM.jm_emd_nm = #{emd_nm}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(ri_nm)" >
			AND JM.jm_ri_nm = #{ri_nm}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(jibun)" >
			AND JM.jm_jibun LIKE '%${jibun}%'
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(comple_yn)" >
			AND JM.jm_comple_yn = #{comple_yn}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(account_yn)" >
			AND JM.jm_account_yn = #{account_yn}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(cancel_yn)">
		    AND JM.jm_CANCLE_YN = #{cancel_yn}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(jasan_no)" >
			AND JM.jm_jasan_no LIKE '%${jasan_no}%'
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(start_date)">
        AND JM.jm_chuideuk_date &gt;= TO_DATE(#{start_date}, 'YYYY-MM-DD')
    </if>
    <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(end_date)">
        AND JM.jm_chuideuk_date &lt;= TO_DATE(#{end_date}, 'YYYY-MM-DD')
    </if>
		) AA WHERE 1=1
	</select>



	<select id="selectTotalCount" parameterType="java.util.HashMap" resultType="Integer">
		SELECT count(*) as count FROM (
		SELECT jm.jm_idx AS index,
		jm.jm_jisang_no AS idx,
		0 AS gidx,
		jm.jm_jisa AS jisa,
		jm.jm_save_status AS save_status,
		jm.jm_account_yn AS account_yn,
		jm.jm_cancle_date AS cancel_date,
		COALESCE(jm.jm_pipe_yn, 'N') AS pipe_yn,
		jm.jm_toji_type AS toji_type,
		jm.jm_pipe_meter AS pipe_meter,
		jm.jm_jimok_text AS jimok_text,
		js.js_souja_name AS souja_name,
		COALESCE(jm.jm_jijuk_area, NULL) AS jijuk_area,
		COALESCE(jm.jm_pyeonib_area, NULL) AS pyeonib_area,
		jm.jm_sido_nm AS sido_nm,
		jm.jm_sgg_nm AS sgg_nm,
		jm.jm_emd_nm AS emd_nm,
		jm.jm_ri_nm AS ri_nm,
		jm.jm_jibun AS jibun,
		jm.jm_chuideuk_date AS chuideuk_date,
		jm.jm_deunggi_date AS deunggi_date,
		TRIM(CONCAT(jm.jm_sido_nm, ' ', jm.jm_sgg_nm, ' ', jm.jm_ri_nm, ' ', jm.jm_jibun)) AS address,
		COALESCE(jm.jm_jasan_no, '') AS jasan_no,
		COALESCE(jm.jm_comple_yn, '') AS comple_yn,
		COALESCE(jm.jm_permitted_yn, '') AS permitted_yn,
		COALESCE(jm.jm_chuideuk_date, NULL) AS chuideuk_date,
		COALESCE('', '') AS gover_date,
		NULL AS pay_date,
		NULL AS gover_area,
		NULL AS gover_length,
		jm.jm_jasan_money AS jasan_money,
		NULL AS pay_money,
		jm.jm_cancle_yn AS cancel_yn,
		jm.jm_manage_yn AS manage_yn,
		jm.jm_dosiplan AS dosiplan,
		CASE
		WHEN (SELECT count(dm.dm_idx) FROM dosi_master dm WHERE dm.dm_pnu = jm.jm_pnu) > 0 THEN 'Y'
		WHEN (SELECT count(dm.dm_idx) FROM dosi_master dm WHERE dm.dm_pnu = jm.jm_pnu) = 0 THEN 'N'
		END AS toji_plan
		FROM jisang_master jm
		LEFT JOIN jisang_souja js ON js.js_jisang_no = jm.jm_jisang_no
		WHERE 1 = 1
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(jisa)" >
			and jm.jm_jisa=#{jisa}
		</if>
		) AS r
		where 1=1
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(idx)" >
			and r.idx=#{idx}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(cancelYn)" >
			and r.cancle_yn=#{cancelYn}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(manageYn)" >
			and r.manage_yn=#{manageYn}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(dosiplan)" >
			and r.dosiplan=#{dosiplan}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(address)" >
			and r.address like '%${address}%'
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(jimokArray) and jimokArray.length > 0">
			and r.jimok_text IN
			<foreach item="item" index="index" collection="jimokArray" open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(souja)" >
			and r.souja_name like '%${souja}%'
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(jasan_no)" >
			and r.jasan_no like '%${jasan_no}%'
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(comple_yn)" >
			and r.comple_yn=#{comple_yn}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(account_yn)" >
			and r.account_yn=#{account_yn}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(start_date) and @org.apache.commons.lang3.ObjectUtils@isNotEmpty(end_date)" >
			and r.deunggi_date::date between #{start_date}::date and #{end_date}::date
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(right_overlap)" >
			and (SELECT COUNT(o.address) AS overlap
			FROM
			(
			(
			SELECT trim(concat(jm.jm_sido_nm,' ',jm.jm_sgg_nm,' ',jm.jm_ri_nm,' ',jm.jm_jibun)) as address
			FROM jisang_master jm LEFT JOIN jisang_souja js ON js.js_jisang_no=jm.jm_jisang_no
			where 1=1
			)

			) as o  WHERE o.address = r.address GROUP BY o.address ) >1
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(toji_type)" >
			and r.toji_type=#{toji_type}
		</if>
	</select>


	<!-- 지상권 사용승락 기본정보 seq 가져오기 -->
	<select id="selectJisangPermitNextval" parameterType="java.util.HashMap" resultType="Integer">
		SELECT idx+1 FROM permit_master ORDER BY idx DESC LIMIT 1;
	</select>
	<!-- 지상권 사용승락 기본정보 저장 -->
	<insert id="insertJisangPermitMaster" parameterType="java.util.HashMap" useGeneratedKeys="true" keyColumn="idx" keyProperty="idx">

		INSERT INTO permit_master
		(
		 pmt_no
		 ,use_purpos
		 ,use_st_date
		 ,use_ed_date
		 ,spot_result
		 ,rivew
		 ,contract
		 ,pmt_status
		 ,wdate


		 )
		 VALUES (
		  #{seq}
		  ,NULLIF(cast(#{purpose} as varchar),'')
		  ,COALESCE(NULLIF(NULLIF('', '')::date, NULL), NULL)
    	  ,COALESCE(NULLIF(NULLIF('', '')::date, NULL), NULL)
		  ,#{spot_result}
		  ,#{review}
		  ,#{contract}

		  ,#{pmt_status}
		  ,Now()

		   )

	<!-- 지상기본정보 --></insert>
	<!-- 지상권 사용승락 기본정보 저장 -->
	<insert id="insertJisangPermitTogi" parameterType="java.util.HashMap" useGeneratedKeys="true" keyColumn="idx" keyProperty="idx">

		INSERT INTO permit_togi
		(
		 pmt_no
		 ,jisang_no
		 ,addrcode
		 ,soyuja
		 ,pmt_user
		 ,jimok
		 ,all_area
		 ,set_area
		 ,set_money
		 ,sido_nm
		 ,sgg_nm
		 ,emd_nm
		 ,ri_nm
		 ,jibun
		 ,addr
		 ,jasan_no

		 )
		 VALUES (

		 #{seq}
		 ,#{jisang_no}
		 ,#{addrcode}
		 ,#{souja}
		 ,#{pmt_user}
		 ,#{jimok}
		 ,NULLIF(cast(#{all_area} as varchar),'')::numeric
		 ,NULLIF(cast(#{set_area} as varchar),'')::numeric
		 ,#{set_money}
		 ,#{sido_nm}
		 ,#{sgg_nm}
		 ,#{emd_nm}
		 ,#{ri_nm}
		 ,#{jibun}
		 ,#{addr}
		 ,#{jasan_no}
		)




	<!-- 지상기본정보 --></insert>

	<select id="selectJisangPermitTotalCount" parameterType="java.util.HashMap" resultType="Integer">
		SELECT count(*) as count FROM (
		SELECT jpm.idx AS index,
		jpm.pmt_no AS idx,
		jpm.echo_no as echo_no,
		jpm.use_purpos as use_purpos,
		jpm.use_st_date as use_st_date,
		jpm.use_ed_date as use_ed_date,
		jpm.spot_result as spot_result,
		jpm.rivew as review,
		jpm.contract as contract,
		jpm.pmt_status as pmt_status,
		jpm.dockey as dockey,
		jpt.jisang_no AS jisang_no,
		jpt.pmt_user as pmt_user
		,jpt.soyuja as soyuja
		,jpt.jimok as jimok
		,jpt.jasan_no as jasan_no
		,jpt.addr as addr
		,jpt.jibun as jibun
		,jm.jm_jisa as jisa
		,jm.jm_sido_nm as sido_nm
		,jm.jm_sgg_nm as sgg_nm
		,jm.jm_emd_nm as emd_nm
		,jm.jm_ri_nm as ri_nm

		FROM permit_master jpm
			LEFT JOIN permit_togi jpt ON jpt.pmt_no=jpm.pmt_no
			LEFT JOIN jisang_master jm ON jm.jm_jisang_no=jpt.jisang_no
		) as r
		WHERE 1 = 1
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(jisa)" >
		and r.jisa=#{jisa}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(status)" >
		and r.pmt_status=#{status}
		</if>

		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(address)" >
		and r.addr like '%${address}%'
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(sido_nm)" >
			AND r.sido_nm = #{sido_nm}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(sgg_nm)" >
			AND r.sgg_nm = #{sgg_nm}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(emd_nm)" >
			AND r.emd_nm = #{emd_nm}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(ri_nm)" >
			AND r.ri_nm = #{ri_nm}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(jibun)" >
			AND r.jibun LIKE '%${jibun}%'
		</if>
	</select>
	
	
	 <select id="selectJisangPermitList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT *,
		(row_number() OVER()) AS no
		FROM (
		SELECT jpm.idx AS index,
		jpm.pmt_no AS idx,
		jpm.echo_no as echo_no,
		jpm.use_purpos as use_purpos,
		jpm.use_st_date as use_st_date,
		jpm.use_ed_date as use_ed_date,
		jpm.spot_result as spot_result,
		jpm.rivew as review,
		jpm.contract as contract,
		jpm.pmt_status as pmt_status,
		jpm.dockey as dockey,
		jpt.jisang_no AS jisang_no,
		jpt.pmt_user as pmt_user
		,jpt.soyuja as soyuja
		,jpt.jimok as jimok
		,jpt.jasan_no as jasan_no
		,jpt.addr as addr
		,jpt.jibun as jibun
		,jm.jm_jisa as jisa
		,jm.jm_sido_nm as sido_nm
		,jm.jm_sgg_nm as sgg_nm
		,jm.jm_emd_nm as emd_nm
		,jm.jm_ri_nm as ri_nm
		,CC.*
		FROM permit_master jpm
			LEFT JOIN permit_togi jpt ON jpt.pmt_no=jpm.pmt_no
			LEFT JOIN jisang_master jm ON jm.jm_jisang_no=jpt.jisang_no
				left outer join PLMS_APPROVAL CC on jm.jm_DOCKEY = CC.pa_DOCKEY and (CC.pa_status is null or CC.pa_status not in ('X'))
		WHERE 1 = 1

		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(orderCol)" >
			ORDER BY ${orderCol} ${desc}
		</if>

		) AS r
		where 1=1
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(jisa)" >
		and r.jisa=#{jisa}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(status)" >
		and r.pmt_status=#{status}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(address)" >
		and r.addr like '%${address}%'
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(sido_nm)" >
			AND r.sido_nm = #{sido_nm}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(sgg_nm)" >
			AND r.sgg_nm = #{sgg_nm}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(emd_nm)" >
			AND r.emd_nm = #{emd_nm}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(ri_nm)" >
			AND r.ri_nm = #{ri_nm}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(jibun)" >
			AND r.jibun LIKE '%${jibun}%'
		</if>
		
		<if test="length>0">
			limit #{length} offset #{start}
		</if>


	</select>


	<select id="selectJisangJijukList" parameterType="java.util.HashMap" resultType="java.util.HashMap">

		SELECT *,(row_number() OVER()) AS no from jisang_master jm
			LEFT JOIN jisang_souja js ON js.js_jisang_no=jm.jm_jisang_no
		LEFT JOIN jijuk_2024 j2 ON j2.pnu=jm.jm_pnu
		where 1=1
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(jisa)" >
		and jm.jm_jisa=#{jisa}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(sido_nm)" >
		and jm.jm_sido_nm=#{sido_nm}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(sgg_nm)" >
		and jm.jm_sgg_nm=#{sgg_nm}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(emd_nm)" >
		and jm.jm_emd_nm=#{emd_nm}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(jibun)" >
			and jm.jm_jibun=#{jibun}
		</if>
	</select>


	<select id="selectPermitData" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT *,
		(row_number() OVER()) AS no
		FROM (
		SELECT jpm.idx AS index,
		jpm.pmt_no AS idx,
		jpm.echo_no as echo_no,
		jpm.use_purpos as use_purpos,
		jpm.use_st_date as use_st_date,
		jpm.use_ed_date as use_ed_date,
		jpm.spot_result as spot_result,
		jpm.rivew as review,
		jpm.contract as contract,
		jpm.pmt_status as pmt_status,
		jpm.dockey as dockey,
		jpt.jisang_no AS jisang_no,
		jpt.pmt_user as pmt_user
		,jpt.soyuja as soyuja
		,jpt.jimok as jimok
		,jpt.jasan_no as jasan_no
		,TRIM(CONCAT(jpt.sido_nm, ' ', jpt.sgg_nm, ' ', jpt.emd_nm,' ', jpt.ri_nm, ' ', jpt.jibun)) AS addr
		,jpt.jibun as jibun
		,jm.jm_jisa as jisa
		,jpt.all_area as all_area
		,jpt.set_area as set_area
		,jpt.set_money as set_money
			,jm.jm_sido_nm AS sido_nm
		,jm.jm_sgg_nm AS sgg_nm
		,jm.jm_emd_nm AS emd_nm
		,jm.jm_ri_nm AS ri_nm
		,jm.jm_addrcode AS addrcode
		FROM permit_master jpm
			LEFT JOIN permit_togi jpt ON jpt.pmt_no=jpm.pmt_no
			LEFT JOIN jisang_master jm ON jm.jm_jisang_no=jpt.jisang_no
		WHERE 1 = 1
		
		) AS r
		where 1=1
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(idx)" >
		and r.idx=#{idx}
		</if>
	</select>
	

	<select id="selectJisangBunhalChkCount" parameterType="java.util.HashMap" resultType="Integer">
		SELECT count(*) as count FROM jisang_bunhal jb where 1=1 and jb.jb_jisang_no=#{jisang_no}

	</select>
	
	

	<select id="selectJibunList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
<!--		select *,(row_number() over()) as no,-->
<!--		TRIM(CONCAT(jb.jb_sido_nm, ' ', jb.jb_sgg_nm, ' ', jb.jb_ri_nm, ' ' ,jb.jb_emd_nm )) AS address,-->
<!--		jb.jb_jibun AS jibun-->
<!--		from jisang_bunhal jb-->
<!--		where 1 = 1-->
<!--		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(idx)" >-->
<!--		and jb.jb_bunhal_org_no = #{idx}-->
<!--		</if>-->

		SELECT
		row_number() OVER() AS no,
		TRIM(CONCAT(jb_sido_nm, ' ', jb_sgg_nm, ' ', jb_ri_nm, ' ', jb_jibun)) AS address,
		jb_jibun AS jibun,
		jb_idx, jb_jisang_no, jb_sido_nm, jb_sgg_nm, jb_emd_nm, jb_ri_nm, jb_jisa, jb_jijuk_area, jb_yongdo, jb_pyeonib_area, jb_jasan_no, jb_gover_own_yn, jb_cancle_yn, jb_bunhal_yn, jb_bunhal_date, jb_bunhal_reason, jb_bunhal_org_no, jb_addrcode, jb_pnu, jb_remainder_money, jb_jimok_text, jb_dockey, jb_toji_type, jb_pipe_yn, jb_bunhal_comment, jb_set_money, jb_bunhal_status, jb_chuideuk_money, jb_gammoney, jb_bosang_money, jb_profit_loss, jb_demise, jb_bunhal_complete
		FROM
		jisang_bunhal
		where 1 = 1
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(idx)" >
		AND jb_bunhal_org_no = #{idx}
		</if>
		GROUP BY
		jibun,  jb_idx, jb_jisang_no, jb_sido_nm, jb_sgg_nm, jb_emd_nm, jb_ri_nm, jb_jisa, jb_jijuk_area, jb_yongdo, jb_pyeonib_area, jb_jasan_no, jb_gover_own_yn, jb_cancle_yn, jb_bunhal_yn, jb_bunhal_date, jb_bunhal_reason, jb_addrcode, jb_pnu, jb_remainder_money, jb_jimok_text, jb_dockey, jb_toji_type, jb_pipe_yn, jb_bunhal_comment, jb_set_money, jb_bunhal_status, jb_chuideuk_money, jb_gammoney, jb_bosang_money, jb_profit_loss, jb_demise, jb_bunhal_complete
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(idx)" >
			,jb_bunhal_org_no
		</if>
	</select>
	
	
	<select id="selectjisangBunhalList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
<!--		select *,(row_number() over()) as no,-->
<!--		TRIM(CONCAT(jb.jb_sido_nm, ' ', jb.jb_sgg_nm, ' ', jb.jb_ri_nm, ' ' ,jb.jb_emd_nm )) AS address,-->
<!--		jb.jb_jibun AS jibun-->
<!--		from jisang_bunhal jb-->
<!--		where 1 = 1-->
<!--		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(idx)" >-->
<!--		and jb.jb_bunhal_org_no = #{idx}-->
<!--		</if>-->

		SELECT
		row_number() OVER() AS no,
		TRIM(CONCAT(jb_sido_nm, ' ', jb_sgg_nm, ' ',jb_emd_nm,' ', jb_ri_nm, ' ', jb_jibun)) AS address,
		jb_jibun AS jibun,
		jb_idx, jb_jisang_no, jb_sido_nm, jb_sgg_nm, jb_emd_nm, jb_ri_nm, jb_jisa, jb_jijuk_area, jb_yongdo, jb_pyeonib_area, jb_jasan_no, jb_gover_own_yn, jb_cancle_yn, jb_bunhal_yn, jb_bunhal_date, jb_bunhal_reason, jb_bunhal_org_no, jb_addrcode, jb_pnu, jb_remainder_money, jb_jimok_text, jb_dockey, jb_toji_type, jb_pipe_yn, jb_bunhal_comment, jb_set_money, jb_bunhal_status, jb_chuideuk_money, jb_gammoney, jb_bosang_money, jb_profit_loss, jb_demise, jb_bunhal_complete
		FROM
		jisang_bunhal
		where 1 = 1
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(idx)" >
		AND jb_bunhal_org_no = #{idx}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(address)" >
			AND TRIM(CONCAT(jm.jm_sido_nm, ' ', jm.jm_sgg_nm, ' ', jm.jm_emd_nm, ' ', jm.jm_ri_nm, ' ', jm.jm_jibun)) LIKE '%${address}%'
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(sido_nm)" >
			AND jb_sido_nm = #{sido_nm}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(sgg_nm)" >
			AND jb_sgg_nm = #{sgg_nm}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(emd_nm)" >
			AND jb_emd_nm = #{emd_nm}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(ri_nm)" >
			AND jb_ri_nm = #{ri_nm}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(jibun)" >
			AND jb_jibun LIKE '%${jibun}%'
		</if>
		GROUP BY
		jibun,  jb_idx, jb_jisang_no, jb_sido_nm, jb_sgg_nm, jb_emd_nm, jb_ri_nm, jb_jisa, jb_jijuk_area, jb_yongdo, jb_pyeonib_area, jb_jasan_no, jb_gover_own_yn, jb_cancle_yn, jb_bunhal_yn, jb_bunhal_date, jb_bunhal_reason, jb_addrcode, jb_pnu, jb_remainder_money, jb_jimok_text, jb_dockey, jb_toji_type, jb_pipe_yn, jb_bunhal_comment, jb_set_money, jb_bunhal_status, jb_chuideuk_money, jb_gammoney, jb_bosang_money, jb_profit_loss, jb_demise, jb_bunhal_complete
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(idx)" >
			,jb_bunhal_org_no
		</if>
	</select>
	
	<!--  지상 분할 첨부파일 카운터 -->
<select id="selectJisangBunhalAtcFileCount" parameterType="map" resultType="Integer">
		select count(*) as count from jisang_bunhal_atcfile
		where jba_manage_no=#{jisang_no} and jba_fseq=#{fseq}::int 
	</select>
	<!-- 분할 필수첨부파일 -->
	<insert id="insertJisangBunhalAtcFile" parameterType="map">
		INSERT INTO jisang_bunhal_atcfile (
		jba_manage_no,
		jba_fseq,
		jba_file_nm,
		jba_file_path,
		jba_wdate
		) VALUES (
		#{jisang_no},
		#{fseq}::int,
		#{file_name},
		#{file_path},
		Now()
		
		)
		
	</insert>
	<!-- 분할 필수첨부파일 업데이트 -->
	<update id="updateJisangBunhalAtcFile" parameterType="map">
		update jisang_bunhal_atcfile set 
		
		jba_file_nm=#{file_name},
		jba_file_path=#{file_path},
		jba_wdate=Now()
		where jba_manage_no=#{jisang_no} and jba_fseq=#{fseq}::int 
	</update>

	<select id="selectAllTmpData" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		select *
		,concat(jmt_sido_nm,' ',jmt_sgg_nm,' ',jmt_ri_nm,' ',jmt_jibun) as address
		from jisang_master_tmp
		where 1=1
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(idx)" >
			and jmt_jisang_no=#{idx}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(index)" >
			and jmt_idx=cast(#{index} as integer)
		</if>

	</select>

	<insert id="upsertJisangMasterTmp" parameterType="map">
		INSERT INTO jisang_master_tmp (
		jmt_jisang_no,
		jmt_idx,
		jmt_jisa,
		jmt_yongdo,
		jmt_pipe_name,
		jmt_sun_gubun,
		jmt_sido_nm,
		jmt_sgg_nm,
		jmt_ri_nm,
		jmt_jibun,
		jmt_jijuk_area,
		jmt_gover_own_yn,
		jmt_jasan_no,
		jmt_chuideuk_date,
		jmt_pyeonib_area,
		jmt_use_state,
		jmt_deunggi_date,
		jmt_deunggi_no,
		jmt_deunggiso,
		jmt_dosiplan,
		jmt_account_yn,
		jmt_cancle_date,
		jmt_chuideuk_money,
		jmt_gammoney,
		jmt_remainder_money,
		jmt_cancle_bosang_yn,
		jmt_cancle_bosang_money,
		jmt_cancle_reason,
		jmt_cancle_comment,
		jmt_cancle_yn
		) VALUES (
		#{jisang_no},
		#{idx},
		#{jisa},
		#{yongdo},
		#{pipe_name},
		#{sun_gubun},
		#{sido_nm},
		#{sgg_nm},
		#{ri_nm},
		#{jibun},
		#{jijuk_area},
		#{gover_own_yn},
		#{jasan_no},
		TO_DATE(#{chuideuk_date},'YYYY-MM-DD'),
		#{pyeonib_area},
		#{use_state},
		TO_DATE(#{deunggi_date},'YYYY-MM-DD'),
		#{deunggi_no},
		#{deunggiso},
		#{dosiplan},
		#{account_yn},
		TO_DATE(#{cancel_date},'YYYY-MM-DD'),
		#{chuideuk_money},
		#{gammoney},
		#{remainder_money},
		#{cancel_bosang_yn},
		#{cancel_bosang_money},
		#{cancel_reason},
		#{cancel_comment},
		'Y'
		)
		ON CONFLICT (jmt_jisang_no, jmt_idx)
		DO UPDATE SET
		jmt_jisa = EXCLUDED.jmt_jisa,
		jmt_yongdo = EXCLUDED.jmt_yongdo,
		jmt_pipe_name = EXCLUDED.jmt_pipe_name,
		jmt_sun_gubun = EXCLUDED.jmt_sun_gubun,
		jmt_sido_nm = EXCLUDED.jmt_sido_nm,
		jmt_sgg_nm = EXCLUDED.jmt_sgg_nm,
		jmt_ri_nm = EXCLUDED.jmt_ri_nm,
		jmt_jibun = EXCLUDED.jmt_jibun,
		jmt_jijuk_area = EXCLUDED.jmt_jijuk_area,
		jmt_gover_own_yn = EXCLUDED.jmt_gover_own_yn,
		jmt_jasan_no = EXCLUDED.jmt_jasan_no,
		jmt_chuideuk_date = EXCLUDED.jmt_chuideuk_date,
		jmt_pyeonib_area = EXCLUDED.jmt_pyeonib_area,
		jmt_use_state = EXCLUDED.jmt_use_state,
		jmt_deunggi_date = EXCLUDED.jmt_deunggi_date,
		jmt_deunggi_no = EXCLUDED.jmt_deunggi_no,
		jmt_deunggiso = EXCLUDED.jmt_deunggiso,
		jmt_dosiplan = EXCLUDED.jmt_dosiplan,
		jmt_account_yn = EXCLUDED.jmt_account_yn,
		jmt_cancle_date = EXCLUDED.jmt_cancle_date,
		jmt_chuideuk_money = EXCLUDED.jmt_chuideuk_money,
		jmt_gammoney = EXCLUDED.jmt_gammoney,
		jmt_remainder_money = EXCLUDED.jmt_remainder_money,
		jmt_cancle_bosang_yn = EXCLUDED.jmt_cancle_bosang_yn,
		jmt_cancle_bosang_money = EXCLUDED.jmt_cancle_bosang_money,
		jmt_cancle_reason = EXCLUDED.jmt_cancle_reason,
		jmt_cancle_comment = EXCLUDED.jmt_cancle_comment;
	</insert>
	
	<!-- 해지부분필수첨부파일 -->
	<insert id="insertJisangReqDoc1" parameterType="map">
		INSERT INTO jisang_req_doc1 (
		jrd_manage_no,
		jrd_fseq,
		jrd_fname,
		jrd_fpath,
		jrd_wdate
		) VALUES (
		#{jisang_no},
		#{fseq}::int,
		#{file_name},
		#{file_path},
		Now()
		
		)
		
	</insert>
	<update id="updateJisangReqDoc1" parameterType="map">
		update jisang_req_doc1 set 
		
		jrd_fname=#{file_name},
		jrd_fpath=#{file_path},
		jrd_wdate=Now()
		where jrd_manage_no=#{jisang_no} and jrd_fseq=#{fseq}::int 
	</update>
	<select id="selectJisangReqDoc1Count" parameterType="map" resultType="Integer">
		select count(*) as count from jisang_req_doc1
		where jrd_manage_no=#{jisang_no} and jrd_fseq=#{fseq}::int 
	</select>
	<select id="selectJisangReqDoc1" parameterType="map" resultType="java.util.HashMap">
		select * from jisang_req_doc1
		where jrd_manage_no=#{manage_no} 
	</select>
	<delete id="jisangReqDoc1Delete" parameterType="java.util.HashMap">

		delete from jisang_req_doc1
		where jrd_manage_no=#{manage_no} and jrd_fseq=#{fseq}::int

	</delete>
	
	
	<!--  지상권 사용 승락 필수 첨부파일 -->
	<insert id="insertJisangReqDoc2" parameterType="map">
		INSERT INTO jisang_req_doc2 (
		jrd_manage_no,
		jrd_fseq,
		jrd_fname,
		jrd_fpath,
		jrd_wdate
		) VALUES (
		#{jisang_no},
		#{fseq}::int,
		#{file_name},
		#{file_path},
		Now()
		
		)
		
	</insert>
	<update id="updateJisangReqDoc2" parameterType="map">
		update jisang_req_doc2 set 
		
		jrd_fname=#{file_name},
		jrd_fpath=#{file_path},
		jrd_wdate=Now()
		where jrd_manage_no=#{jisang_no} and jrd_fseq=#{fseq}::int 
	</update>
	<select id="selectJisangReqDoc2Count" parameterType="map" resultType="Integer">
		select count(*) as count from jisang_req_doc2
		where jrd_manage_no=#{jisang_no} and jrd_fseq=#{fseq}::int 
	</select>
	<select id="selectJisangReqDoc2" parameterType="map" resultType="java.util.HashMap">
		select * from jisang_req_doc2
		where jrd_manage_no=#{manage_no} 
	</select>
	<delete id="jisangReqDoc2Delete" parameterType="java.util.HashMap">

		delete from jisang_req_doc1
		where jrd_manage_no=#{manage_no} and jrd_fseq=#{fseq}::int

	</delete>
	
	
	
	<!-- 지상권분할정보 저장 -->
	<insert id="insertJisangBunhalMaster" parameterType="java.util.HashMap" useGeneratedKeys="true" keyColumn="jb_idx" keyProperty="jb_idx">

		INSERT INTO jisang_bunhal
		(
		 
		 jb_jisang_no
		  ,jb_sido_nm, jb_sgg_nm, jb_emd_nm, jb_ri_nm
		 ,jb_jibun
		 <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(bunhal_jisa)" >
		 , jb_jisa
		 </if>
		 <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(togiJijukArea)" >
		 ,jb_jijuk_area
		 </if>
		 <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(yongdo)" >
		 ,jb_yongdo
		 </if>
		 ,jb_pyeonib_area
		 <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(togiJasanNo)" >
		 ,jb_jasan_no
		 </if>
		 ,jb_gover_own_yn
		 ,jb_cancle_yn
		 ,jb_bunhal_yn
		 <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(bunhalDate)" >
		 ,jb_bunhal_date
		 </if>
		 ,jb_bunhal_reason
		 ,jb_bunhal_org_no
		 ,jb_addrcode
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(togiPnu)" >
		 ,jb_pnu
		 </if>
		 ,jb_remainder_money
		 ,jb_jimok_text
		 <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(dockey)" >
		 ,jb_dockey
		 </if>
		 ,jb_toji_type
		 ,jb_pipe_yn
		 ,jb_bunhal_comment
		 <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(cancelChuideukMoney)" >
		 ,jb_chuideuk_money
		 </if>
		 ,jb_gammoney
		 ,jb_bosang_money
		 ,jb_profit_loss
		 ,jb_demise
		 ,jb_bunhal_complete
		 ,jb_bunhal_status
		 
		)
		 VALUES (
		 
		  #{jisang_no}
		  ,#{togiSidoNm}, #{togiSggNm}, #{togiEmdNm}, #{togiRiNm}
		  ,#{togiJibun}
		  <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(bunhal_jisa)" >
		  , #{bunhal_jisa}
		  </if>
		  <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(togiJijukArea)" >
		  ,nullif(cast(#{togiJijukArea} as varchar),''):: integer
		  </if>
		  <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(yongdo)" >
		  , #{yongdo}
		  </if>
		  ,nullif(cast(#{togiPyeonibArea} as varchar),''):: numeric
		  <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(togiJasanNo)" >
		  ,#{togiJasanNo}
		  </if>
		  ,#{togiGoverOwnYn}
		  ,#{togiCancelYn}
		  ,#{bunhal_yn}
		  <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(bunhalDate)" >
		  ,#{bunhalDate}::date
		  </if>
		  ,#{bunhal_reason}
		  ,#{bunhal_org_no}
		  ,#{addrcode}
		  <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(togiPnu)" >
		  ,#{togiPnu}
		  </if>
		  ,nullif(#{cancelRemainderMoney},'')::numeric
		  ,#{togiJimokText}
		  <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(dockey)" >
		  ,#{dockey}
		  </if>
		  ,#{togiTogiType}
		  ,#{togiPipeYn}
		  ,#{bunhal_comment}
		  <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(cancelChuideukMoney)" >
		  ,NULLIF(cast(#{cancelChuideukMoney} as varchar),'')::numeric
		  </if>
		  ,nullif(#{cancelGammoney},'')::numeric
		  
		  ,#{bosang_money}
		  ,nullif(#{cancelProfitLoss},'')::numeric
		  
		  ,#{togiDemise}
		  ,#{bunhal_complete}
		  ,#{togiBunhalStatus}
		 
		   )

	</insert>
	
	<update id="updateJisangBunhalMaster" parameterType="java.util.HashMap" useGeneratedKeys="true" keyColumn="jb_idx" keyProperty="jb_idx">

		update  jisang_bunhal set
		 
		  jb_sido_nm=#{togiSidoNm}, jb_sgg_nm=#{togiSggNm}, jb_emd_nm=#{togiEmdNm}, jb_ri_nm=#{togiRiNm}
		 ,jb_jibun=#{togiJibun}
		 <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(bunhal_jisa)" >
		 , jb_jisa=#{bunhal_jisa}
		 </if>
		 <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(togiJijukArea)" >
		 ,jb_jijuk_area=nullif(cast(#{togiJijukArea} as varchar),''):: integer
		 </if>
		 <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(yongdo)" >
		 ,jb_yongdo=#{yongdo}
		 </if>
		 ,jb_pyeonib_area=nullif(cast(#{togiPyeonibArea} as varchar),''):: numeric
		 <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(togiJasanNo)" >
		 ,jb_jasan_no=#{togiJasanNo}
		 </if>
		 ,jb_gover_own_yn=#{togiGoverOwnYn}
		 ,jb_cancle_yn=#{togiCancelYn}
		 ,jb_bunhal_yn=#{bunhal_yn}
		 <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(bunhalDate)" >
		 ,jb_bunhal_date=#{bunhalDate}::date
		 </if>
		 ,jb_bunhal_reason=#{bunhal_reason}
		 
		 ,jb_addrcode=#{addrcode}
		
		 ,jb_remainder_money=nullif(#{cancelRemainderMoney},'')::numeric
		 ,jb_jimok_text=#{togiJimokText}
		 <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(dockey)" >
		 ,jb_dockey=#{dockey}
		 </if>
		 ,jb_toji_type=#{togiTogiType}
		 ,jb_pipe_yn=#{togiPipeYn}
		 ,jb_bunhal_comment=#{bunhal_comment}
		 <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(cancelChuideukMoney)" >
		 ,jb_chuideuk_money=NULLIF(cast(#{cancelChuideukMoney} as varchar),'')::numeric
		 </if>
		 ,jb_gammoney=nullif(#{cancelGammoney},'')::numeric
		 ,jb_bosang_money=#{bosang_money}
		 ,jb_profit_loss=nullif(#{cancelProfitLoss},'')::numeric
		 ,jb_demise=#{togiDemise}
		 ,jb_bunhal_complete=#{bunhal_complete}
		 ,jb_bunhal_status=#{togiBunhalStatus}
		 where jb_jisang_no=#{jisang_no}

	</update>
	<!--  부할후 지상에 해지 분할 정보 업데이트 -->
	<update id="updateJisangCancelData" parameterType="java.util.HashMap" useGeneratedKeys="true" keyColumn="jm_idx" keyProperty="jm_idx">

		update  jisang_master set
		 
		 jm_cancle_yn=#{togiCancelYn}
		 ,jm_bunhal_yn=#{bunhal_yn}
		 <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(bunhalDate)" >
		 ,jm_bunhal_date=#{bunhalDate}::date
		 </if>
		 ,jm_bunhal_reason=#{bunhal_reason}
		 
		 ,jm_addrcode=#{addrcode}
		
		 ,jm_remainder_money=nullif(#{cancelRemainderMoney},'')::numeric
		 ,jm_jimok_text=#{togiJimokText}
		 <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(dockey)" >
		 ,jm_dockey=#{dockey}
		 </if>
		 ,jm_toji_type=#{togiTogiType}
		 ,jm_pipe_yn=#{togiPipeYn}
		 ,jm_bunhal_comment=#{bunhal_comment}
		 <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(cancelChuideukMoney)" >
		 ,jm_chuideuk_money=NULLIF(cast(#{cancelChuideukMoney} as varchar),'')::numeric
		 </if>
		 ,jm_gammoney=nullif(#{cancelGammoney},'')::numeric
		 ,jm_bosang_money=#{bosang_money}
		 ,jm_profit_loss=nullif(#{cancelProfitLoss},'')::numeric
		 ,jm_demise=#{togiDemise}
		 ,jm_bunhal_complete=#{bunhal_complete}
		 ,jm_bunhal_status=#{togiBunhalStatus}
		 ,jm_bunhal_org_no=#{bunahl_org_no}
		 where jm_jisang_no=#{jisang_no}

	</update>
	
	
	
	<!--  지상권 분할 필수 첨부파일 -->
	<insert id="insertJisangBunhalAtcfile" parameterType="map">
		INSERT INTO jisang_bunhal_atcfile (
		,jba_seq
		,jba_bunhal_idx
		,jba_file_path
		,jba_file_nm
		,jba_file_gubun
		,jba_wdate
		) VALUES (
		#{jisang_no},
		#{fseq}::int,
		#{file_name},
		#{file_path},
		Now()
		
		)
		
	</insert>
	<update id="updateJisangBunhalAtcfile" parameterType="map">
		update jisang_req_doc2 set 
		
		jrd_fname=#{file_name},
		jrd_fpath=#{file_path},
		jrd_wdate=Now()
		where jrd_manage_no=#{jisang_no} and jrd_fseq=#{fseq}::int 
	</update>
	<select id="selectJisangBunhalAtcfileCount" parameterType="map" resultType="Integer">
		select count(*) as count from jisang_req_doc2
		where jrd_manage_no=#{jisang_no} and jrd_fseq=#{fseq}::int 
	</select>
	<select id="selectJisangBunhalAtcfile" parameterType="map" resultType="java.util.HashMap">
		select * from jisang_bunhal_atcfile
		where 1=1
		
		and jba_bunhal_idx=#{bunhal_idx} 
	</select>
	<delete id="jisangBunhalAtcfileDelete" parameterType="java.util.HashMap">

		delete from jisang_req_doc1
		where jrd_manage_no=#{manage_no} and jrd_fseq=#{fseq}::int

	</delete>
	

	<update id="updateJisangMaster" parameterType="map">
		UPDATE jisang_master
		SET
		jm_jisa = #{jm_jisa},
		jm_yongdo = #{jm_yongdo},
		jm_pipe_name = #{jm_pipe_name},
		jm_sun_gubun = #{jm_sun_gubun},
		jm_sido_nm = #{jm_sido_nm},
		jm_sgg_nm = #{jm_sgg_nm},
		jm_ri_nm = #{jm_ri_nm},
		jm_jibun = #{jm_jibun},
		jm_jijuk_area = #{jm_jijuk_area},
		jm_gover_own_yn = #{jm_gover_own_yn},
		jm_jasan_no = #{jm_jasan_no},
		jm_chuideuk_date = TO_DATE(#{jm_chuideuk_date}, 'YYYY-MM-DD'),
		jm_pyeonib_area = #{jm_pyeonib_area},
		jm_use_state = #{jm_use_state},
		jm_deunggi_date = TO_DATE(#{jm_deunggi_date}, 'YYYY-MM-DD'),
		jm_deunggi_no = #{jm_deunggi_no},
		jm_deunggiso = #{jm_deunggiso},
		jm_dosiplan = #{jm_dosiplan},
		jm_cancle_date = TO_DATE(#{jm_cancel_date}, 'YYYY-MM-DD'),
		jm_chuideuk_money = #{jm_chuideuk_money},
		jm_gammoney = #{jm_gammoney},
		jm_remainder_money = #{jm_remainder_money},
		jm_cancle_bosang_yn = #{jm_cancel_bosang_yn},
		jm_cancle_bosang_money = #{jm_cancel_bosang_money},
		jm_cancle_reason = #{jm_cancel_reason},
		jm_cancle_comment = #{jm_cancel_comment},
		jm_cancle_yn = 'Y'
		WHERE jm_jisang_no = #{jm_jisang_no}
		AND jm_idx = cast(#{jm_idx} as integer)
	</update>

	<!-- 지상권 내역 수정에서 사용 (/jisang/insertJisangList) -->
	<update id="updateJisangMaster1" parameterType="map">
		UPDATE jisang_master
		SET
		jm_jisa = #{JISA},
		jm_yongdo = #{YONGDO},
		jm_pipe_name = #{ZONE},
		jm_sun_gubun = #{SUNGUBUN},
		jm_sido_nm = #{SINM},
		jm_sgg_nm = #{GUNGUNM},
		jm_emd_nm = #{DONGNM},
		jm_ri_nm = #{RINM},
		jm_jibun = #{JIBUN},
		jm_jijuk_area = nullif(#{JIJUKAREA},'')::numeric,
		jm_jimok_text = #{JIMOK},
		jm_manage_yn = #{MANAGE_YN},
		jm_gover_own_yn = #{GOVEROWNYN},
		jm_jasan_no = #{JASANNO},
		jm_chuideuk_date = TO_DATE(#{CD_STARTDAY}, 'YYYY-MM-DD'),
		jm_comple_yn = #{COMPLEYN},
		jm_pyeonib_area = #{PYEONIBAREA}::numeric,
		jm_use_state = #{USESTATE},
		jm_deunggi_date = TO_DATE(#{DGSTARTDAY}, 'YYYY-MM-DD'),
		jm_deunggi_no = #{DEUNGGINO},
		jm_deunggiso = #{DEUNGGISO},
		jm_dosiplan = #{DOSIPLAN},
		jm_cancle_date = TO_DATE(#{jm_cancel_date}, 'YYYY-MM-DD'), <!--해지일자-->
		jm_chuideuk_money = #{jm_chuideuk_money}, <!--취득금액-->
		jm_gammoney = #{jm_gammoney}, <!--감가삼각충당금-->
		jm_remainder_money = #{jm_remainder_money}, <!--?-->
		jm_cancle_bosang_yn = #{jm_cancel_bosang_yn}, <!--?-->
		jm_cancle_bosang_money = #{jm_cancel_bosang_money}, <!--?-->
		jm_cancle_reason = #{jm_cancel_reason}, <!--?-->
		jm_cancle_comment = #{jm_cancel_comment}, <!--?-->
		jm_cancle_yn = 'Y',
		jm_special_cont=#{SPECIALCONT},
		jm_pipe_yn=#{PIPEYN},
		jm_account_yn=#{ACCOUNTYN},
		jm_location=#{LOCATION},
		jm_permitted_yn=#{PERMITTED_YN}
		WHERE jm_jisang_no = #{JISANGNO} <!--지상권번호-->
		
	</update>
	
	
	<!-- 지상권 내역 수정에서 사용 (/jisang/insertJisangList) -->
	<update id="updateJisangMasterNoCancel" parameterType="map">
		UPDATE jisang_master
		SET
		jm_jisa = #{JISA},
		jm_yongdo = #{YONGDO},
		jm_pipe_name = #{ZONE},
		jm_sun_gubun = #{SUNGUBUN},
		jm_sido_nm = #{SINM},
		jm_sgg_nm = #{GUNGUNM},
		jm_emd_nm = #{DONGNM},
		jm_ri_nm = #{RINM},
		jm_jibun = #{JIBUN},
		jm_jijuk_area = nullif(#{JIJUKAREA},'')::numeric,
		jm_jimok_text = #{JIMOK},
		jm_manage_yn = #{MANAGE_YN},
		jm_gover_own_yn = #{GOVEROWNYN},
		jm_jasan_no = #{JASANNO},
		jm_chuideuk_date = TO_DATE(#{CD_STARTDAY}, 'YYYY-MM-DD'),
		jm_comple_yn = #{COMPLEYN},
		jm_pyeonib_area = #{PYEONIBAREA}::numeric,
		jm_use_state = #{USESTATE},
		jm_deunggi_date = TO_DATE(#{DGSTARTDAY}, 'YYYY-MM-DD'),
		jm_deunggi_no = #{DEUNGGINO},
		jm_deunggiso = #{DEUNGGISO},
		jm_dosiplan = #{DOSIPLAN},
		jm_cancle_date = TO_DATE(#{jm_cancel_date}, 'YYYY-MM-DD'), <!--해지일자-->
		jm_chuideuk_money = #{jm_chuideuk_money}, <!--취득금액-->
		jm_gammoney = #{jm_gammoney}, <!--감가삼각충당금-->
		jm_remainder_money = #{jm_remainder_money}, <!--?-->
		jm_cancle_bosang_yn = #{jm_cancel_bosang_yn}, <!--?-->
		jm_cancle_bosang_money = #{jm_cancel_bosang_money}, <!--?-->
		jm_cancle_reason = #{jm_cancel_reason}, <!--?-->
		jm_cancle_comment = #{jm_cancel_comment}, <!--?-->
		
		jm_special_cont=#{SPECIALCONT},
		jm_pipe_yn=#{PIPEYN},
		jm_account_yn=#{ACCOUNTYN},
		jm_location=#{LOCATION},
		jm_permitted_yn=#{PERMITTED_YN}
		WHERE jm_jisang_no = #{JISANGNO} <!--지상권번호-->
		
	</update>
	
	<delete id="deleteJisangMasterTmp" parameterType="map">
		DELETE FROM jisang_master_tmp
		WHERE jmt_jisang_no = #{idx}
		AND jmt_idx = cast(#{index} as integer)
	</delete>



	<!-- 지상기본정보 seq 가져오기 -->
	<select id="selectJisangMasterNextval" parameterType="java.util.HashMap" resultType="Integer">
		SELECT NEXTVAL('jisang_master_jm_idx_seq')
	</select>

	<!-- 지상권기본정보 저장 -->
	<insert id="insertJisangData" parameterType="java.util.HashMap" useGeneratedKeys="true" keyColumn="jm_idx" keyProperty="jm_idx">

		INSERT INTO jisang_master
		(
		 jm_idx
		 ,jm_jisang_no, jm_sido_nm, jm_sgg_nm, jm_emd_nm, jm_ri_nm
		 ,jm_jibun, jm_jisa
<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(chuideuk_date)">
		 ,jm_chuideuk_date
</if>
<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(chuideuk_money)" >
		 ,jm_chuideuk_money
		 </if>
		 <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(jijuk_area)" >
		 ,jm_jijuk_area
		 </if>
		 ,jm_pipe_name,jm_sun_gubun,jm_yongdo
		 <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(dosiplan)" >
		 ,jm_dosiplan
		 </if>
		 ,jm_comple_yn
		 ,jm_pyeonib_area
		 <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(use_state)" >
		 ,jm_use_state
		 </if>
		 <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(deunggi_date)" >
		 ,jm_deunggi_date
		 </if>
		 <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(deunggi_no)" >
		 ,jm_deunggi_no
		 </if>
		 <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(deunggiso)" >
		 ,jm_deunggiso
		 </if>
		 <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(jasan_no)" >
		 ,jm_jasan_no
		 </if>
		 ,jm_gover_own_yn
		 <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(pnu)" >
		 ,jm_pnu
		 </if>
		 ,jm_udate

		 )
		 VALUES (
		  #{idx}
		  ,#{seq}, #{sido_nm}, #{sgg_nm}, #{emd_nm}, #{ri_nm}
		  ,#{jibun}, #{jisa}
		   <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(chuideuk_date)" >
		  ,#{chuideuk_date}::date
		  </if>
		  <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(chuideuk_money)" >
		  ,NULLIF(cast(#{chuideuk_money} as varchar),'')::numeric
		  </if>
		  <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(jijuk_area)" >
		  ,nullif(cast(#{jijuk_area} as varchar),''):: integer
		  </if>
		  ,#{pipe_name}, #{sun_gubun}, #{yongdo}
		  <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(dosiplan)" >
		  , #{dosiplan}
		  </if>
		  , #{comple_yn}
		  ,nullif(cast(#{pyeonib_area} as varchar),''):: numeric
		  <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(use_state)" >
		  , #{use_state}
		  </if>
		  <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(deunggi_date)" >
		  ,#{deunggi_date}::date
		  </if>
		  <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(deunggi_no)" >
		  , #{deunggi_no}
		  </if>
		  <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(deunggiso)" >
		  , #{deunggiso}
		  </if>
		  <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(jasan_no)" >
		  ,#{jasan_no}
		  </if>
		  , #{gover_own_yn}
		  <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(pnu)" >
		  ,#{pnu}
		  </if>
		  ,Now()

		   )

	<!-- 지상기본정보 --></insert>





	<insert id="insertJisangSoujaData" parameterType="java.util.HashMap" useGeneratedKeys="true" keyColumn="js_idx" keyProperty="js_idx">

		INSERT INTO jisang_souja
		(

		 js_jisang_no
		 ,js_jibun
		 ,js_souja_name
		 ,js_address
		 ,js_pone_number
		  <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(soujaContact2)" >
		 ,js_home_number
		 </if>
		 )
		 VALUES (
		  #{seq}
		  ,#{jibun}
		  ,#{soujaName}
		  ,#{soujaAddress}
		  ,#{soujaContact1}
		  <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(soujaContact2)" >
		  ,#{soujaContact2}
		  </if>
		    )

	</insert>
	
	<insert id="insertJisangUploadData" parameterType="java.util.HashMap" useGeneratedKeys="true" keyColumn="ja_idx" keyProperty="ja_idx">
		
		INSERT INTO jisang_atcfile 
		(

		 ja_jisang_no
		 ,ja_seq
		 ,ja_file_path
		 ,ja_file_nm
		 ,ja_file_seq
		) 
		 VALUES (
		  #{jisangNo}
		  ,#{seq}::integer
		  ,#{fpath}
		  ,#{fname}
		  ,#{fseq}
		  
		    )
	
	</insert>

	<select id="bunhalAddressSearch" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		select *,(row_number() over()) as no,
		COALESCE(jm2.ri_nm, '') AS ri_nm2
		FROM jijuk_2024 jm2
		WHERE 1=1

<!--		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(pnu)" >-->
			and jm2.pnu=#{pnu}
<!--		</if>-->
<!--		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(sido_nm)" >-->
<!--			and jm2.sido_nm=#{sido_nm}-->
<!--		</if>-->
<!--		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(sgg_nm)" >-->
<!--			and regexp_replace(jm2.sgg_nm,'[\"]','','g')=#{sgg_nm}-->
<!--		</if>-->
<!--		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(emd_nm)" >-->
<!--			and regexp_replace(jm2.emd_nm,'[\"]','','g')=#{emd_nm}-->
<!--		</if>-->
<!--		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(ri_nm)" >-->
<!--			and regexp_replace(jm2.ri_nm,'[\"]','','g')=#{ri_nm}-->
<!--		</if>-->
<!--		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(jibun)" >-->
<!--			and jm2.jibun like '%${jibun}%'-->
<!--		</if>-->
<!--		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(address)" >-->
<!--			and regexp_replace(jm2.juso,'[\"]','','g') like '%${address}%'-->
<!--		</if>-->
		AND jm2.pnu IS NOT null
		limit 10



	</select>
	
	
	
	
	
	<insert id="insertJIsangBunhalTmp" parameterType="java.util.HashMap">
		INSERT INTO jisang_bunhal
		(
		
		 jb_jisang_no
		 ,jb_sido_nm
		 ,jb_sgg_nm
		 ,jb_emd_nm
		 ,jb_ri_nm
		 ,jb_jibun
		 ,jb_jisa
		 ,jb_jijuk_area
		 ,jb_yongdo
		 ,jb_pyeonib_area
		 ,jb_jasan_no
		 ,jb_gover_own_yn
		 ,jb_cancle_yn
		 ,jb_bunhal_yn
		 ,jb_bunhal_date
		 ,jb_bunhal_reason
		 ,jb_bunhal_org_no
		 ,jb_addrcode
		 ,jb_pnu
		 ,jb_remainder_money
		 ,jb_jimok_text
		 ,jb_dockey
		 ,jb_toji_type
		 ,jb_pipe_yn
		 ,jb_bunhal_comment
		 ,jb_set_money
		 ,jb_bunhal_status
		 ,jb_chuideuk_money
		 ,jb_gammoney
		 ,jb_bosang_money
		 ,jb_profit_loss
		 ,jb_demise
		 ,jb_bunhal_complete
		 ) 
		 VALUES (
		 #{JISANG_NO}
		 ,#{SIDO_NM}
		 ,#{SGG_NM}
		 ,#{EMD_NM}
		 ,#{RI_NM}
		 ,#{JIBUN}
		 ,#{JISA}
		 ,NULLIF(cast(#{JIJUK_AREA} as varchar),'')::numeric
		 ,#{YOUNGDO}
		 ,NULLIF(cast(#{PYEONIB_AREA} as varchar),'')::numeric
		 ,#{JASAN_NO}
		 ,#{CANCLE_YN}
		 ,#{GOVER_OWN_YN}
		 ,#{BUNHAL_YN}
		 ,Now()
		 ,#{BUNHAL_REASON}
		 ,#{BUNHAL_ORG_NO}
		 ,#{ADDRCODE}
		 ,#{PNU}
		 ,NULLIF(cast(#{REMAINDER_MONEY} as varchar),'')::numeric
		 ,#{JIMOK_TEXT}
		 ,#{DOCKEY}
		 ,#{TOJI_TYPE}
		 ,#{PIPE_YN}
		 ,#{BUNHAL_COMMENT}
		 ,NULLIF(cast(#{SET_MONEY} as varchar),'')::numeric
		 ,'임시저장'
		 ,NULLIF(cast(#{CHUIDEUK_MONEY} as varchar),'')::numeric
		 ,NULLIF(cast(#{GAMMONEY} as varchar),'')::numeric
		 ,NULLIF(cast(#{BOSANG_MONEY} as varchar),'')::numeric
		 ,NULLIF(cast(#{PROFIT_LOSS} as varchar),'')::numeric
		 ,#{DEMISE}
		 ,#{BUNHAL_COMPLETE}
		 	  	  	   
		)
	</insert>
	
	<select id="selectJisangDetailList" parameterType="HashMap" resultType="java.util.HashMap">
		SELECT * FROM jisang_master jm 
LEFT JOIN jisang_toja_order jto ON jto.jto_jisang_no=jm.jm_jisang_no

LEFT JOIN jijuk_2024 j2 ON j2.pnu=jm.jm_pnu
WHERE 1=1
		AND (JM.jm_BUNHAL_YN IS NULL OR JM.jm_BUNHAL_YN != 'Y' OR JM.jm_BUNHAL_ORG_NO IS NOT NULL)
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(JISANGNO)" >
			AND jm.jm_jisang_no =#{JISANGNO}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(BUNHAL_ORG_NO)" >
		
			AND jm.jm_bunhal_org_no =#{BUNHAL_ORG_NO}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(MERGE_NO)" >
		
			AND jm.jm_merge_no = #{MERGE_NO}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(MERGE_CHECK)" >
		
			AND jm.jm_pnu = #{PNU}
		</if>
		
		ORDER BY jm.jm_jisang_no DESC
	</select>
	
	
	<select id="selectJisangDetailListNew" parameterType="HashMap" resultType="java.util.HashMap">
		SELECT JM.jm_jisang_no as JISANG_NO,
		JM.jm_idx as idx,
       JM.jm_sido_nm as SIDO_NM,
       JM.jm_sgg_nm as SGG_NM,
       JM.jm_emd_nm as EMD_NM,
       JM.jm_ri_nm as RI_NM,
       JM.jm_jibun as JIBUN,
       JM.jm_jisa as JISA,
       TO_CHAR(JM.jm_CHUIDEUK_DATE, 'YYYY-MM-DD') AS CHUIDEUK_DATE,
       TRIM(TO_CHAR(JT.CHUIDEUK_MONEY, '999,999,999,999,999')) AS CHUIDEUK_MONEY,
       JM.jm_JIJUK_AREA + COALESCE((SELECT SUM(COALESCE(S.jm_JIJUK_AREA, 0))
                                         FROM JISANG_MERGE S
                                         WHERE S.jm_REP_JISANG_NO = JM.jm_JISANG_NO), 0) AS JIJUK_AREA,
       JIJUK_MST.JIMOK_TEXT,
       JM.jm_pipe_name as PIPE_NAME,
       JM.jm_sun_gubun as SUN_GUBUN,
       JM.jm_yongdo as YONGDO,
       JM.jm_dosiplan as DOSIPLAN,
       JM.jm_comple_yn as COMPLE_YN,
       JM.jm_PYEONIB_AREA + COALESCE((SELECT SUM(COALESCE(S.jm_PYEONIB_AREA, 0))
                                           FROM JISANG_MERGE S
                                           WHERE S.jm_REP_JISANG_NO = JM.jm_JISANG_NO), 0) AS PYEONIB_AREA,
       JM.jm_use_state as USE_STATE,
       TO_CHAR(JM.jm_DEUNGGI_DATE, 'YYYY-MM-DD') AS DEUNGGI_DATE,
       JM.jm_deunggi_no as DEUNGGI_NO,
       JM.jm_deunggiso as DEUNGGISO,
       JM.jm_jasan_no as JASAN_NO,
       JM.jm_cancle_yn as CANCLE_YN,
       (CASE
            WHEN JM.jm_CANCLE_DATE IS NOT NULL THEN TO_CHAR(JM.jm_cancle_DATE, 'YYYY-MM-DD')
            ELSE TO_CHAR(JT.CANCLE_DATE, 'YYYY-MM-DD')
        END) AS CANCLE_DATE,
       (CASE
            WHEN JM.jm_CANCLE_EMPCD IS NOT NULL THEN JM.jm_cancle_EMPCD
            ELSE JT.CANCLE_EMPCD
        END) AS CANCLE_EMPCD,
       (CASE
            WHEN JM.jm_CANCLE_NAME IS NOT NULL THEN JM.jm_cancle_NAME
            ELSE JT.CANCLE_NAME
        END) AS CANCLE_NAME,
       (CASE
            WHEN JM.jm_CANCLE_BOSANG_YN IS NOT NULL THEN JM.jm_cancle_BOSANG_YN
            ELSE JT.CANCLE_BOSANG_YN
        END) AS CANCLE_BOSANG_YN,
       (CASE
            WHEN JM.jm_CANCLE_BOSANG_MONEY IS NOT NULL THEN TRIM(TO_CHAR(JM.jm_cancle_BOSANG_MONEY, '999,999,999,999,999'))
            ELSE TRIM(TO_CHAR(JT.CANCLE_BOSANG_MONEY, '999,999,999,999,999'))
        END) AS CANCLE_BOSANG_MONEY,
       JIJUK_MST.GOVER_OWN_YN,
       JM.jm_bunhal_yn as BUNHAL_YN,
       TO_CHAR(JM.jm_BUNHAL_DATE, 'YYYY-MM-DD') AS BUNHAL_DATE,
       JM.jm_bunhal_reason as BUNHAL_REASON,
       JM.jm_bunhal_org_no as BUNHAL_ORG_NO,
       JM.jm_addrcode as ADDRCODE,
       TOR.TOJA_NO,
       JM.jm_pnu as PNU,
       JT.CANCLE_REASON,
       JT.CANCLE_COMMENT,
       TRIM(TO_CHAR(JT.GAMMONEY, '999,999,999,999,999')) AS GAMMONEY,
       TRIM(TO_CHAR(JT.REMAINDER_MONEY, '999,999,999,999,999')) AS REMAINDER_MONEY,
       JT.CANCLE_STATUS,
       JT.account_yn,
       JM.jm_dockey as DOCKEY,
       JM.jm_toji_type as TOJI_TYPE,
       JM.jm_bunhal_comment as BUNHAL_COMMENT,
       JM.jm_pipe_yn as PIPE_YN,
       JM.jm_SET_MONEY AS SET_MONEY,
       PA.pa_status as STATUS,
       JM.jm_merge_reason as MERGE_REASON,
       JM.jm_merge_comment as MERGE_COMMENT,
       JM.jm_merge_no as MERGE_NO,
       JM.jm_merge_rep_yn as MERGE_REP_YN,
       JM.jm_save_status as SAVE_STATUS,
       JM.jm_location as LOCATION,
       JM.jm_special_cont as SPECIAL_CONT,
       JM.jm_permitted_yn as PERMITTED_YN,
       JM.jm_account_yn AS ACCOUNT_YN,
       JIJUK_MST.juso,
       JIJUK_MST.x,
       JIJUK_MST.y,
       trim(concat(jm.jm_sido_nm,' ',jm.jm_sgg_nm,' ',jm.jm_ri_nm,' ',jm.jm_jibun)) as address
FROM JISANG_MASTER JM
LEFT JOIN TOJA_ORDER TOR ON JM.jm_JISANG_NO = TOR.JISANG_NO
LEFT JOIN PLMS_APPROVAL PA ON JM.jm_DOCKEY = PA.pa_DOCKEY
LEFT JOIN JISANG_TERMINATION JT ON JM.jm_JISANG_NO = JT.JISANG_NO
LEFT JOIN JIJUK_2024 JIJUK_MST ON JM.jm_PNU = JIJUK_MST.PNU
		WHERE 1=1
		<!-- AND (JM.BUNHAL_YN IS NULL OR JM.BUNHAL_YN != 'Y' OR JM.BUNHAL_ORG_NO IS NOT NULL) -->
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(JISANGNO)" >
			AND JM.jm_JISANG_NO = #{JISANGNO}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(BUNHAL_ORG_NO)" >
			AND JM.BUNHAL_ORG_NO = #{BUNHAL_ORG_NO}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(MERGE_NO)" >
			AND JM.MERGE_NO = #{MERGE_NO}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(PNU)" >
			AND JM.PNU = #{PNU}
		</if>
		
		ORDER BY JM.jm_JISANG_NO DESC
	</select>
	
	
	
	<select id="selectJisangBunHalDocInfo" parameterType="HashMap" resultType="java.util.HashMap">
		SELECT * FROM plms_approval where dockey in (select dockey from jisang_bunhal where jb_jisang_no = #{JISANGNO}) and (status is null or status not in ('X'))
	</select>
	
	<select id="selectJisangBunhalTmpList" parameterType="HashMap" resultType="java.util.HashMap">
		SELECT
		JB.jb_JISANG_NO,
		JB.jb_SIDO_NM,
		JB.jb_SGG_NM,
		JB.jb_EMD_NM,
		JB.jb_RI_NM,
		JB.jb_JIBUN,
		JB.jb_JISA,
		JB.jb_JIJUK_AREA,
		JB.jb_YONGDO,
		JB.jb_PYEONIB_AREA,
		JB.jb_JASAN_NO,
		
		JB.jb_CANCLE_YN,
		JB.jb_GOVER_OWN_YN,
		JB.jb_BUNHAL_YN,
		TO_CHAR(JB.jb_BUNHAL_DATE, 'YYYY-MM-DD') as BUNHAL_DATE,
		JB.jb_BUNHAL_REASON,
		JB.jb_BUNHAL_ORG_NO,
		JB.jb_ADDRCODE,
		JB.jb_PNU,
		JB.jb_REMAINDER_MONEY,
		JB.jb_JIMOK_TEXT,
		JB.jb_DOCKEY,
		JB.jb_TOJI_TYPE,
		JB.jb_PIPE_YN,
		JB.jb_BUNHAL_COMMENT,
		JB.jb_SET_MONEY,
		JB.jb_BUNHAL_STATUS,
		JB.jb_CHUIDEUK_MONEY,
		JB.jb_GAMMONEY,
		JB.jb_BOSANG_MONEY,
		JB.jb_PROFIT_LOSS,
		JB.jb_DEMISE,
		PA.pa_STATUS
		FROM
		JISANG_BUNHAL JB
		LEFT JOIN PLMS_APPROVAL PA ON JB.jb_dockey=PA.pa_dockey
		WHERE
		JB.jb_BUNHAL_ORG_NO =#{JISANGNO}
		
		ORDER BY JB.jb_jisang_no
	</select>
	
	<select id="selectJisangDetailSoyu" parameterType="HashMap" resultType="java.util.HashMap">
		SELECT JS_JISANG_NO, JS_JIBUN, JS_SOUJA_NAME, JS_ADDRESS, JS_PONE_NUMBER, JS_HOME_NUMBER
		FROM JISANG_SOUJA
		WHERE 1=1
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(JISANGNO)" >
			AND JS_JISANG_NO = #{JISANGNO}
		</if>
		ORDER BY JS_SOUJA_NAME

	</select>
	
	<select id="selectJisangPmtDetail_MASTER"  parameterType="HashMap" resultType="java.util.HashMap">
		SELECT PMT_NO AS PMT_NO
, USE_PURPOS AS USE_PURPOS
, ECHO_NO AS ECHO_NO
, TO_CHAR(USE_ST_DATE , 'YYYY-MM-DD') AS USE_ST_DATE
, TO_CHAR(USE_ED_DATE, 'YYYY-MM-DD') AS USE_ED_DATE
, SPOT_RESULT AS SPOT_RESULT
, rivew AS rivew
, CONTRACT AS CONTRACT
, PMT_STATUS AS PMT_STATUS
, DOCKEY AS DOCKEY
FROM permit_master
		WHERE pmt_no = #{PMT_NO}
	</select>
	<select id="selectJisangPmtDetail_TOGI"  parameterType="HashMap" resultType="java.util.HashMap">
		SELECT PMT_NO as PMT_NO
		,jisang_no as JISANG_NO
		,addrcode as ADDRCODE
		,soyuja as SOYUJA
		,pmt_user as  PMT_USER
		,jimok as  JIMOK
		,ALL_AREA AS ALL_AREA
		, SET_AREA AS SET_AREA
		, set_money as SET_MONEY
		, sido_nm as SIDO_NM
		, sgg_nm as SGG_NM
		, emd_nm as EMD_NM
		, ri_nm as RI_NM
		, jibun as JIBUN
		, addr as ADDR
		, jasan_no as JASAN_NO
		FROM permit_togi
		WHERE pmt_no = #{PMT_NO}
		ORDER BY JISANG_NO
	</select>
	
	
		<select id="selectJisangPmtDetail_FILE" parameterType="HashMap" resultType="java.util.HashMap">
		SELECT PMT_NO, seq , FILE_PATH,FILE_NM,FILE_GUBUN
		FROM permit_atcfile
		WHERE pmt_no = #{PMT_NO}
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(SEQ)" >
			AND seq = #{SEQ}
		</if>
		
		ORDER BY seq
	</select>
	
	
	<update id="updateJisangBunhalEchoNo" parameterType="HashMap" >
		UPDATE JISANG_BUNHAL SET
		jb_dockey = #{DOCKEY},
		jb_bunhal_status = '상신'
		WHERE jb_bunhal_org_no = #{JISANGNO}
	</update>
	<update id="updateJisangPmtDetailEchoNo"  parameterType="HashMap" >
		UPDATE permit_master SET
		dockey = #{DOCKEY}
		WHERE pmt_no = #{PMT_NO}
	</update>
	<select id="selectDocInfo" parameterType="HashMap" resultType="java.util.HashMap">
		SELECT *
			,pa_out_flag AS OUT_FLAG
		,pa_out_url AS OUT_URL
		 FROM plms_approval where pa_dockey in (select dockey from permit_master where pmt_no = #{PMT_NO}) and (pa_status is null or pa_status not in ('X'))
	</select>
	
	
	<update id="insertJisangTerminationAdd" parameterType="HashMap">
		UPDATE jisang_master SET
		jm_cancle_bosang_money = #{CANCLE_BOSANG_MONEY}
		,jm_cancle_bosang_yn = #{CANCLE_YES}
		,jm_cancle_date = TO_DATE(#{STARTDAY},'YYYYMMDDHH24MISS')
		,jm_chuideuk_money = #{CHUIDEUKMONEY}
		,jm_gammoney = #{GAMMONEY}
		,jm_remainder_money = #{REMAINDERMONEY}
		,jm_cancle_empcd = #{EMPCD}
		,jm_cancle_name = #{NAME}
		,jm_cancle_reason = #{CANCLE_REASON}
		,jm_cancle_comment = #{CANCLE_COMMENT}
		WHERE jm_jisang_no = #{JISANGNO}
	</update>
	
	<update id="mergeJisangTermination" parameterType="HashMap">
		INSERT INTO jisang_termination (
    jisang_no,
    cancle_date,
    cancle_reason,
    cancle_comment,
    cancle_bosang_yn,
    cancle_bosang_money,
    cancle_name,
    cancle_empcd,
    chuideuk_money,
    gammoney,
    remainder_money,
    cancle_status,
    account_yn
)
VALUES (
    #{JISANGNO},
    #{STARTDAY}::date,
    #{CANCLE_REASON},
    #{CANCLE_COMMENT},
    #{CANCLE_BOSANG_YN},
    #{CANCLE_BOSANG_MONEY}::numeric,
    #{NAME},
    #{EMPCD},
    nullif(#{CHUIDEUKMONEY},'')::numeric,
    nullif(#{GAMMONEY},'')::numeric,
    nullif(#{REMAINDERMONEY},'')::numeric,
    #{CANCLE_STATUS},
    #{ACCOUNT_YN}
)
ON CONFLICT (jisang_no)
DO UPDATE
SET 
    cancle_date = #{STARTDAY}::date,
    cancle_reason = #{CANCLE_REASON},
    cancle_comment = #{CANCLE_COMMENT},
    cancle_bosang_yn = #{CANCLE_BOSANG_YN},
    cancle_bosang_money = #{CANCLE_BOSANG_MONEY}::numeric,
    cancle_name = #{NAME},
    cancle_empcd = #{EMPCD},
    chuideuk_money = nullif(#{CHUIDEUKMONEY},'')::numeric,
    gammoney = nullif(#{GAMMONEY},'')::numeric,
    remainder_money = nullif(#{REMAINDERMONEY},'')::numeric,
    cancle_status = #{CANCLE_STATUS},
    account_yn=#{ACCOUNT_YN}
	</update>
	
	
	<select id="selectJisangDocInfo" parameterType="HashMap" resultType="java.util.HashMap">
		SELECT * FROM plms_approval where pa_dockey in (select jm_dockey from jisang_master where jm_jisang_no = #{JISANGNO}) 
		and (pa_status is null or pa_status not in ('X'))
	</select>
	
	<select id="selectJisangRowDetail_KibonInfo" parameterType="HashMap" resultType="java.util.HashMap">
SELECT 
    JM.jm_JISANG_NO AS JISANG_NO,
    JM.jm_jisa as JISA,
    JM.jm_yongdo as YONGDO,
    JM.jm_pipe_name as PIPE_NAME,
    JM.jm_sun_gubun as SUN_GUBUN,
    JM.jm_sido_nm as SIDO_NM,
    JM.jm_sgg_nm as SGG_NM,
    JM.jm_emd_nm as EMD_NM,
    JM.jm_addrcode as ADDRCODE,
    JM.jm_ri_nm as RI_NM,
    JM.jm_jibun as JIBUN,
    JM.jm_jijuk_area  + COALESCE(
        (SELECT SUM(COALESCE(S.jm_JIJUK_AREA, 0))
         FROM jisang_merge S
         WHERE S.jm_REP_JISANG_NO = JM.jm_JISANG_NO), 0
    ) AS JIJUK_AREA,
    JM.jm_jimok_text as JIMOK_TEXT,
    JM.jm_pnu as PNU,
    JM.jm_save_status as SAVE_STATUS,
    CASE
        
        WHEN JM.jm_PIPE_YN IS NOT NULL THEN JM.jm_PIPE_YN
        ELSE 'N'
    END AS PIPE_OVERLAP_YN
FROM 
    jisang_master JM
LEFT JOIN 
    JIJUK_2024 JKM ON JM.jm_PNU = JKM.PNU
WHERE 
    JM.jm_JISANG_NO = #{JISANG_NO}

</select>
<select id="selectJisangRowDetail_SoujaInfo"  parameterType="HashMap" resultType="java.util.HashMap">
		SELECT *
		FROM jisang_souja
		WHERE js_jisang_no =#{JISANG_NO}
		ORDER BY js_souja_name ASC
	</select>
		<select id="selectJisangRowDetail_Files" parameterType="HashMap" resultType="java.util.HashMap">
		SELECT *
		FROM jisang_atcfile
		WHERE ja_jisang_no =#{FILENO}
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(SEQ)" >
		
			AND ja_seq =#{SEQ}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(FILE_SEQ)" >
		
			AND ja_file_seq =#{FILE_SEQ}
		</if>
		ORDER BY ja_seq DESC
	</select>
	
	<!--  지상정보 조회  -->
	<select id="getSaveJisangMergeData"  parameterType="HashMap" resultType="java.util.HashMap">
		SELECT *
		FROM jisang_master
		WHERE jm_jisang_no =#{jisangNo}
		
	</select>
	
	<select id="selectJisangMergeSaveList" parameterType="HashMap" resultType="java.util.HashMap">
		SELECT
    JM.jm_jisang_no as JISANG_NO,
    JM.jm_sido_nm as SIDO_NM,
    JM.jm_sgg_nm as SGG_NM,
    JM.jm_emd_nm as EMD_NM,
    JM.jm_ri_nm as RI_NM,
    JM.jm_jibun as JIBUN,
    JM.jm_jisa as JISA,
    JM.jm_addrcode as ADDRCODE,
    JM.jm_pnu as PNU,
    JM.jm_jimok_text as JIMOK_TEXT,
    JM.jm_jijuk_area as JIJUK_AREA,
    JMT.jmt_pyeonib_area as PYEONIB_AREA,
    JMT.jmt_set_money as SET_MONEY,
    JMT.jmt_jasan_no as JASAN_NO,
    JMT.jmt_dockey as DOCKEY,
    JMT.jmt_MERGE_REASON,
    JMT.jmt_merge_comment as MERGE_COMMENT,
    JMT.jmt_rep_jisang_no as REP_JISANG_NO,
    JMT.jmt_merge_status as MERGE_STATUS,
    CASE
        WHEN JM.jm_jisang_no = JMT.jmt_rep_jisang_no THEN 'Y'
        ELSE 'N'
    END AS MAIN_FLAG,
    PA.pa_status as STATUS
FROM
    jisang_master JM
JOIN
    jisang_merge_tmp  JMT ON JM.jm_jisang_no = JMT.jmt_jisang_no
LEFT JOIN
    plms_approval  PA ON JMT.jmt_dockey = PA.pa_dockey
WHERE
    1 = 1
    <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(REP_JISANG_NO)" >
		
			AND JMT.jmt_rep_jisang_no = #{REP_JISANG_NO}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(JISANG_NO)" >
		
			AND JMT.jmt_jisang_no = #{JISANG_NO}
		</if>
	</select>
	
	<update id="updateJisangMergeEchoNo" parameterType="HashMap">
		UPDATE jisang_merge_tmp SET
		jmt_dockey = #{DOCKEY}
		WHERE jmt_rep_jisang_no = #{JISANGNO}
	</update>
	<select id="selectJisangMergeInfo"  parameterType="HashMap" resultType="java.util.HashMap">
		SELECT * FROM plms_approval where pa_dockey in (select jmt_dockey from jisang_merge_tmp where jmt_jisang_no = #{JISANGNO}) and (pa_status is null or pa_status not in ('X'))
	</select>
	
	<insert id="insertJisangMergeTmp" parameterType="HashMap">
		INSERT INTO jisang_merge_tmp (
		jmt_jisang_no,
		jmt_pyeonib_area,
		jmt_set_money,
		jmt_jasan_no,
		jmt_rep_jisang_no,
		jmt_merge_reason,
		jmt_merge_comment,
		jmt_merge_status,
		jmt_dockey
		) VALUES (
		#{JISANG_NO},
		#{PYEONIB_AREA}::numeric,
		#{SET_MONEY}::numeric,
		#{JASAN_NO},
		#{REP_JISANG_NO},
		#{MERGE_REASON},
		#{MERGE_COMMENT},
		#{MERGE_STATUS},
		#{DOCKEY}
		)
	</insert>
	
	<select id="selectJijangNextNo"  parameterType="HashMap" resultType="HashMap">
		
		SELECT
		MAX(NOW_JISANGNO) AS NOW_JISANGNO
		FROM
		(
		SELECT
		COALESCE(MAX(SUBSTR(jm_JISANG_NO, 3)), NULL, '0', MAX(SUBSTR(jm_JISANG_NO, 3))) AS NOW_JISANGNO
		FROM
		JISANG_MASTER
		UNION ALL
		SELECT
		COALESCE(MAX(SUBSTR(jm_JISANG_NO, 3)), NULL, '0', MAX(SUBSTR(jm_JISANG_NO, 3))) AS NOW_JISANGNO
		FROM
		JISANG_MERGE
		) T
	</select>
	
	<insert id="insertJisangMaster" parameterType="HashMap">
		Insert into JISANG_MASTER
		(jm_JISANG_NO, jm_SIDO_NM, jm_SGG_NM, jm_EMD_NM,jm_RI_NM, jm_JIBUN, jm_JISA, jm_GOVER_OWN_YN,
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(CD_STARTDAY)" >
			jm_CHUIDEUK_DATE,
		</if>

		jm_JIJUK_AREA, jm_PIPE_NAME, jm_SUN_GUBUN, jm_YONGDO, jm_DOSIPLAN, jm_COMPLE_YN, jm_PYEONIB_AREA,
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(DGSTARTDAY)" >
			jm_DEUNGGI_DATE,
		</if>
		jm_DEUNGGI_NO, jm_DEUNGGISO, jm_JASAN_NO, jm_ADDRCODE, jm_PNU, jm_USE_STATE, jm_SPECIAL_CONT, jm_LOCATION, jm_JIMOK_TEXT
		, jm_SAVE_STATUS, jm_PERMITTED_YN,jm_PIPE_YN,jm_account_yn,jm_manage_yn)
		Values
		(#{JISANGNO}, #{SINM}, #{GUNGUNM}, #{DONGNM}, #{RINM}, #{JIBUN}, #{JISANM}, #{GOVEROWNYN},
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(CD_STARTDAY)" >
			TO_DATE(#{CD_STARTDAY}, 'YYYY-MM-DD'),
		</if>

		nullif(#{JIJUKAREA},'')::numeric,
		#{ZONE}, #{SUNGUBUN}, #{YONGDO}, #{DOSIPLAN}, #{COMPLEYN}, nullif(#{PYEONIBAREA},'')::numeric,
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(DGSTARTDAY)" >
			TO_DATE(#{DGSTARTDAY}, 'YYYY-MM-DD') ,
		</if>
		#{DEUNGGINO}, #{DEUNGGISO},
		#{JASANNO}, #{ADDRCODE}, #{PNU} ,#{USESTATE} , #{SPECIALCONT} , #{LOCATION}, #{JIMOK}, #{SAVE_STATUS}, #{PERMITTED_YN},#{PIPEYN},#{ACCOUNTYN},#{MANAGE_YN})
	</insert>
	
	<insert id="insertJisangMasterTmp" parameterType="HashMap">
		Insert into JISANG_MASTER_TMP
		(jmt_JISANG_NO, jmt_SIDO_NM, jmt_SGG_NM, jmt_EMD_NM,jmt_RI_NM, jmt_JIBUN, jmt_JISA, jmt_GOVER_OWN_YN,
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(CD_STARTDAY)" >
		
			jmt_CHUIDEUK_DATE,
		</if>

		jmt_JIJUK_AREA, jmt_PIPE_NAME, jmt_SUN_GUBUN, jmt_YONGDO,jmt_DOSIPLAN, jmt_COMPLE_YN, jmt_PYEONIB_AREA,
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(DGSTARTDAY)" >
			jmt_DEUNGGI_DATE,
		</if>
		jmt_DEUNGGI_NO, jmt_DEUNGGISO, jmt_JASAN_NO, jmt_ADDRCODE, jmt_PNU, jmt_USE_STATE
		, jmt_SPECIAL_CONT, jmt_LOCATION, jmt_JIMOK_TEXT)
		Values
		({JISANGNO}, {SINM}, {GUNGUNM}, {DONGNM}, {RINM}, {JIBUN}, {JISANM}, {GOVEROWNYN},
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(CD_STARTDAY)" >
			TO_DATE({CD_STARTDAY}, 'YYYYMMDD'),
		</if>

		{JIJUKAREA},
		{ZONE}, {SUNGUBUN}, {YONGDO}, {DOSIPLAN}, {COMPLEYN}, to_number({PYEONIBAREA}),
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(DGSTARTDAY)" >
			TO_DATE({DGSTARTDAY}, 'YYYYMMDD') ,
		</if>
		{DEUNGGINO}, {DEUNGGISO},
		{JASANNO}, {ADDRCODE}, {PNU} ,{USESTATE} , {SPECIALCONT} , {LOCATION}, {JIMOK})
	</insert>
	<update id="updateJisangMasterStatus" parameterType="HashMap">
		UPDATE JISANG_MASTER SET jm_SAVE_STATUS = #{SAVE_STATUS} WHERE jm_JISANG_NO = #{JISANGNO}
	</update>
		<insert id="insertJisangTmpModifyHistory" parameterType="HashMap">
		Insert into JISANG_MODIFY_TMP
		( JISANG_NO, MODIFY_DATE, GUBUN, CONT, USER_NAME, USER_ID )
		Values
		(#{JISANGNO}, Now(), #{GUBUN}, #{CONT}, #{USER_NAME}, #{USER_ID})
	</insert>
		<delete id="deleteJisangSoyuTmp" parameterType="HashMap">
		DELETE FROM JISANG_SOUJA_TMP
		WHERE jst_JISANG_NO = #{JISANGNO}
	</delete>
		<insert id="insertJisangSoyuTmp" parameterType="HashMap">
		Insert into JISANG_SOUJA_TMP
		(jst_JISANG_NO, jst_JIBUN, jst_SOUJA_NAME, jst_ADDRESS, jst_HOME_NUMBER ,jst_PONE_NUMBER)
		Values
		(#{JISANGNO}, #{JIBUN}, #{NAME}, #{ADDR}, #{TEL} , #{HP})
	</insert>
	
	<insert id="insertJisangSoyu" parameterType="HashMap">
		Insert into JISANG_SOUJA
		(js_JISANG_NO, js_JIBUN, js_SOUJA_NAME, js_ADDRESS ,js_PONE_NUMBER, js_HOME_NUMBER)
		Values
		(#{JISANGNO}, #{JIBUN}, #{NAME}, #{ADDR}, #{PONE_NUMBER} , #{HOME_NUMBER})
	</insert>
	
		<select id="selectJISANG_ATCFILE_NoCheck" parameterType="HashMap" resultType="java.util.HashMap">
		SELECT * FROM JISANG_ATCFILE
		WHERE ja_SEQ = #{FILESEQ}
	</select>
	<delete id="deleteAllFileTmp" parameterType="HashMap">
		DELETE FROM JISANG_ATCFILE_TMP
		WHERE jat_SEQ = #{FILESEQ}
	</delete>
	<insert id="insertJisangFileTmp_SEQ" parameterType="HashMap">
            
			INSERT INTO JISANG_ATCFILE_TMP( jat_SEQ, jat_FILE_PATH, jat_FILE_NM, jat_FILE_SEQ )
			VALUES ( #{SEQ} , #{FILE_PATH}, #{FILE_NM},  #{FILE_SEQ} )
			
	</insert>
	<select id="selectJisangRowDetailTmp_Files" parameterType="HashMap" resultType="java.util.HashMap">
		SELECT *
		FROM JISANG_ATCFILE_TMP
		WHERE jat_JISANG_NO = #{FILENO}
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(SEQ)" >
			AND jat_SEQ = #{SEQ}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(FILE_SEQ)" >
			AND jat_FILE_SEQ = #{FILE_SEQ}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(DEL_FLAG)" >
			AND jat_DEL_FLAG = #{DEL_FLAG}
		</if>
		ORDER BY jat_SEQ DESC
	</select>
	<update id="updateSeqFile" parameterType="HashMap">
		UPDATE JISANG_ATCFILE SET
		ja_JISANG_NO = #{JISANGNO}
		WHERE ja_SEQ = #{FILESEQ}
	</update>

	<update id="updateSeqFileTmp" parameterType="HashMap">
		UPDATE JISANG_ATCFILE_TMP SET
		jat_JISANG_NO = #{JISANGNO}
		WHERE jat_SEQ = #{FILESEQ}
	</update>
	<insert id="insertJisangModifyHistory" parameterType="HashMap">
		Insert into JISANG_MODIFY
		( jm_JISANG_NO, jm_MODIFY_DATE, jm_GUBUN, jm_CONT, jm_USER_NAME, jm_USER_ID )
		Values
		(#{JISANGNO}, Now(), #{GUBUN}, #{CONT}
		, #{USER_NAME}
		, #{USER_ID}
		)
	</insert>
	<insert id="DelFileTmp" parameterType="HashMap">
		UPDATE
		JISANG_ATCFILE_TMP
		SET
		jat_DEL_FLAG = #{DEL_FLAG}
		WHERE
		jat_FILE_SEQ = #{FILE_SEQ}
	</insert>
	<select id="selectJisangDetailTmpList" parameterType="HashMap" resultType="java.util.HashMap">
				SELECT JMT.jmt_jisang_no AS JISANG_NO,
		       JMT.jmt_sido_nm AS SIDO_NM,
		       JMT.jmt_sgg_nm AS SGG_NM,
		       JMT.jmt_emd_nm AS EMD_NM,
		       JMT.jmt_ri_nm AS RI_NM,
		       JMT.jmt_jibun AS JIBUN,
		       JMT.jmt_jisa AS JISA,
		       TO_DATE(JMT.jmt_chuideuk_date, 'YYYY-MM-DD') AS CHUIDEUK_DATE,
		       JMT.jmt_jijuk_area AS JIJUK_AREA,
		       JMT.jmt_jimok_text AS JIMOK_TEXT,
		       JMT.jmt_pipe_name AS PIPE_NAME,
		       JMT.jmt_sun_gubun AS SUN_GUBUN,
		       JMT.jmt_yongdo AS YONGDO,
		       JMT.jmt_dosiplan AS DOSIPLAN,
		       JMT.jmt_comple_yn AS COMPLE_YN,
		       JMT.jmt_pyeonib_area AS PYEONIB_AREA,
		       JMT.jmt_use_state AS USE_STATE,
		       TO_DATE(JMT.jmt_deunggi_date, 'YYYY-MM-DD') AS DEUNGGI_DATE,
		       JMT.jmt_deunggi_no AS DEUNGGI_NO,
		       JMT.jmt_deunggiso AS DEUNGGISO,
		       JMT.jmt_jasan_no AS JASAN_NO,
		       JMT.jmt_gover_own_yn AS GOVER_OWN_YN,
		       JMT.jmt_addrcode AS ADDRCODE,
		       JMT.jmt_special_cont AS SPECIAL_CONT,
		       JMT.jmt_pnu AS PNU,
		       JMT.jmt_dockey AS DOCKEY,
		       JMT.jmt_toji_type AS TOJI_TYPE,
		       JMT.jmt_pipe_yn AS PIPE_YN,
		       PA.pa_status AS STATUS
				FROM jisang_master_tmp JMT
				LEFT JOIN plms_approval PA
				       ON JMT.dockey = PA.dockey
				WHERE 1=1
				<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(JISANGNO)">
				  AND JMT.jmt_jisang_no = #{JISANGNO}
				</if>
				ORDER BY JMT.jmt_jisang_no DESC

	</select>
	
	<select id="selectJisangDetailSoyuTmp" parameterType="HashMap" resultType="java.util.HashMap">
		SELECT js_JISANG_NO, js_JIBUN, js_SOUJA_NAME, js_ADDRESS, js_PONE_NUMBER, js_HOME_NUMBER
		FROM JISANG_SOUJA_TMP
		WHERE 1=1
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(JISANGNO)">
			AND js_JISANG_NO = #{JISANGNO}
		</if>
		ORDER BY js_SOUJA_NAME

	</select>
	<select id="selectJisangTmpDocInfo" parameterType="HashMap" resultType="java.util.HashMap">
		SELECT * FROM PLMS_APPROVAL where pa_DOCKEY in (select jmt_dockey from JISANG_MASTER_TMP where jmt_JISANG_NO = #{JISANGNO}) and (pa_status is null or pa_status not in ('X'))
	</select>
	<update id="updateJisangTmpEchoNo" parameterType="HashMap">
		UPDATE JISANG_MASTER_TMP SET
		jmt_DOCKEY = #{DOCKEY}
		WHERE jmt_JISANG_NO = #{JISANGNO}
	</update>
	<delete id="deleteJisangBunhalTmp" parameterType="HashMap">
		DELETE FROM JISANG_BUNHAL
		WHERE jb_BUNHAL_ORG_NO = #{JISANGNO}
	</delete>
	<update id="updateSoyuJa_JisangNo" parameterType="HashMap">
		UPDATE JISANG_SOUJA SET
		js_JISANG_NO =#{JISANGNO}
		WHERE js_JISANG_NO = #{ORI_JISANGNO}
	</update>
	<insert id="insertJisangBunhalMasterNew" parameterType="HashMap"> 
INSERT INTO JISANG_MASTER (
	jm_JISANG_NO
	,jm_SIDO_NM
	,jm_SGG_NM
	,jm_EMD_NM
	,jm_RI_NM
	,jm_JIBUN
	,jm_JIMOK_TEXT
	,jm_JISA
	,jm_GOVER_OWN_YN
	,jm_JIJUK_AREA
	,jm_PIPE_NAME
	,jm_SUN_GUBUN
	,jm_YONGDO
	,jm_DOSIPLAN
	,jm_COMPLE_YN
	,jm_PYEONIB_AREA
	,jm_JASAN_NO
	,jm_ADDRCODE
	,jm_PNU
	,jm_USE_STATE
	,jm_BUNHAL_ORG_NO
	,jm_PIPE_YN
	,jm_SET_MONEY
	,jm_SAVE_STATUS
	,jm_CHUIDEUK_DATE
	,jm_DEUNGGI_DATE
	,jm_DEUNGGI_NO
	,jm_DEUNGGISO
	,jm_SPECIAL_CONT
	,jm_PERMITTED_YN
	,jm_LOCATION
	
	)
VALUES (
	#{JISANGNO}
	,#{SINM}
	,#{GUNGUNM}
	,#{DONGNM}
	,#{RINM}
	,#{JIBUN}
	,#{JIMOKTEXT}
	,#{JISANM}
	,#{GOVEROWNYN}
	,#{JIJUKAREA}::numeric
	,#{ZONE}
	,#{SUNGUBUN}
	,#{YONGDO}
	,#{DOSIPLAN}
	,#{COMPLEYN}
	,#{PYEONIBAREA}::numeric
	,#{JASANNO}
	,#{ADDRCODE}
	,#{PNU}
	,#{USESTATE}
	,#{BUNHALORGNO}
	,#{PIPE_YN}
	,#{SET_MONEY}
	,#{SAVE_STATUS}
	,TO_DATE(#{CHUIDEUK_DATE}, 'YYYY-MM-DD')
	,TO_DATE(#{DGSTARTDAY}, 'YYYY-MM-DD')
	,#{DEUNGGINO}
	,#{DEUNGGISO}
	,#{SPECIAL_CONT}
	,#{PERMITTED_YN}
	,#{LOCATION}
	)
	</insert>
	
	<delete id="deleteJisangMergeTmp" parameterType="HashMap">
		DELETE FROM JISANG_MERGE_TMP
		WHERE jmt_REP_JISANG_NO = #{REP_JISANG_NO}
	</delete>
	
	<select id="selectJisangRowDetail_Permit" resultType="HashMap" parameterType="HashMap">
		SELECT AA.PMT_NO, AA.USE_PURPOS, AA.PMT_STATUS, AA.ECHO_NO, AA.JISANG_NO,
		AA.ADDR, AA.SOYUJA, AA.PMT_USER, AA.USE_ST_DATE, AA.USE_ED_DATE, AA.ROWCNT
		FROM (
			SELECT A.PMT_NO, A.USE_PURPOS, A.PMT_STATUS, A.ECHO_NO, A.JISANG_NO, A.ADDR,
			A.SOYUJA, A.PMT_USER, A.USE_ST_DATE, A.USE_ED_DATE, B.ROWCNT
			FROM (
				SELECT PM.PMT_NO, PM.USE_PURPOS, PM.PMT_STATUS, PM.ECHO_NO, PM.USE_ST_DATE,
				PM.USE_ED_DATE, PT.JISANG_NO, PT.ADDR, PT.SOYUJA, PT.PMT_USER, PT.ADDRCODE
				FROM (
					SELECT pmt_no as PMT_NO
					, use_purpos as USE_PURPOS
					, pmt_status as PMT_STATUS
					, echo_no as ECHO_NO
					, TO_CHAR(USE_ST_DATE, 'YYYY-MM-DD') AS USE_ST_DATE
					, TO_CHAR(USE_ED_DATE, 'YYYY-MM-DD') AS USE_ED_DATE
					FROM PERMIT_MASTER
				)PM
				left join (
					SELECT pmt_no as PMT_NO, jisang_no as JISANG_NO,addr AS
					ADDR,soyuja AS SOYUJA,pmt_user as PMT_USER,addrcode as ADDRCODE
					FROM PERMIT_TOGI
				)PT
				ON PM.PMT_NO = PT.PMT_NO
				WHERE 1=1
			)A
			left join (
				SELECT pmt_no as PMT_NO, count(*) AS ROWCNT
				FROM PERMIT_TOGI
				WHERE 1=1
				GROUP BY PMT_NO
			)B
			on A.PMT_NO = B.PMT_NO
			ORDER BY PMT_NO, JISANG_NO
		)AA
		right join (
			SELECT pmt_no as PMT_NO
			FROM PERMIT_TOGI
			WHERE JISANG_NO = #{JISANG_NO}
		)BB
		on AA.PMT_NO = BB.PMT_NO
		where AA.PMT_NO is not null
	</select>
	
	<select id="selectJisangRowDetail_Merge" resultType="HashMap" parameterType="HashMap">
		SELECT *
		FROM JISANG_MERGE
		WHERE jm_REP_JISANG_NO = #{JISANG_NO}
		ORDER BY jm_JISANG_NO ASC
	</select>
	
	<select id="selectPnuIssueHistoryList" resultType="HashMap" parameterType="HashMap">
	
SELECT T.PNU
       , T.SEQ
       , T.HISTORY_SEQ
       , T.HISTORY_TYPE
       , T.CONTENT
       , TO_CHAR(T.HISTORY_DATE, 'YYYY-MM-DD HH24:MI:SS') AS HISTORY_DATE
       , T.ADDRCODE
       , T.JIBUN
  FROM PLMS_ISSUE_HISTORY T
 WHERE ( (T.PNU = #{PNU} AND T.PNU != '99999')
    OR   (T.ADDRCODE = #{ADDRCODE} AND T.JIBUN = #{JIBUN} ) )
 ORDER BY T.HISTORY_SEQ DESC
        , T.SEQ DESC
	
	</select>
	<delete id="deletePnuIssueHistory" parameterType="HashMap">
	
DELETE from PLMS_ISSUE_HISTORY
 WHERE ( PNU = #{PNU}
    OR (PNU = '99999'
       AND ADDRCODE = #{ADDRCODE}
       AND JIBUN = #{JIBUN}) )
	
	</delete>
		<delete id="deletePnuIssueForPnuReal" parameterType="HashMap">

DELETE from plms_POTENTIAL_ISSUE
 WHERE ( PNU = #{PNU}
    OR (PNU = '99999'
       AND addrcode = #{ADDRCODE}
       AND JIBUN = #{JIBUN}) )

	</delete>
	
	<delete id="deleteJisangSoyu" parameterType="HashMap">
		DELETE FROM JISANG_SOUJA
		WHERE js_JISANG_NO = #{JISANGNO}
	</delete>
		<insert id="insertJisangFile" parameterType="HashMap">
            
			INSERT INTO JISANG_ATCFILE(ja_JISANG_NO, ja_SEQ, ja_FILE_PATH, ja_FILE_NM, ja_FILE_SEQ)
			VALUES (#{JISANGNO}, nextVal('jisang_seq'), #{FILE_PATH}, #{FILE_NM}, 0)
			
	</insert>
	
	<update id="insertJisangTerminationTemp" parameterType="HashMap">
		UPDATE JISANG_MASTER SET
		jm_CANCLE_BOSANG_MONEY = #{CANCLE_BOSANG_MONEY}
		,jm_cancle_BOSANG_YN = #{CANCLE_YES}
		,jm_CANCLE_DATE = TO_DATE(#{STARTDAY},'YYYYMMDDHH24MISS')
		,jm_CHUIDEUK_MONEY = #{CHUIDEUKMONEY}
		,jm_GAMMONEY = #{GAMMONEY}
		,jm_REMAINDER_MONEY = #{REMAINDERMONEY}
		,jm_cancle_EMPCD = #{EMPCD}
		,jm_CANCle_NAME = #{NAME}
		,jm_cancle_REASON = #{CANCLE_REASON}
		,jm_CANCLE_COMMENT = #{CANCLE_COMMENT}
		WHERE JISANG_NO = #{JISANGNO}
	</update>
	<select id="selectJisangPmtNextNo" resultType="HashMap" parameterType="HashMap">
		SELECT COALESCE(MAX(CAST(SUBSTRING(PMT_NO, 3) AS INTEGER)), 0) AS NOW_PMT_NO
		FROM PERMIT_MASTER
		
	</select>
	
		<insert id="insertPermitMaster" parameterType="HashMap">
		Insert into PERMIT_MASTER
		( PMT_NO, USE_PURPOS, PMT_STATUS, USE_ST_DATE, USE_ED_DATE, SPOT_RESULT, rivew, CONTRACT)
		Values
		( #{PMT_NO}, #{USE_PURPOS}, #{PMT_STATUS}, to_date( #{USE_ST_DATE} , 'yyyy-mm-dd'), to_date( #{USE_ED_DATE} , 'yyyy-mm-dd'), #{SPOT_RESULT}, #{REVIEW}, #{CONTRACT} )
	</insert>
	<update id="updatePermitMaster" parameterType="HashMap">
		UPDATE PERMIT_MASTER
		SET
		USE_PURPOS = #{USE_PURPOS}
		, PMT_STATUS = #{PMT_STATUS}
		, USE_ST_DATE = to_date( #{USE_ST_DATE} , 'yyyy-mm-dd')
		, USE_ED_DATE = to_date( #{USE_ED_DATE} , 'yyyy-mm-dd')
		, SPOT_RESULT = #{SPOT_RESULT}
		, rivew = #{review}
		, CONTRACT = #{CONTRACT}

		WHERE PMT_NO = #{PMT_NO}

	</update>
	<delete id="deletePermitTogiList" parameterType="HashMap">
		DELETE FROM PERMIT_TOGI
		WHERE PMT_NO = #{PMT_NO}
	</delete>
	
	<insert id="insertPermitTogiList" parameterType="HashMap">
		Insert into PERMIT_TOGI
		( PMT_NO, JISANG_NO, ADDR, SOYUJA, PMT_USER, JIMOK, ALL_AREA, SET_AREA
		, SET_MONEY, SIDO_NM, SGG_NM, EMD_NM, RI_NM, JIBUN, ADDRCODE, JASAN_NO )
		Values
		( #{PMT_NO}, #{JISANG_NO}, #{ADDRESS}, #{SOUJA}, #{USER}, #{JIMOK}, #{JIJUK}::numeric, #{PYENIB}::numeric
		, #{MONEY}, #{SIDO_NM}, #{SGG_NM}, #{EMD_NM}, #{RI_NM}, #{JIBUN}, #{ADDRCODE}, #{JASAN_NO} )
	</insert>
	
	<insert id="insertPermitFile" parameterType="HashMap">
           
			INSERT INTO PERMIT_ATCFILE(PMT_NO, SEQ	, FILE_PATH, FILE_NM, FILE_GUBUN)
			VALUES (#{PMT_NO},nextval('pmt_atc_seq'), #{FILE_PATH}, #{FILE_NM}, #{FILE_GUBUN})
			
	</insert>
	<update id="updatePermitFile" parameterType="HashMap">
           
			update PERMIT_ATCFILE set FILE_PATH=#{FILE_PATH},FILE_NM=#{FILE_NM}
			where pmt_no=#{PMT_NO} and file_gubun=#{FILE_GUBUN}::text
			
	</update>
	<select id="selectPermitFileCount" resultType="integer" parameterType="HashMap">
		select count(*) from permit_atcfile where pmt_no=#{PMT_NO} and file_gubun = #{FILE_GUBUN}::varchar
		
	</select>
	
	<insert id="insertCancelFile" parameterType="HashMap">
           
			INSERT INTO jisang_cancel_ATCFILE(manage_no, SEQ	, FILE_PATH, FILE_NM, FILE_GUBUN)
			VALUES (#{MANAGE_NO},nextval('jisang_cancel_atcfile_seq'), #{FILE_PATH}, #{FILE_NM}, #{FILE_GUBUN})
			
	</insert>
	<update id="updateCancelFile" parameterType="HashMap">
           
			update jisang_cancel_ATCFILE set FILE_PATH=#{FILE_PATH},FILE_NM=#{FILE_NM}
			where manage_no=#{MANAGE_NO} and file_gubun=#{FILE_GUBUN}::varchar
			
	</update>
	<select id="selectCancelFileCount" resultType="integer" parameterType="HashMap">
		select count(*) from jisang_cancel_ATCFILE where manage_no=#{MANAGE_NO} and file_gubun = #{FILE_GUBUN}::varchar
		
	</select>
	<select id="selectCancelFile" resultType="HashMap" parameterType="HashMap">
		select * from jisang_cancel_ATCFILE where manage_no=#{MANAGE_NO} 
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(FILE_GUBUN)">
		and file_gubun = #{FILE_GUBUN}::varchar
		</if>
		
	</select>
	<delete id="deleteJisangAtcFile" parameterType="java.util.HashMap">

		delete from jisang_atcfile
		where ja_idx = #{idx}::int

	</delete>
	
	
	
	<select id="selectJisangPmtList" resultType="HashMap" parameterType="HashMap">
		SELECT AAA.PMT_NO, AAA.DOCKEY, AAA.USE_PURPOS, AAA.PMT_STATUS, AAA.ECHO_NO, AAA.JISANG_NO, AAA.ADDR, AAA.SOYUJA, AAA.PMT_USER, AAA.USE_ST_DATE, AAA.USE_ED_DATE, AAA.ROWCNT, AAA.jm_JISA, AAA.jm_PNU, AAA.jm_JASAN_NO ,CC.pa_STATUS,CC.pa_OUT_FLAG,CC.pa_OUT_URL,CC.pa_URL,CC.pa_USERNM,CC.pa_DEPTCD,CC.pa_DEPTNM,CC.pa_UPDEPTCD
		FROM
		(
		SELECT AA.PMT_NO, AA.DOCKEY, AA.USE_PURPOS, AA.PMT_STATUS, AA.ECHO_NO, AA.JISANG_NO, AA.ADDR, AA.SOYUJA, AA.PMT_USER, AA.USE_ST_DATE, AA.USE_ED_DATE, AA.jm_JISA, AA.jm_PNU, AA.jm_JASAN_NO, AA.ROWCNT
		FROM
		(
		SELECT A.PMT_NO, A.DOCKEY, A.USE_PURPOS, A.PMT_STATUS, A.ECHO_NO, A.JISANG_NO, A.ADDR, A.SOYUJA, A.PMT_USER, A.USE_ST_DATE, A.USE_ED_DATE, A.jm_JISA, A.jm_PNU, A.jm_JASAN_NO, B.ROWCNT
		FROM
		(
		SELECT PM.PMT_NO, PM.DOCKEY, PM.USE_PURPOS, PM.PMT_STATUS, PM.ECHO_NO, PM.USE_ST_DATE, PM.USE_ED_DATE, PT.JISANG_NO, PT.ADDR, PT.SOYUJA, PT.PMT_USER, PT.ADDRCODE, PT.jm_JISA, PT.jm_PNU, PT.jm_JASAN_NO
		FROM
		(
		SELECT PMT_NO, DOCKEY, USE_PURPOS, PMT_STATUS, ECHO_NO, TO_CHAR(USE_ST_DATE, 'YYYY-MM-DD') AS USE_ST_DATE , TO_CHAR(USE_ED_DATE, 'YYYY-MM-DD') AS USE_ED_DATE
		FROM PERMIT_MASTER
		)PM
		left join
		(
		SELECT PET.PMT_NO, PET.JISANG_NO, PET.ADDR, PET.SOYUJA, PET.PMT_USER, PET.ADDRCODE, JM.jm_JISA, JM.jm_PNU, JM.jm_JASAN_NO
		FROM PERMIT_TOGI PET
		left join JISANG_MASTER JM on PET.JISANG_NO = JM.jm_JISANG_NO
		)PT
		ON PM.PMT_NO = PT.PMT_NO
		WHERE 1=1
		)A
		left join
		(
		SELECT PMT_NO, count(*) AS ROWCNT
		FROM PERMIT_TOGI
		WHERE 1=1
		GROUP BY PMT_NO
		)B
		on A.PMT_NO = B.PMT_NO
		ORDER BY PMT_NO, JISANG_NO
		)AA
		right join
		(
		SELECT PMT_NO
		FROM PERMIT_TOGI
		WHERE 1=1
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(ADDRCODE)">
			AND ADDRCODE LIKE '${ADDRCODE}%'
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(JIBUN)">
			AND JIBUN LIKE '${JIBUN}%'
		</if>
			GROUP BY PMT_NO
		)BB
		on AA.PMT_NO = BB.PMT_NO
		WHERE 1=1
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(STATUS)">
			AND PMT_STATUS = #{STATUS}
		</if>
			)AAA
		left outer join PLMS_APPROVAL CC on AAA.DOCKEY = CC.pa_DOCKEY and (CC.pa_status is null or CC.pa_status not in ('X'))  
		WHERE 1=1
		
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(JISA)">
			AND AAA.jm_JISA = #{JISA}
		</if>
	</select>
	
	
		<update id="updateJisangPmtDockey" parameterType="HashMap">
		update PERMIT_MASTER
		set DOCKEY = ''
		where pmt_no = #{PMT_NO}
	</update>
	
		<delete id="deleteJisangPmtDockey" parameterType="HashMap">
		delete from PERMIT_MASTER
		where pmt_no = #{PMT_NO}
	</delete>
	
	<select id="selectJisangCancelData" parameterType="HashMap" resultType="java.util.HashMap">
		SELECT *,
		 trim(concat(jm.jm_sido_nm,' ',jm.jm_sgg_nm,' ',jm.jm_ri_nm,' ',jm.jm_jibun)) as address
		FROM jisang_master jm LEFT JOIN jisang_merge_tmp jmt ON jmt.jmt_jisang_no=jm.jm_jisang_no
WHERE 1=1
	<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(LOGIN_JISA)">
		AND jm.jm_jisa = jmt.jisa
		AND jm.jm_jisa = #{LOGIN_JISA}
	</if>

AND jmt.jmt_rep_jisang_no=#{idx}

	</select>
	
	
	<select id="selectJisangBunhalCount" parameterType="java.util.HashMap" resultType="Integer">
		SELECT count(*) as count FROM (
		SELECT jm.jm_idx AS index,
		jm.jm_jisang_no AS idx,
		0 AS gidx,
		jm.jm_jisa AS jisa,
		jm.jm_save_status AS save_status,
		jm.jm_account_yn AS account_yn,
		jm.jm_cancle_date AS cancel_date,
		COALESCE(jm.jm_pipe_yn, 'N') AS pipe_yn,
		jm.jm_toji_type AS toji_type,
		jm.jm_pipe_meter AS pipe_meter,
		jm.jm_jimok_text AS jimok_text,
		js.js_souja_name AS souja_name,
		COALESCE(jm.jm_jijuk_area, NULL) AS jijuk_area,
		COALESCE(jm.jm_pyeonib_area, NULL) AS pyeonib_area,
		jm.jm_sido_nm AS sido_nm,
		jm.jm_sgg_nm AS sgg_nm,
		jm.jm_emd_nm AS emd_nm,
		jm.jm_ri_nm AS ri_nm,
		jm.jm_jibun AS jibun,
		jm.jm_deunggi_date AS deunggi_date,
		TRIM(CONCAT(jm.jm_sido_nm, ' ', jm.jm_sgg_nm, ' ', jm.jm_ri_nm, ' ', jm.jm_jibun)) AS address,
		COALESCE(jm.jm_jasan_no, '') AS jasan_no,
		COALESCE(jm.jm_comple_yn, '') AS comple_yn,
		COALESCE(jm.jm_permitted_yn, '') AS permitted_yn,
		COALESCE(jm.jm_chuideuk_date, NULL) AS chuideuk_date,
		COALESCE('', '') AS gover_date,
		jm.jm_jasan_money AS jasan_money,
		jm.jm_cancle_yn AS cancel_yn,
		jm.jm_manage_yn AS manage_yn,
		jm.jm_dosiplan AS dosiplan,
		jb.jb_yongdo AS yongdo,
		jb.jb_set_money AS set_money,
		jb.jb_remainder_money AS remainder_money,
		jb.jb_profit_loss AS profit_loss,
		jb.jb_gover_own_yn AS gover_own_yn,
		jb.jb_gammoney AS gammoney,
		jb.jb_dockey AS dockey,
		jb.jb_demise AS demise,
		jb.jb_chuideuk_money AS chuideuk_money,
		jb.jb_bunhal_date AS bunhal_date,
		jb.jb_bunhal_org_no AS bunhal_org_no,
		jb.jb_bunhal_yn AS bunhal_yn,
		jjm.x AS x,
		jjm.y AS y,
		NULL AS pay_date,
		NULL AS gover_area,
		NULL AS gover_length,
		NULL AS pay_money,
		CASE
		WHEN (SELECT count(dm.dm_idx) FROM dosi_master dm WHERE dm.dm_pnu = jb.jb_pnu) > 0 THEN 'Y'
		WHEN (SELECT count(dm.dm_idx) FROM dosi_master dm WHERE dm.dm_pnu = jb.jb_pnu) = 0 THEN 'N'
		END AS toji_plan
		FROM jisang_master jm
		LEFT JOIN jisang_souja js ON js.js_jisang_no = jm.jm_jisang_no
		LEFT JOIN jisang_bunhal jb ON jb.jb_jisang_no = jm.jm_jisang_no
		LEFT JOIN jijuk_2024 jjm ON jjm.pnu= jm.jm_pnu
		WHERE 1 = 1
		AND jm.jm_SAVE_STATUS = '승인'
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(jisa)" >
			and jb.jb_jisa=#{jisa}
		</if>
		) AS r
		where 1=1
		and r.idx !=''
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(idx)" >
			and r.idx=#{idx}
		</if>
<!--		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(manageYn)" >-->
<!--			and r.manage_yn=#{manageYn}-->
<!--		</if>-->
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(dosiplan)" >
			and r.dosiplan=#{dosiplan}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(address)" >
			and r.address like '%${address}%'
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(sido_nm)" >
			AND r.sido_nm = #{sido_nm}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(sgg_nm)" >
			AND r.sgg_nm = #{sgg_nm}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(emd_nm)" >
			AND r.emd_nm = #{emd_nm}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(ri_nm)" >
			AND r.ri_nm = #{ri_nm}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(jibun)" >
			AND r.jibun LIKE '%${jibun}%'
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(jimokArray) and jimokArray.length > 0">
			and r.jimok_text IN
			<foreach item="item" index="index" collection="jimokArray" open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(account_yn)" >
			and r.account_yn=#{account_yn}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(souja)" >
			and r.souja_name like '%${souja}%'
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(jasan_no)" >
			and r.jasan_no like '%${jasan_no}%'
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(start_date) and @org.apache.commons.lang3.ObjectUtils@isNotEmpty(end_date)" >
			and r.deunggi_date::date between #{start_date}::date and #{end_date}::date
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(right_overlap)" >
			and (SELECT COUNT(o.address) AS overlap
			FROM
			(
			(
			SELECT trim(concat(jb.jb_sido_nm,' ',jb.jb_sgg_nm,' ',jb.jb_ri_nm,' ',jb.jb_jibun)) as address
			FROM jisang_master jm LEFT JOIN jisang_souja js ON js.js_jisang_no=jb.jb_jisang_no
			where 1=1

			)
			) as o  WHERE o.address = r.address GROUP BY o.address ) >1
		</if>

	</select>

	<select id="selectJisangBunhalList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT *,
		(row_number() OVER()) AS no
		FROM (

		SELECT jm.jm_idx AS index,
		jm.jm_jisang_no AS idx,
		0 AS gidx,
		jm.jm_jisa AS jisa,
		jm.jm_save_status AS save_status,
		jm.jm_account_yn AS account_yn,
		jm.jm_cancle_date AS cancel_date,
		COALESCE(jm.jm_pipe_yn, 'N') AS pipe_yn,
		jm.jm_toji_type AS toji_type,
		jm.jm_pipe_meter AS pipe_meter,
		jm.jm_jimok_text AS jimok_text,
		js.js_souja_name AS souja_name,
		COALESCE(jm.jm_jijuk_area, NULL) AS jijuk_area,
		COALESCE(jm.jm_pyeonib_area, NULL) AS pyeonib_area,
		jm.jm_sido_nm AS sido_nm,
		jm.jm_sgg_nm AS sgg_nm,
		jm.jm_emd_nm AS emd_nm,
		jm.jm_ri_nm AS ri_nm,
		jm.jm_jibun AS jibun,
		jm.jm_deunggi_date AS deunggi_date,
		TRIM(CONCAT(jm.jm_sido_nm, ' ', jm.jm_sgg_nm, ' ', jm.jm_ri_nm, ' ', jm.jm_jibun)) AS address,
		COALESCE(jm.jm_jasan_no, '') AS jasan_no,
		COALESCE(jm.jm_comple_yn, '') AS comple_yn,
		COALESCE(jm.jm_permitted_yn, '') AS permitted_yn,
		COALESCE(jm.jm_chuideuk_date, NULL) AS chuideuk_date,
		COALESCE('', '') AS gover_date,
		jm.jm_jasan_money AS jasan_money,
		jm.jm_cancle_yn AS cancel_yn,
		jm.jm_manage_yn AS manage_yn,
		jm.jm_dosiplan AS dosiplan,
		jb.jb_yongdo AS yongdo,
		jb.jb_set_money AS set_money,
		jb.jb_remainder_money AS remainder_money,
		jb.jb_profit_loss AS profit_loss,
		jb.jb_gover_own_yn AS gover_own_yn,
		jb.jb_gammoney AS gammoney,
		jb.jb_dockey AS dockey,
		jb.jb_demise AS demise,
		jb.jb_chuideuk_money AS chuideuk_money,
		jb.jb_bunhal_date AS bunhal_date,
		jb.jb_bunhal_org_no AS bunhal_org_no,
		jb.jb_bunhal_yn AS bunhal_yn,
		jjm.x AS x,
		jjm.y AS y,
		js.js_idx,
		NULL AS pay_date,
		NULL AS gover_area,
		NULL AS gover_length,
		NULL AS pay_money,
		CASE
		WHEN (SELECT count(dm.dm_idx) FROM dosi_master dm WHERE dm.dm_pnu = jb.jb_pnu) > 0 THEN 'Y'
		WHEN (SELECT count(dm.dm_idx) FROM dosi_master dm WHERE dm.dm_pnu = jb.jb_pnu) = 0 THEN 'N'
		END AS toji_plan
		FROM jisang_master jm
		LEFT JOIN jisang_souja js ON js.js_jisang_no = jm.jm_jisang_no
		LEFT JOIN jisang_bunhal jb ON jb.jb_jisang_no = jm.jm_jisang_no
		LEFT JOIN jijuk_2024 jjm ON jjm.pnu= jm.jm_pnu
		WHERE 1 = 1
		AND jm.jm_SAVE_STATUS = '승인'
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(jisa)" >
			and jb.jb_jisa=#{jisa}
		</if>
		) AS r
		where 1=1
		and r.cancel_yn!='Y'
		and r.idx !=''
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(idx)" >
			and r.idx=#{idx}
		</if>
<!--		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(manageYn)" >-->
<!--			and r.manage_yn=#{manageYn}-->
<!--		</if>-->
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(dosiplan)" >
			and r.dosiplan=#{dosiplan}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(address)" >
			and r.address like '%${address}%'
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(sido_nm)" >
			AND r.sido_nm = #{sido_nm}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(sgg_nm)" >
			AND r.sgg_nm = #{sgg_nm}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(emd_nm)" >
			AND r.emd_nm = #{emd_nm}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(ri_nm)" >
			AND r.ri_nm = #{ri_nm}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(jibun)" >
			AND r.jibun LIKE '%${jibun}%'
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(account_yn)" >
			and r.account_yn=#{account_yn}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(jimokArray) and jimokArray.length > 0">
			and r.jimok_text IN
			<foreach item="item" index="index" collection="jimokArray" open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(souja)" >
			and r.souja_name like '%${souja}%'
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(jasan_no)" >
			and r.jasan_no like '%${jasan_no}%'
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(start_date) and @org.apache.commons.lang3.ObjectUtils@isNotEmpty(end_date)" >
			and r.deunggi_date::date between #{start_date}::date and #{end_date}::date
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(right_overlap)" >
			and (SELECT COUNT(o.address) AS overlap
			FROM
			(
			(
			SELECT trim(concat(jb.jb_sido_nm,' ',jb.jb_sgg_nm,' ',jb.jb_ri_nm,' ',jb.jb_jibun)) as address
			FROM jisang_master jm LEFT JOIN jisang_souja js ON js.js_jisang_no=jb.jb_jisang_no
			where 1=1

			)
			) as o  WHERE o.address = r.address GROUP BY o.address ) >1
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(orderCol)" >
			ORDER BY r.${orderCol} ${desc}
		</if>
		<if test="length>0">
			limit #{length} offset #{start}
		</if>

	</select>
	
	
	<select id="selectJisangDivisionListCount" parameterType="HashMap" resultType="integer">
		SELECT COUNT(*)
		FROM JISANG_MASTER JM left outer join (
		SELECT
		*
		FROM
		(
		SELECT
		js_JISANG_NO,
		js_JIBUN,
		js_SOUJA_NAME,
		js_ADDRESS,
		js_PONE_NUMBER,
		js_HOME_NUMBER,
		ROW_NUMBER() OVER(PARTITION BY js_JISANG_NO
		ORDER BY
		js_JISANG_NO ASC
		) AS ROW_IDX
		FROM
		JISANG_SOUJA
		) sub1
		WHERE
		ROW_IDX = 1
		) JS on JM.jm_JISANG_NO = JS.js_JISANG_NO
		LEFT OUTER JOIN JISANG_BUNHAL JB ON JM.jm_JISANG_NO = JB.jb_JISANG_NO AND JB.jb_BUNHAL_COMPLETE != 'Y'
		LEFT OUTER JOIN PLMS_APPROVAL PA ON JB.jb_DOCKEY = PA.pa_DOCKEY
		WHERE 1=1
		
		AND (JM.jm_CANCLE_YN IS NULL OR JM.jm_CANCLE_YN != 'Y')
		AND JM.jm_SAVE_STATUS = '승인'
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(ADDRESSCODE)">
			AND JM.jm_ADDRCODE LIKE '${ADDRESSCODE}%'
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(jisa)">
			AND JM.jm_JISA = #{JISA}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(souja)">
			AND JS.js_SOUJA_NAME LIKE '%${souja}%'
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(jasan_no)">
			AND JM.jm_JASAN_NO LIKE '%'|| #{jasan_no} ||'%'
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(account_yn)" >
			and JM.jm_account_yn=#{account_yn}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(address)" >
			AND TRIM(CONCAT(jm.jm_sido_nm, ' ', jm.jm_sgg_nm, ' ', jm.jm_emd_nm, ' ', jm.jm_ri_nm, ' ', jm.jm_jibun)) LIKE '%${address}%'
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(sido_nm)" >
			AND JM.jm_sido_nm = #{sido_nm}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(sgg_nm)" >
			AND JM.jm_sgg_nm = #{sgg_nm}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(emd_nm)" >
			AND JM.jm_emd_nm = #{emd_nm}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(ri_nm)" >
			AND JM.jm_ri_nm = #{ri_nm}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(jibun)">
			AND JM.jm_JIBUN LIKE '${jibun}%'
		</if>
		
	</select>
	
	
	<select id="selectJisangDivisionList" parameterType="HashMap" resultType="java.util.HashMap">
		SELECT * FROM (SELECT
		ROW_NUMBER() OVER(
		ORDER BY
		JM.jm_JISANG_NO DESC
		) RN,
		(row_number() OVER()) AS no,
		JM.jm_idx AS index,
		JM.jm_jisang_no AS idx,
		0 AS gidx
		,JM.jm_jisang_no as JISANG_NO
		,JM.jm_sido_nm as SIDO_NM
		,JM.jm_sgg_nm as SGG_NM
		,JM.jm_emd_nm as EMD_NM
		,JM.jm_ri_nm as RI_NM
		,JM.jm_jibun as JIBUN
		,TRIM(CONCAT(jm.jm_sido_nm, ' ', jm.jm_sgg_nm, ' ', jm.jm_emd_nm, ' ', jm.jm_ri_nm, ' ', jm.jm_jibun)) AS address
		,JM.jm_jasan_no as JASAN_NO
		,JM.jm_jisa as JISA
		,JM.jm_jimok_text AS jimok_text
		,TO_CHAR(JM.jm_CHUIDEUK_DATE, 'YYYY-MM-DD') AS CHUIDEUK_DATE
		,JM.jm_chuideuk_money as CHUIDEUK_MONEY
		,TO_CHAR(JM.jm_DEUNGGI_DATE, 'YYYY-MM-DD') AS DEUNGGI_DATE
		,JM.jm_cancle_yn as CANCLE_YN
		,JM.jm_cancle_yn AS cancel_yn
		,JM.jm_manage_yn AS manage_yn
		,TO_CHAR(JM.jm_CANCLE_DATE, 'YYYY-MM-DD') AS CANCLE_DATE
		,COALESCE(jm.jm_jijuk_area, NULL) AS jijuk_area
		,COALESCE(jm.jm_pyeonib_area, NULL) AS pyeonib_area
		
		,JM.jm_pnu as PNU
		,JS.js_souja_name as SOUJA_NAME,
		(SELECT COUNT(*)-1 FROM JISANG_SOUJA WHERE js_JISANG_NO = JM.jm_JISANG_NO) AS SOUJA_CNT,
		(CASE WHEN JB.jb_JISANG_NO IS NOT NULL THEN 1 ELSE 0 END) AS BUNHAL_CHECK,
		PA.pa_status as STATUS
		
		,JB.jb_bunhal_date as bunhal_date
		FROM JISANG_MASTER JM LEFT OUTER JOIN (
		SELECT
		*
		FROM
		(
		SELECT
		js_JISANG_NO,
		js_JIBUN,
		js_SOUJA_NAME,
		js_ADDRESS,
		js_PONE_NUMBER,
		js_HOME_NUMBER,
		ROW_NUMBER() OVER(PARTITION BY js_JISANG_NO
		ORDER BY
		js_JISANG_NO ASC
		) AS ROW_IDX
		FROM
		JISANG_SOUJA
		) sub1
		WHERE
		ROW_IDX = 1
		) JS on JM.jm_JISANG_NO = JS.js_JISANG_NO
		LEFT OUTER JOIN JISANG_BUNHAL JB ON JM.jm_JISANG_NO = JB.jb_JISANG_NO AND JB.jb_BUNHAL_COMPLETE != 'Y'
		LEFT OUTER JOIN PLMS_APPROVAL PA ON JB.jb_DOCKEY = PA.pa_DOCKEY
		WHERE 1=1
		AND (JM.jm_CANCLE_YN IS NULL OR JM.jm_CANCLE_YN != 'Y')
		AND JM.jm_SAVE_STATUS = '승인'
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(ADDRESSCODE)">
			AND JM.jm_ADDRCODE LIKE '${ADDRESSCODE}%'
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(jisa)">
			AND JM.jm_JISA = #{jisa}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(souja)">
			AND JS.js_SOUJA_NAME LIKE '%${souja}%'
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(jasan_no)">
			AND JM.jm_JASAN_NO LIKE '%'|| #{jasan_no} ||'%'
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(account_yn)" >
			and JM.jm_account_yn=#{account_yn}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(address)" >
			AND TRIM(CONCAT(jm.jm_sido_nm, ' ', jm.jm_sgg_nm, ' ', jm.jm_emd_nm, ' ', jm.jm_ri_nm, ' ', jm.jm_jibun)) LIKE '%${address}%'
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(sido_nm)" >
			AND JM.jm_sido_nm = #{sido_nm}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(sgg_nm)" >
			AND JM.jm_sgg_nm = #{sgg_nm}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(emd_nm)" >
			AND JM.jm_emd_nm = #{emd_nm}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(ri_nm)" >
			AND JM.jm_ri_nm = #{ri_nm}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(jibun)">
			AND JM.jm_JIBUN LIKE '${jibun}%'
		</if>
			) AA WHERE 1=1
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(orderCol)" >
			ORDER BY AA.${orderCol} ${desc}
		</if>
		<if test="length>0">
			limit #{length} offset #{start}
		</if>
		
	</select>
	
	
<select id="selectJisangListOrg02_2" parameterType="java.util.HashMap" resultType="java.util.HashMap">
SELECT *
		FROM ( SELECT ROW_NUMBER() OVER(
                     ORDER BY JM.jm_JISANG_NO DESC
                ) as no
                ,jm.jm_idx AS index
				,jm.jm_jisang_no AS idx
				,0 AS gidx
                       , JM.jm_jisang_no as JISANG_NO
                       , JM.jm_sido_nm as SIDO_NM
                       , JM.jm_jasan_no as JASAN_NO
                       , JM.jm_sgg_nm as SGG_NM
                       , JM.jm_emd_nm as EMD_NM
                       , JM.jm_ri_nm as RI_NM
                       , JM.jm_jibun as JIBUN
                       , JM.jm_jisa as JISA
                       , TO_CHAR(JM.jm_CHUIDEUK_DATE, 'YYYY-MM-DD') AS CHUIDEUK_DATE
                       , JM.jm_chuideuk_money as CHUIDEUK_MONEY
                       , TO_CHAR(JM.jm_DEUNGGI_DATE, 'YYYY-MM-DD') AS DEUNGGI_DATE
                       , trim(JM.jm_pnu) as PNU
                       , JM.jm_jimok_text as JIMOK_TEXT
                       , JM.jm_JIJUK_AREA + COALESCE((SELECT SUM(S.jm_JIJUK_AREA) FROM JISANG_MERGE S WHERE S.jm_REP_JISANG_NO = JM.jm_JISANG_NO), 0) AS JIJUK_AREA
                       , JM.jm_PYEONIB_AREA + COALESCE((SELECT SUM(S.jm_PYEONIB_AREA) FROM JISANG_MERGE S WHERE S.jm_REP_JISANG_NO = JM.jm_JISANG_NO), 0) AS PYEONIB_AREA
                       , JM.jm_permitted_yn as PERMITTED_YN
                       , JM.jm_addrcode as ADDRCODE
                       , JM.jm_cancle_yn as CANCEL_YN
                       , JS.js_souja_name as SOUJA_NAME
                       , (
                    SELECT COUNT(*) - 1
                      FROM JISANG_SOUJA
                     WHERE js_JISANG_NO = JM.jm_JISANG_NO
                ) AS SOUJA_CNT
                       , CASE
                    WHEN JM.jm_COMPLE_YN IS NULL THEN 'N'
                    ELSE JM.jm_COMPLE_YN
                END AS COMPLE_YN
                       , (
                    SELECT CASE
                        WHEN COUNT(*) > 0 THEN 'Y'
                        ELSE 'N'
                    END
                      FROM PERMIT_TOGI PTD
                     WHERE JM.jm_JISANG_NO = PTD.JISANG_NO
                ) AS PERMIT_YN
                       , JHT.jmt_rep_jisang_no as REP_JISANG_NO
                       , JMT.jmt_JISANG_NO AS T_JISANG_NO
                       , JM.jm_save_status as SAVE_STATUS
                       , (
                    SELECT PA.pa_STATUS
                      FROM PLMS_APPROVAL PA
                     WHERE PA.pa_DOCKEY = JHT.jmt_DOCKEY
                ) AS MERGE_STATUS
                       , (
                    SELECT PA.pa_STATUS
                      FROM PLMS_APPROVAL PA
                     WHERE PA.pa_DOCKEY = JMT.jmt_DOCKEY
                ) AS APPROVAL_STATUS
                  ,TRIM(CONCAT(jm.jm_sido_nm, ' ', jm.jm_sgg_nm, ' ', jm.jm_emd_nm, ' ', jm.jm_ri_nm, ' ', jm.jm_jibun)) AS address
                  ,jm.jm_cancle_date AS cancel_date
                  FROM JISANG_MASTER       JM
                  LEFT OUTER JOIN (
                    SELECT *
                      FROM (
                        SELECT js_JISANG_NO
                               , js_JIBUN
                               , js_SOUJA_NAME
                               , js_ADDRESS
                               , js_PONE_NUMBER
                               , js_HOME_NUMBER
                               , ROW_NUMBER() OVER(
                            PARTITION BY js_JISANG_NO
                             ORDER BY js_JISANG_NO ASC
                        ) AS ROW_IDX
                          FROM JISANG_SOUJA
                    ) sub1
                     WHERE ROW_IDX = 1
                ) JS ON JM.jm_JISANG_NO = JS.js_JISANG_NO
                  LEFT OUTER JOIN JISANG_MASTER_TMP   JMT ON JM.jm_JISANG_NO = JMT.jmt_JISANG_NO
                  LEFT OUTER JOIN JISANG_MERGE_TMP    JHT ON JM.jm_JISANG_NO = JHT.jmt_JISANG_NO
                 WHERE 1 = 1
				<if test="PAGE_GUBUN != null and PAGE_GUBUN != ''">
				    <if test="PAGE_GUBUN != '1'">
				        AND JM.jm_SAVE_STATUS = '승인'
				    </if>
				</if>
		<if test="ADDRESSCODE != null and ADDRESSCODE != ''">
			AND JM.jm_ADDRCODE LIKE '$ADDRESSCODE$%'
		</if>
		<if test="jibeon != null and jibeon != ''">
			AND JM.jm_JIBUN LIKE '${JIBEON}%'
		</if>
		<if test="jisa != null and jisa != ''">
			AND JM.jm_JISA = #{jisa}
		</if>
		<if test="DG_STARTDAY != null and DG_STARTDAY != ''">
			AND JM.jm_DEUNGGI_DATE >=to_date( #{DG_STARTDAY} , 'yyyy-mm-dd')
		</if>
		<if test="DG_ENDDAY != null and DG_ENDDAY != ''">
			AND JM.jm_DEUNGGI_DATE &lt;=to_date( #{DG_ENDDAY} , 'yyyy-mm-dd')
		</if>
		<if test="CD_STARTDAY != null and CD_STARTDAY != ''">
			AND JM.jm_CHUIDEUK_DATE >=	to_date( #{CD_STARTDAY} , 'yyyy-mm-dd')
		</if>
		<if test="CD_ENDDAY != null and CD_ENDDAY != ''">
			AND JM.jm_CHUIDEUK_DATE &lt;= 	to_date( #{CD_ENDDAY} , 'yyyy-mm-dd')
		</if>
		<if test="souja!= null and souja != ''">
			AND JS.js_SOUJA_NAME LIKE '%${souja}%'
		</if>
		<if test="JISANGNO != null and JISANGNO != ''">
			AND JM.jm_JISANG_NO = #{JISANGNO}
		</if>
		<if test="JASAN_NO != null and JASAN_NO != ''">
			AND JM.jm_JASAN_NO LIKE '%'|| #{JASAN_NO}||'%'
		</if>
		<if test="COMPLE_YN != null and COMPLE_YN != ''">
			AND JM.jm_COMPLE_YN = #{COMPLE_YN}
		</if>
		<if test="JIMOK_TEXT != null and JIMOK_TEXT != ''">
			AND JM.jm_JIMOK_TEXT IN ( #{JIMOK_TEXT} )
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(address)" >
			AND TRIM(CONCAT(jm.jm_sido_nm, ' ', jm.jm_sgg_nm, ' ', jm.jm_emd_nm, ' ', jm.jm_ri_nm, ' ', jm.jm_jibun)) LIKE '%${address}%'
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(sido_nm)" >
			AND JM.jm_sido_nm = #{sido_nm}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(sgg_nm)" >
			AND JM.jm_sgg_nm = #{sgg_nm}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(emd_nm)" >
			AND JM.jm_emd_nm = #{emd_nm}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(ri_nm)" >
			AND JM.jm_ri_nm = #{ri_nm}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(jibun)" >
			AND JM.jm_jibun LIKE '%${jibun}%'
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(comple_yn)" >
			AND JM.jm_comple_yn = #{comple_yn}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(account_yn)" >
			AND JM.jm_account_yn = #{account_yn}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(account_yn_condition)" >
			AND JM.jm_account_yn = ${account_yn_condition}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(cancel_yn)">
		    AND JM.jm_CANCLE_YN = #{cancel_yn}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(cancel_yn_condition)" >
			AND JM.jm_CANCLE_YN = ${cancel_yn_condition}
		</if>	
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(jasan_no)" >
			AND JM.jm_jasan_no LIKE '%${jasan_no}%'
		</if>
	  <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(start_date)">
        AND JM.jm_chuideuk_date &gt;= TO_DATE(#{start_date}, 'YYYY-MM-DD')
    </if>
    <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(end_date)">
        AND JM.jm_chuideuk_date &lt;= TO_DATE(#{end_date}, 'YYYY-MM-DD')
    </if>
		) AA WHERE 1=1
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(orderCol)" >
			ORDER BY ${orderCol} ${desc}
			</if>
		<if test="length>0">
			limit #{length} offset #{start}
		</if>
	</select>

<select id="selectJisangListCount02_2" parameterType="java.util.HashMap" resultType="integer">
SELECT count(*)
		FROM ( SELECT ROW_NUMBER() OVER(
                     ORDER BY JM.jm_JISANG_NO DESC
                ) as no
                ,jm.jm_idx AS index
				,jm.jm_jisang_no AS idx
				,0 AS gidx
                       , JM.jm_jisang_no as JISANG_NO
                       , JM.jm_sido_nm as SIDO_NM
                       , JM.jm_jasan_no as JASAN_NO
                       , JM.jm_sgg_nm as SGG_NM
                       , JM.jm_emd_nm as EMD_NM
                       , JM.jm_ri_nm as RI_NM
                       , JM.jm_jibun as JIBUN
                       , JM.jm_jisa as JISA
                       , TO_CHAR(JM.jm_CHUIDEUK_DATE, 'YYYY-MM-DD') AS CHUIDEUK_DATE
                       , JM.jm_chuideuk_money as CHUIDEUK_MONEY
                       , TO_CHAR(JM.jm_DEUNGGI_DATE, 'YYYY-MM-DD') AS DEUNGGI_DATE
                       , JM.jm_pnu as PNU
                       , JM.jm_jimok_text as JIMOK_TEXT
                       , JM.jm_JIJUK_AREA + COALESCE((SELECT SUM(S.jm_JIJUK_AREA) FROM JISANG_MERGE S WHERE S.jm_REP_JISANG_NO = JM.jm_JISANG_NO), 0) AS JIJUK_AREA
                       , JM.jm_PYEONIB_AREA + COALESCE((SELECT SUM(S.jm_PYEONIB_AREA) FROM JISANG_MERGE S WHERE S.jm_REP_JISANG_NO = JM.jm_JISANG_NO), 0) AS PYEONIB_AREA
                       , JM.jm_permitted_yn as PERMITTED_YN
                       , JM.jm_addrcode as ADDRCODE
                       , JS.js_souja_name as SOUJA_NAME
                       , (
                    SELECT COUNT(*) - 1
                      FROM JISANG_SOUJA
                     WHERE js_JISANG_NO = JM.jm_JISANG_NO
                ) AS SOUJA_CNT
                       , CASE
                    WHEN JM.jm_COMPLE_YN IS NULL THEN 'N'
                    ELSE JM.jm_COMPLE_YN
                END AS COMPLE_YN
                       , (
                    SELECT CASE
                        WHEN COUNT(*) > 0 THEN 'Y'
                        ELSE 'N'
                    END
                      FROM PERMIT_TOGI PTD
                     WHERE JM.jm_JISANG_NO = PTD.JISANG_NO
                ) AS PERMIT_YN
                       , JHT.jmt_rep_jisang_no as REP_JISANG_NO
                       , JMT.jmt_JISANG_NO AS T_JISANG_NO
                       , JM.jm_save_status as SAVE_STATUS
                       , (
                    SELECT PA.pa_STATUS
                      FROM PLMS_APPROVAL PA
                     WHERE PA.pa_DOCKEY = JHT.jmt_DOCKEY
                ) AS MERGE_STATUS
                       , (
                    SELECT PA.pa_STATUS
                      FROM PLMS_APPROVAL PA
                     WHERE PA.pa_DOCKEY = JMT.jmt_DOCKEY
                ) AS APPROVAL_STATUS
                  ,TRIM(CONCAT(jm.jm_sido_nm, ' ', jm.jm_sgg_nm, ' ', jm.jm_emd_nm, ' ', jm.jm_ri_nm, ' ', jm.jm_jibun)) AS address
                  ,jm.jm_cancle_date AS cancel_date
                  FROM JISANG_MASTER       JM
                  LEFT OUTER JOIN (
                    SELECT *
                      FROM (
                        SELECT js_JISANG_NO
                               , js_JIBUN
                               , js_SOUJA_NAME
                               , js_ADDRESS
                               , js_PONE_NUMBER
                               , js_HOME_NUMBER
                               , ROW_NUMBER() OVER(
                            PARTITION BY js_JISANG_NO
                             ORDER BY js_JISANG_NO ASC
                        ) AS ROW_IDX
                          FROM JISANG_SOUJA
                    ) sub1
                     WHERE ROW_IDX = 1
                ) JS ON JM.jm_JISANG_NO = JS.js_JISANG_NO
                  LEFT OUTER JOIN JISANG_MASTER_TMP   JMT ON JM.jm_JISANG_NO = JMT.jmt_JISANG_NO
                  LEFT OUTER JOIN JISANG_MERGE_TMP    JHT ON JM.jm_JISANG_NO = JHT.jmt_JISANG_NO
                 WHERE 1 = 1
		<if test="PAGE_GUBUN != null and PAGE_GUBUN != ''">
		    <if test="PAGE_GUBUN != '1'">
		        AND JM.jm_SAVE_STATUS = '승인'
		    </if>
		</if>
		<if test="ADDRESSCODE != null and ADDRESSCODE != ''">
			AND JM.jm_ADDRCODE LIKE '$ADDRESSCODE$%'
		</if>
		<if test="JIBEON != null and JIBEON != ''">
			AND JM.jm_JIBUN LIKE '${JIBEON}%'
		</if>
		<if test="jisa != null and jisa != ''">
			AND JM.jm_JISA = #{jisa}
		</if>
		<if test="JISA != null and JISA != ''">
			AND JM.jm_JISA = #{JISA}
		</if>
		<if test="DG_STARTDAY != null and DG_STARTDAY != ''">
			AND JM.jm_DEUNGGI_DATE >=to_date( #{DG_STARTDAY} , 'yyyy-mm-dd')
		</if>
		<if test="DG_ENDDAY != null and DG_ENDDAY != ''">
			AND JM.jm_DEUNGGI_DATE &lt;=to_date( #{DG_ENDDAY} , 'yyyy-mm-dd')
		</if>
		<if test="CD_STARTDAY != null and CD_STARTDAY != ''">
			AND JM.jm_CHUIDEUK_DATE >=	to_date( #{CD_STARTDAY} , 'yyyy-mm-dd')
		</if>
		<if test="CD_ENDDAY != null and CD_ENDDAY != ''">
			AND JM.jm_CHUIDEUK_DATE &lt;= 	to_date( #{CD_ENDDAY} , 'yyyy-mm-dd')
		</if>
		<if test="SOYU != null and SOYU != ''">
			AND JS.js_SOUJA_NAME LIKE '%${SOYU}%'
		</if>
		<if test="souja!= null and souja != ''">
			AND JS.js_SOUJA_NAME LIKE '%${souja}%'
		</if>
		<if test="JISANGNO != null and JISANGNO != ''">
			AND JM.jm_JISANG_NO = #{JISANGNO}
		</if>
		<if test="JASAN_NO != null and JASAN_NO != ''">
			AND JM.jm_JASAN_NO LIKE '%'|| #{JASAN_NO}||'%'
		</if>
		<if test="COMPLE_YN != null and COMPLE_YN != ''">
			AND JM.jm_COMPLE_YN = #{COMPLE_YN}
		</if>
		<if test="JIMOK_TEXT != null and JIMOK_TEXT != ''">
			AND JM.jm_JIMOK_TEXT IN ( #{JIMOK_TEXT} )
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(address)" >
			AND TRIM(CONCAT(jm.jm_sido_nm, ' ', jm.jm_sgg_nm, ' ', jm.jm_emd_nm, ' ', jm.jm_ri_nm, ' ', jm.jm_jibun)) LIKE '%${address}%'
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(sido_nm)" >
			AND JM.jm_sido_nm = #{sido_nm}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(sgg_nm)" >
			AND JM.jm_sgg_nm = #{sgg_nm}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(emd_nm)" >
			AND JM.jm_emd_nm = #{emd_nm}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(ri_nm)" >
			AND JM.jm_ri_nm = #{ri_nm}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(jibun)" >
			AND JM.jm_jibun LIKE '%${jibun}%'
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(account_yn)" >
			AND JM.jm_account_yn = #{account_yn}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(account_yn_condition)" >
			AND JM.jm_account_yn = ${account_yn_condition}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(cancel_yn)">
		    AND JM.jm_CANCLE_YN = #{cancel_yn}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(cancel_yn_condition)" >
			AND JM.jm_CANCLE_YN = ${cancel_yn_condition}
		</if>	
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(jasan_no)" >
			AND JM.jm_jasan_no LIKE '%${jasan_no}%'
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(start_date)">
        AND JM.jm_chuideuk_date &gt;= TO_DATE(#{start_date}, 'YYYY-MM-DD')
    </if>
    <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(end_date)">
        AND JM.jm_chuideuk_date &lt;= TO_DATE(#{end_date}, 'YYYY-MM-DD')
    </if>
		) AA WHERE 1=1
	</select>
	
	
	
	<select id="selectJisangTerminationList" resultType="HashMap" parameterType="HashMap">
   SELECT *
    FROM (
        SELECT
        ROW_NUMBER() OVER(
                     ORDER BY JM.jm_JISANG_NO DESC
                ) as no
                ,jm.jm_idx AS index
				,jm.jm_jisang_no AS idx
				,0 AS gidx,
            ROW_NUMBER() OVER(ORDER BY JM.jm_JISANG_NO DESC) AS RN,
            JM.jm_jisang_no as JISANG_NO,
            JM.jm_sido_nm as SIDO_NM,
            JM.jm_sgg_nm as SGG_NM,
            JM.jm_emd_nm as EMD_NM,
            JM.jm_ri_nm as RI_NM,
            JM.jm_jibun as JIBUN,
            JM.jm_jimok_text as jimok_text,
            JM.jm_jasan_no as JASAN_NO,
            JM.jm_jisa as JISA,
            TO_CHAR(JM.jm_CHUIDEUK_DATE, 'YYYY-MM-DD') AS CHUIDEUK_DATE,
            JM.jm_chuideuk_money as CHUIDEUK_MONEY,
            TO_CHAR(JM.jm_DEUNGGI_DATE, 'YYYY-MM-DD') AS DEUNGGI_DATE,
            JM.jm_cancle_yn as CANCLE_YN,
            CASE
                WHEN JM.jm_CANCLE_DATE IS NOT NULL THEN TO_CHAR(JM.jm_CANCLE_DATE, 'YYYY-MM-DD')
                ELSE TO_CHAR(JT.CANCLE_DATE, 'YYYY-MM-DD')
            END AS CANCLE_DATE,
            JM.jm_pnu as PNU,
            JT.CANCLE_STATUS,
            JS.js_souja_name as SOUJA_NAME,
            (SELECT COUNT(*)-1 FROM JISANG_SOUJA WHERE js_JISANG_NO = JM.jm_JISANG_NO) AS SOUJA_CNT,
            PA.pa_status as STATUS,
            PA.pa_dockey as DOCKEY,
            TRIM(CONCAT(jm.jm_sido_nm, ' ', jm.jm_sgg_nm, ' ', jm.jm_emd_nm, ' ', jm.jm_ri_nm, ' ', jm.jm_jibun)) AS address,
            JM.jm_JIJUK_AREA + COALESCE((SELECT SUM(S.jm_JIJUK_AREA) FROM JISANG_MERGE S WHERE S.jm_REP_JISANG_NO = JM.jm_JISANG_NO), 0) AS JIJUK_AREA,
            JM.jm_PYEONIB_AREA + COALESCE((SELECT SUM(S.jm_PYEONIB_AREA) FROM JISANG_MERGE S WHERE S.jm_REP_JISANG_NO = JM.jm_JISANG_NO), 0) AS PYEONIB_AREA,
            JM.jm_cancle_yn as CANCEL_YN
            
        FROM JISANG_MASTER JM
        LEFT JOIN (
            SELECT *
            FROM (
                SELECT
                    js_JISANG_NO,
                    js_JIBUN,
                    js_SOUJA_NAME,
                    js_ADDRESS,
                    js_PONE_NUMBER,
                    js_HOME_NUMBER,
                    ROW_NUMBER() OVER (PARTITION BY js_JISANG_NO ORDER BY js_JISANG_NO ASC) AS ROW_IDX
                FROM JISANG_SOUJA
            ) sub
            WHERE ROW_IDX = 1
        ) JS ON JM.jm_JISANG_NO = JS.js_JISANG_NO
         LEFT JOIN JISANG_TERMINATION JT ON JM.jm_JISANG_NO = JT.JISANG_NO
        LEFT JOIN PLMS_APPROVAL PA ON JT.DOCKEY = PA.pa_DOCKEY
       
        WHERE JM.jm_SAVE_STATUS = '승인'
        <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(address)" >
			AND TRIM(CONCAT(
			    TRIM(jm.jm_sido_nm), ' ', 
			    TRIM(jm.jm_sgg_nm), ' ', 
			    TRIM(jm.jm_emd_nm), 
			    CASE 
			        WHEN jm.jm_ri_nm IS NOT NULL AND jm.jm_ri_nm != '' 
			        THEN CONCAT(' ', TRIM(jm.jm_ri_nm)) 
			        ELSE '' 
			    END, 
			    ' ', 
			    TRIM(jm.jm_jibun)
			)) LIKE '%${address}%'
		</if>
        <if test="ADDRESSCODE != null and ADDRESSCODE != ''">
            AND JM.ADDRCODE LIKE #{ADDRESSCODE} || '%'
        </if>
        <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(sido_nm)" >
			AND JM.jm_sido_nm = #{sido_nm}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(sgg_nm)" >
			AND JM.jm_sgg_nm = #{sgg_nm}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(emd_nm)" >
			AND JM.jm_emd_nm = #{emd_nm}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(ri_nm)" >
			AND JM.jm_ri_nm = #{ri_nm}
		</if>
        <if test="jibun != null and jibun != ''">
            AND JM.jm_JIBUN LIKE #{jibun} || '%'
        </if>
         <if test="cancle_yn != null and jibun != ''">
            AND JM.jm_JIBUN LIKE #{jibun} || '%'
        </if>
        <if test="jisa != null and jisa != ''">
            AND JM.jm_JISA = CAST(#{jisa} AS TEXT)
        </if>
        <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(account_yn)" >
			AND JM.jm_account_yn = #{account_yn}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(account_yn_condition)" >
			AND JM.jm_account_yn = ${account_yn_condition}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(cancel_yn)">
		    AND JM.jm_CANCLE_YN = #{cancel_yn}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(cancel_yn_condition)" >
			AND JM.jm_CANCLE_YN = ${cancel_yn_condition}
		</if>	
        <if test="souja != null and souja != ''">
            AND JS.js_SOUJA_NAME LIKE '%' || #{souja} || '%'
        </if>
        <if test="start_date != null and start_date != ''">
            AND JM.jm_CHUIDEUK_DATE >= TO_DATE(#{start_date}, 'yyyy-mm-dd')
        </if>
        <if test="end_date != null and end_date != ''">
           <![CDATA[ AND JM.jm_CHUIDEUK_DATE <= TO_DATE(#{end_date}, 'yyyy-mm-dd') ]]>
        </if>
        
        <if test="HEJI != null and HEJI != ''">
            <choose>
                <when test="HEJI == 'Y'">
                    AND JM.CANCLE_YN = #{HEJI}
                </when>
                <when test="HEJI == 'H'">
                    AND PA.STATUS = 'C'
                    AND JT.CANCLE_STATUS = '상신'
                </when>
                <when test="HEJI == 'A'">
                    AND PA.STATUS = 'I'
                    AND JT.CANCLE_STATUS = '상신'
                </when>
                <when test="HEJI == 'T'">
                    AND PA.STATUS IS NULL
                    AND JT.CANCLE_STATUS = '임시저장'
                </when>
                <when test="HEJI == 'N'">
                    AND (JT.CANCLE_STATUS = '임시저장' OR JT.CANCLE_STATUS IS NULL)
                </when>
            </choose>
        </if>
        <if test="JASAN_NO != null and JASAN_NO != ''">
            AND JM.JASAN_NO = #{JASAN_NO}
        </if>
        ORDER BY JM.jm_JISANG_NO DESC
    ) AA
    WHERE 1=1
    
    <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(orderCol)" >
			ORDER BY AA.${orderCol} ${desc}
			</if>
		<if test="length>0">
			limit #{length} offset #{start}
		</if>
   
</select>



<select id="selectJisangTerminationListCount" resultType="integer" parameterType="HashMap">
   SELECT count(*)
    FROM (
        SELECT
        ROW_NUMBER() OVER(
                     ORDER BY JM.jm_JISANG_NO DESC
                ) as no
                ,jm.jm_idx AS index
				,jm.jm_jisang_no AS idx
				,0 AS gidx,
            ROW_NUMBER() OVER(ORDER BY JM.jm_JISANG_NO DESC) AS RN,
            JM.jm_jisang_no as JISANG_NO,
            JM.jm_sido_nm as SIDO_NM,
            JM.jm_sgg_nm as SGG_NM,
            JM.jm_emd_nm as EMD_NM,
            JM.jm_ri_nm as RI_NM,
            JM.jm_jibun as JIBUN,
            JM.jm_jasan_no as JASAN_NO,
            JM.jm_jisa as JISA,
            TO_CHAR(JM.jm_CHUIDEUK_DATE, 'YYYY-MM-DD') AS CHUIDEUK_DATE,
            JM.jm_chuideuk_money as CHUIDEUK_MONEY,
            TO_CHAR(JM.jm_DEUNGGI_DATE, 'YYYY-MM-DD') AS DEUNGGI_DATE,
            JM.jm_cancle_yn as CANCLE_YN,
            CASE
                WHEN JM.jm_CANCLE_DATE IS NOT NULL THEN TO_CHAR(JM.jm_CANCLE_DATE, 'YYYY-MM-DD')
                ELSE TO_CHAR(JT.CANCLE_DATE, 'YYYY-MM-DD')
            END AS CANCLE_DATE,
            JM.jm_pnu as PNU,
            JT.CANCLE_STATUS,
            JS.js_souja_name as SOUJA_NAME,
            (SELECT COUNT(*)-1 FROM JISANG_SOUJA WHERE js_JISANG_NO = JM.jm_JISANG_NO) AS SOUJA_CNT,
            PA.pa_status as STATUS,
            PA.pa_dockey as DOCKEY
        FROM JISANG_MASTER JM
        LEFT JOIN (
            SELECT *
            FROM (
                SELECT
                    js_JISANG_NO,
                    js_JIBUN,
                    js_SOUJA_NAME,
                    js_ADDRESS,
                    js_PONE_NUMBER,
                    js_HOME_NUMBER,
                    ROW_NUMBER() OVER (PARTITION BY js_JISANG_NO ORDER BY js_JISANG_NO ASC) AS ROW_IDX
                FROM JISANG_SOUJA
            ) sub
            WHERE ROW_IDX = 1
        ) JS ON JM.jm_JISANG_NO = JS.js_JISANG_NO
         LEFT JOIN JISANG_TERMINATION JT ON JM.jm_JISANG_NO = JT.JISANG_NO
        LEFT JOIN PLMS_APPROVAL PA ON JT.DOCKEY = PA.pa_DOCKEY
       
        WHERE JM.jm_SAVE_STATUS = '승인'
       <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(address)" >
			AND TRIM(CONCAT(
			    TRIM(jm.jm_sido_nm), ' ', 
			    TRIM(jm.jm_sgg_nm), ' ', 
			    TRIM(jm.jm_emd_nm), 
			    CASE 
			        WHEN jm.jm_ri_nm IS NOT NULL AND jm.jm_ri_nm != '' 
			        THEN CONCAT(' ', TRIM(jm.jm_ri_nm)) 
			        ELSE '' 
			    END, 
			    ' ', 
			    TRIM(jm.jm_jibun)
			)) LIKE '%${address}%'
		</if>
        <if test="ADDRESSCODE != null and ADDRESSCODE != ''">
            AND JM.ADDRCODE LIKE #{ADDRESSCODE} || '%'
        </if>
        <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(sido_nm)" >
			AND JM.jm_sido_nm = #{sido_nm}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(sgg_nm)" >
			AND JM.jm_sgg_nm = #{sgg_nm}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(emd_nm)" >
			AND JM.jm_emd_nm = #{emd_nm}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(ri_nm)" >
			AND JM.jm_ri_nm = #{ri_nm}
		</if>
        <if test="jibun != null and jibun != ''">
            AND JM.jm_JIBUN LIKE #{jibun} || '%'
        </if>
         <if test="cancle_yn != null and jibun != ''">
            AND JM.jm_JIBUN LIKE #{jibun} || '%'
        </if>
        <if test="jisa != null and jisa != ''">
            AND JM.jm_JISA = CAST(#{jisa} AS TEXT)
        </if>
        <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(account_yn)" >
			AND JM.jm_account_yn = #{account_yn}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(account_yn_condition)" >
			AND JM.jm_account_yn = ${account_yn_condition}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(cancel_yn)">
		    AND JM.jm_CANCLE_YN = #{cancel_yn}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(cancel_yn_condition)" >
			AND JM.jm_CANCLE_YN = ${cancel_yn_condition}
		</if>	
        <if test="souja != null and souja != ''">
            AND JS.js_SOUJA_NAME LIKE '%' || #{souja} || '%'
        </if>
        <if test="start_date != null and start_date != ''">
            AND JM.jm_CHUIDEUK_DATE >= TO_DATE(#{start_date}, 'yyyy-mm-dd')
        </if>
        <if test="end_date != null and end_date != ''">
           <![CDATA[ AND JM.jm_CHUIDEUK_DATE <= TO_DATE(#{end_date}, 'yyyy-mm-dd') ]]>
        </if>
        
        <if test="HEJI != null and HEJI != ''">
            <choose>
                <when test="HEJI == 'Y'">
                    AND JM.CANCLE_YN = #{HEJI}
                </when>
                <when test="HEJI == 'H'">
                    AND PA.STATUS = 'C'
                    AND JT.CANCLE_STATUS = '상신'
                </when>
                <when test="HEJI == 'A'">
                    AND PA.STATUS = 'I'
                    AND JT.CANCLE_STATUS = '상신'
                </when>
                <when test="HEJI == 'T'">
                    AND PA.STATUS IS NULL
                    AND JT.CANCLE_STATUS = '임시저장'
                </when>
                <when test="HEJI == 'N'">
                    AND (JT.CANCLE_STATUS = '임시저장' OR JT.CANCLE_STATUS IS NULL)
                </when>
            </choose>
        </if>
        <if test="JASAN_NO != null and JASAN_NO != ''">
            AND JM.JASAN_NO = #{JASAN_NO}
        </if>
        ORDER BY JM.jm_JISANG_NO DESC
    ) AA
    WHERE 1=1
</select>

	
	
	
	
</mapper>