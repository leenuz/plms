<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="goverSQL">
<select id="selectAllList" parameterType="java.util.HashMap" resultType="java.util.HashMap"><![CDATA[
		select * from gover_master 
	]]></select>
	<select id="selectAllList2" parameterType="java.util.HashMap" resultType="java.util.HashMap"><![CDATA[
		select gm_idx,gm_youngdo  from gover_master 
	]]></select>

	<select id="selectAllData" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		select *
		from gover_master
		where 1=1
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(idx)" >
			and gm_gover_no=#{idx}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(index)" >
			and gm_idx=cast(#{index} as integer)
		</if>
	</select>

	<select id="selectPermitList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		select *,(row_number() over()) as no
		from gover_master gm left join gover_permit gp on gp.gp_gover_no=gm.gm_gover_no
		where 1=1
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(idx)" >
			and gp.gp_gover_no=#{idx}
		</if>
		AND gm.gm_dockey IS NOT null
		AND gp.gp_dockey IS NOT null
	</select>

	<select id="selectPnuList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		select *,(row_number() over()) as no
		from gover_pnu
		where 1=1
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(idx)" >
			and gp_gover_no=#{idx}
		</if>
	</select>

	<select id="selectPnuTargetList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		select *,(row_number() over()) as no
		from gover_pnu
		where 1=1
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(idx)" >
			and gp_idx=#{idx}
		</if>
	</select>

	<select id="selectPnuAtcFileList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		select *,(row_number() over()) as no
		from pnu_atcfile
		where 1=1
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(idx)" >
			and pa_manage_no=#{idx}
		</if>

	</select>

	<select id="selectAtcFileList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		select *,(row_number() over()) as no
		from gover_atcfile
		where 1=1
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(idx)" >
			and ga_gover_no=#{idx}
		</if>
	</select>
	
	<select id="selectModifyList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		select *,(row_number() over()) as no 
		from gover_modify 
		where 1=1
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(idx)" >
		and gm_gover_no=#{idx}
		</if>
		order by gm_modify_date desc
	</select>
	
	<select id="selectMemoList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		select *,(row_number() over()) as no 
		from memo_master 
		where 1=1
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(gover_no)" >
		and mm_manage_no=#{gover_no}
		</if>
	</select>
	<!-- //기본정보 점용 결재내역 상세보기에서 기본정보조회-->
<select id="selectGoverDetailList" resultType="HashMap" parameterType="HashMap">
SELECT *
FROM (
    SELECT A.GOVER_NO
         , A.JISA
         , A.YONGDO
         , A.PIPE_NAME
         , A.SUN_GUBUN
         , TO_CHAR(A.PIPE_METER, 'FM999999999.00') AS PIPE_METER
         , A.CANCLE_YN
         , A.CANCLE_DATE
         , A.CANCLE_NAME
         , A.CANCLE_EMPCD
         , A.PNU
         , A.ADDRCODE
         , A.SIDO_NM
         , A.SGG_NM
         , A.EMD_NM
         , A.RI_NM
         , A.JIBUN
         , A.JIBUN_FULL
         , A.GOVER_OWN_YN
         , TO_CHAR(A.JIJUK_AREA, 'FM999999999.00') AS JIJUK_AREA
         , B.ROWCNT
         , A.USE_PURPOS
         , A.GOVER_ST_DATE
         , A.GOVER_ED_DATE
         , A.PMT_STATUS
         , A.GOVER_LENGTH
         , A.GOVER_AREA
         , A.OFFICE_DEPART
         , A.OFFICE_CHAREGE
         , A.OFFICE_CONTACT
         , A.OFFICE_MOBILE
         , A.PMT_OFFICE
         , A.ADM_OFFICE
         , A.JIMOK_TEXT
         , A.GOVER_PERIOD
         , A.SAVE_STATUS
         , A.PIPE_METER2
         , A.REP_FLAG
         , A.NEWREGREASON
         , A.OCCUNONPAYREASON
         , A.PERMPOSSYN
         , A.OCCUPREPAYYN
         , A.OCCUPREPAYDATE
         ,A.EXEMPTIONYN
    FROM (
        SELECT GM.gm_GOVER_NO AS GOVER_NO
             , GM.gm_JISA AS JISA
             , GM.gm_YONGDO AS YONGDO
             , GM.gm_PIPE_NAME AS PIPE_NAME
             , GM.gm_SUN_GUBUN AS SUN_GUBUN
             , GM.gm_PIPE_METER::numeric AS PIPE_METER
             , GM.gm_CANCEL_YN AS CANCLE_YN
             , TO_CHAR(GM.gm_CANCEL_DATE, 'YYYY-MM-DD') AS CANCLE_DATE
             , GM.gm_CANCEL_NAME AS CANCLE_NAME
             , GM.gm_CANCEL_EMPCD AS CANCLE_EMPCD
             , GP.gp_PNU AS PNU
             , GP.gp_ADDRCODE AS ADDRCODE
             , GP.gp_SIDO_NM AS SIDO_NM
             , GP.gp_SGG_NM AS SGG_NM
             , GP.gp_EMD_NM AS EMD_NM
             , GP.gp_RI_NM AS RI_NM
             , GP.gp_JIBUN AS JIBUN
             , GP.gp_JIBUN_FULL AS JIBUN_FULL
             , GP.gp_GOVER_OWN_YN AS GOVER_OWN_YN
             , GP.gp_JIJUK_AREA AS JIJUK_AREA
             , GM.gm_USE_PURPOS AS USE_PURPOS
             , TO_CHAR(GM.gm_GOVER_ST_DATE, 'YYYY-MM-DD') AS GOVER_ST_DATE
             , TO_CHAR(GM.gm_GOVER_ED_DATE, 'YYYY-MM-DD') AS GOVER_ED_DATE
             , GM.gm_PMT_STATUS AS PMT_STATUS
             , GP.gp_GOVER_LENGTH AS GOVER_LENGTH
             , GP.gp_GOVER_AREA AS GOVER_AREA
             , GM.gm_OFFICE_DEPART AS OFFICE_DEPART
             , GM.gm_OFFICE_CHAREGE AS OFFICE_CHAREGE
             , GM.gm_OFFICE_CONTACT AS OFFICE_CONTACT
             , GM.gm_OFFICE_MOBILE AS OFFICE_MOBILE
             , GM.gm_PMT_OFFICE AS PMT_OFFICE
             , GM.gm_ADM_OFFICE AS ADM_OFFICE
             , GP.gp_JIMOK_TEXT AS JIMOK_TEXT
             , GM.gm_GOVER_PERIOD AS GOVER_PERIOD
             , GM.gm_SAVE_STATUS AS SAVE_STATUS
             , GM.gm_PIPE_METER2::numeric AS PIPE_METER2
             , GP.gp_REP_FLAG AS REP_FLAG
             , GM.gm_NEWREGREASON AS NEWREGREASON
             , GM.gm_OCCUNONPAYREASON AS OCCUNONPAYREASON
             , GM.gm_PERMPOSSYN AS PERMPOSSYN
             , GM.gm_OCCUPREPAYYN AS OCCUPREPAYYN
             , TO_CHAR(GM.gm_OCCUPREPAYDATE, 'YYYY-MM-DD') AS OCCUPREPAYDATE
             ,GM.gm_exemptionyn as EXEMPTIONYN
        FROM GOVER_MASTER GM
        LEFT JOIN GOVER_PNU GP ON GM.gm_GOVER_NO = GP.gp_GOVER_NO
        WHERE 1=1
       <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(ADDRESSCODE)" >
			AND GP.gp_ADDRCODE LIKE '${ADDRESSCODE}%'
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(JIBEON)" >
			AND GP.gp_JIBUN LIKE '${JIBEON}%'
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(JISA)" >
			AND GM.gm_JISA = #{JISA}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(PMT_NO)" >
			AND GM.gm_PMT_NO LIKE '${PMT_NO}%'
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(PMT_OFFICE)" >
			AND GM.gm_PMT_OFFICE LIKE '${PMT_OFFICE}%'
		</if>
        ORDER BY GM.gm_GOVER_NO DESC, GP.gp_REP_FLAG DESC
    ) A
    LEFT JOIN (
        SELECT GM.gm_GOVER_NO, COUNT(*) AS ROWCNT
        FROM GOVER_MASTER GM
        LEFT JOIN GOVER_PNU GP ON GM.gm_GOVER_NO = GP.gp_GOVER_NO
        WHERE 1=1
        <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(ADDRESSCODE)" >
			AND GP.gp_ADDRCODE LIKE '${ADDRESSCODE}%'
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(JIBEON)" >
			AND GP.gp_JIBUN LIKE '${JIBEON}%'
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(JISA)" >
			AND GM.gm_JISA = #{JISA}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(PMT_NO)" >
			AND GM.gm_PMT_NO LIKE '${PMT_NO}%'
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(PMT_OFFICE)" >
			AND GM.gm_PMT_OFFICE LIKE '${PMT_OFFICE}%'
		</if>
        GROUP BY GM.gm_GOVER_NO
    ) B ON A.GOVER_NO = B.gm_GOVER_NO
   	<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(GOVERNO)" >
			WHERE A.GOVER_NO = #{GOVERNO}
		</if>
) ALL2
LEFT JOIN (
    	
	SELECT * FROM (
		SELECT gp_gover_no as GOVER_NO
	         , TO_CHAR(gp_PMT_ST_DATE, 'YYYY-MM-DD') AS PMT_ST_DATE
	         , TO_CHAR(gp_PMT_ED_DATE, 'YYYY-MM-DD') AS PMT_ED_DATE
	         , gp_pmt_no as PMT_NO
	         , gp_pmt_office as PMT_OFFICE
	         , gp_adm_office as ADM_OFFICE
	         , gp_dosiplan as DOSIPLAN
	         ,(row_number() OVER()) AS rn
	    FROM GOVER_PERMIT
	    ) r 
	    WHERE rn=1
) ALL3 ON ALL2.GOVER_NO = ALL3.GOVER_NO
WHERE 1=1
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(PMT_STARTDAY)" >
			AND PMT_ST_DATE >=to_date( #{PMT_STARTDAY} , 'yyyy-mm-dd')
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(PMT_ENDDAY)" >
			AND PMT_ED_DATE &lt;=
			to_date( #{PMT_ENDDAY} , 'yyyy-mm-dd')
		</if>


	</select>
	<select id="selectGoverList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
	    SELECT *,
	           (row_number() OVER()) AS no,
	           r.pnu_count
	    FROM (
	        SELECT gm.gm_idx AS index,
	        	   gm.gm_gover_no AS idx,
	               gm.gm_yongdo AS yongdo,
	               0 AS gidx,
	               gm.gm_pipe_name AS pipename,
	               gm.gm_sun_gubun AS sun_gubun,
	               gm.gm_pipe_meter AS pipe_meter,
	               gm.gm_cancel_yn AS cancel_yn,
	               gm.gm_cancel_date AS cancel_date,
	               gm.gm_cancel_name AS cancel_name,
	               gm.gm_cancel_empcd AS cancel_empcd,
	               gm.gm_use_purpos AS use_purpos,
	               gm.gm_gover_st_date AS gover_st_date,
	               gm.gm_gover_ed_date AS gover_ed_date,
	               CONCAT(gm.gm_gover_st_date, ' ~ ', gm.gm_gover_ed_date) AS period,
	               gm.gm_pmt_status AS pmt_status,
	               gm.gm_dockey AS dockey,
	               gm.gm_pmt_office AS pmt_office,
	               gm.gm_adm_office AS adm_office,
	               gm.gm_office_depart AS office_depart,
	               gm.gm_office_charege AS office_charege,
	               gm.gm_office_contact AS office_contact,
	               gm.gm_office_mobile AS office_mobile,
	               gm.gm_gover_period AS gover_period,
	               gm.gm_pipe_meter2 AS pipe_meter2,
	               gm.gm_save_status AS save_status,
	               gm.gm_newregreason AS newregreason,
	               gm.gm_occunonpayreason AS occunonpayreason,
	               gm.gm_permpossyn AS permpossyn,
	               gm.gm_occuprepayyn AS occuprepayyn,
	               gm.gm_occuprepaydate AS occuprepaydate,
	               gm.gm_udate AS udate,
	               gm.gm_jisa AS jisa,
	               gm.gm_gover_no AS gover_no,
	               gm.gm_wdate AS wdate,
	               gp.gp_sido_nm AS sido_nm,
	               gp.gp_sgg_nm AS sgg_nm,
	               gp.gp_emd_nm AS emd_nm,
	               gp.gp_ri_nm AS ri_nm,
	               gp.gp_jibun AS jibun,
	               TRIM(CONCAT(gp.gp_sido_nm, ' ', gp.gp_sgg_nm, ' ', gp.gp_ri_nm, ' ', gp.gp_jibun)) AS address,
	               gp.gp_gover_length AS gover_length,
	               gp.gp_gover_area AS gover_area,
	               gp.gp_jimok_text AS jimok_text,
	               gpm.gp_pay_date AS pay_date,
	               gpm.gp_pay_money AS pay_money,
	               (SELECT COUNT(*) FROM gover_pnu WHERE gover_pnu.gp_gover_no = gm.gm_gover_no) AS pnu_count  <!-- 필지수 계산 -->
	               ,gpm.gp_pmt_no AS pmt_no 
	               ,gpm.gp_pay_vat as pay_vat
	               ,gpm.gp_pmt_st_date as pmt_st_date
	               ,gpm.gp_pmt_ed_date as pmt_ed_date
	               ,gpm.gp_pay_way as pay_way
	               
	        FROM gover_master gm
	        LEFT JOIN GOVER_PNU gp ON gm.gm_gover_no = gp.gp_gover_no
	        LEFT JOIN GOVER_PERMIT gpm ON gm.gm_gover_no = gpm.gp_gover_no
	        WHERE 1 = 1
	        <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(jisa)" >
	        and gm.gm_jisa=#{jisa}
	        </if>
	        <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(orderCol)" >
	        ORDER BY ${orderCol} ${desc}
	        </if>
	    ) AS r
	    where 1=1
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(gover_no)" >
			and r.gover_no=#{gover_no}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(use_purpos)" >
			and r.use_purpos=#{use_purpos}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(pmt_office)" >
			and r.pmt_office=#{pmt_office}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(adm_office)" >
			and r.adm_office=#{adm_office}
		</if>
<!--		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(save_status)" >
			and r.save_status=#{save_status}
		</if>-->
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(idx)" >
			and r.idx like '%${idx}%'
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(address)" >
			and r.address like '%${address}%'
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(right_overlap)" >
			and (SELECT COUNT(o.address) AS overlap
			FROM(
				(
				SELECT trim(concat(gm.gm_sido_nm,' ',gm.gm_sgg_nm,' ',gm.gm_ri_nm,' ',gm.gm_jibun)) as address
				FROM gover_master gm 
				LEFT JOIN GOVER_PNU gp ON gm.gm_gover_no = gp.gp_gover_no
				where 1=1
				)
			) as o  WHERE o.address = r.address GROUP BY o.address ) >1
		</if>
		<if test="length>0">
			limit #{length} offset #{start}
		</if>
	</select>

	<select id="selectTotalCount" parameterType="java.util.HashMap" resultType="Integer">
	    SELECT COUNT(*) as count
	    FROM (
	        SELECT gm.gm_idx AS index,
	        	   gm.gm_gover_no AS idx,
	               gm.gm_yongdo AS yongdo,
	               0 AS gidx,
	               gm.gm_pipe_name AS pipename,
	               gm.gm_sun_gubun AS sun_gubun,
	               gm.gm_pipe_meter AS pipe_meter,
	               gm.gm_cancel_yn AS cancel_yn,
	               gm.gm_cancel_date AS cancel_date,
	               gm.gm_cancel_name AS cancel_name,
	               gm.gm_cancel_empcd AS cancel_empcd,
	               gm.gm_use_purpos AS use_purpos,
	               gm.gm_gover_st_date AS gover_st_date,
	               gm.gm_gover_ed_date AS gover_ed_date,
	               CONCAT(gm.gm_gover_st_date, ' ~ ', gm.gm_gover_ed_date) AS period,
	               gm.gm_pmt_status AS pmt_status,
	               gm.gm_dockey AS dockey,
	               gm.gm_pmt_office AS pmt_office,
	               gm.gm_adm_office AS adm_office,
	               gm.gm_office_depart AS office_depart,
	               gm.gm_office_charege AS office_charege,
	               gm.gm_office_contact AS office_contact,
	               gm.gm_office_mobile AS office_mobile,
	               gm.gm_gover_period AS gover_period,
	               gm.gm_pipe_meter2 AS pipe_meter2,
	               gm.gm_save_status AS save_status,
	               gm.gm_newregreason AS newregreason,
	               gm.gm_occunonpayreason AS occunonpayreason,
	               gm.gm_permpossyn AS permpossyn,
	               gm.gm_occuprepayyn AS occuprepayyn,
	               gm.gm_occuprepaydate AS occuprepaydate,
	               gm.gm_udate AS udate,
	               gm.gm_jisa AS jisa,
	               gm.gm_gover_no AS gover_no,
	               gm.gm_wdate AS wdate,
	               gp.gp_sido_nm AS sido_nm,
	               gp.gp_sgg_nm AS sgg_nm,
	               gp.gp_emd_nm AS emd_nm,
	               gp.gp_ri_nm AS ri_nm,
	               gp.gp_jibun AS jibun,
	               TRIM(CONCAT(gp.gp_sido_nm, ' ', gp.gp_sgg_nm, ' ', gp.gp_ri_nm, ' ', gp.gp_jibun)) AS address,
	               gp.gp_gover_length AS gover_length,
	               gp.gp_gover_area AS gover_area,
	               gp.gp_jimok_text AS jimok_text,
	               gpm.gp_pay_date AS pay_date,
	               gpm.gp_pay_money AS pay_money,
	               gpm.gp_echo_no AS echo_no,
	               (SELECT COUNT(*) FROM gover_pnu WHERE gover_pnu.gp_gover_no = gm.gm_gover_no) AS pnu_count  <!-- 필지수 계산 -->
	        FROM gover_master gm
	        LEFT JOIN GOVER_PNU gp ON gm.gm_gover_no = gp.gp_gover_no
	        LEFT JOIN GOVER_PERMIT gpm ON gm.gm_gover_no = gpm.gp_gover_no
	        WHERE 1 = 1
	        <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(jisa)" >
	        and gm.gm_jisa=#{jisa}
	        </if>
	        <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(orderCol)" >
	        ORDER BY ${orderCol} ${desc}
	        </if>
	    ) AS r
	    WHERE 1 = 1
	    <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(gover_no)" >
	        and r.gover_no=#{gover_no}
	    </if>
	    <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(use_purpos)" >
	        and r.use_purpos=#{use_purpos}
	    </if>
	    <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(pmt_office)" >
	        and r.pmt_office=#{pmt_office}
	    </if>
	    <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(adm_office)" >
	        and r.adm_office=#{adm_office}
	    </if>
	    <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(idx)" >
	        and r.idx like '%${idx}%'
	    </if>
	    <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(address)" >
	        and r.address like '%${address}%'
	    </if>
	    <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(right_overlap)" >
	        and (SELECT COUNT(o.address) AS overlap
	        FROM(
	            (
	            SELECT trim(concat(gm.gm_sido_nm,' ',gm.gm_sgg_nm,' ',gm.gm_ri_nm,' ',gm.gm_jibun)) as address
	            FROM gover_master gm 
	            LEFT JOIN GOVER_PNU gp ON gm.gm_gover_no = gp.gp_gover_no
	            where 1=1
	            )
	        ) as o  WHERE o.address = r.address GROUP BY o.address ) >1
	    </if>
	</select>

	<select id="selectGoverList03_2" parameterType="java.util.HashMap" resultType="java.util.HashMap">
	    SELECT *,
	           (row_number() OVER()) AS no,
	           r.pnu_count
	    FROM (
	        SELECT gm.gm_idx AS index,
	        	   gm.gm_gover_no AS idx,
	               gm.gm_yongdo AS yongdo,
	               0 AS gidx,
	               gm.gm_pipe_name AS pipename,
	               gm.gm_sun_gubun AS sun_gubun,
	               gm.gm_pipe_meter AS pipe_meter,
	               gm.gm_cancel_yn AS cancel_yn,
	               gm.gm_cancel_date AS cancel_date,
	               gm.gm_cancel_name AS cancel_name,
	               gm.gm_cancel_empcd AS cancel_empcd,
	               gm.gm_use_purpos AS use_purpos,
	               gm.gm_gover_st_date AS gover_st_date,
	               gm.gm_gover_ed_date AS gover_ed_date,
	               CONCAT(gm.gm_gover_st_date, ' ~ ', gm.gm_gover_ed_date) AS period,
	               gm.gm_pmt_status AS pmt_status,
	               gm.gm_dockey AS dockey,
	               gm.gm_pmt_office AS pmt_office,
	               gm.gm_adm_office AS adm_office,
	               gm.gm_office_depart AS office_depart,
	               gm.gm_office_charege AS office_charege,
	               gm.gm_office_contact AS office_contact,
	               gm.gm_office_mobile AS office_mobile,
	               gm.gm_gover_period AS gover_period,
	               gm.gm_pipe_meter2 AS pipe_meter2,
	               gm.gm_save_status AS save_status,
	               gm.gm_newregreason AS newregreason,
	               gm.gm_occunonpayreason AS occunonpayreason,
	               gm.gm_permpossyn AS permpossyn,
	               gm.gm_occuprepayyn AS occuprepayyn,
	               gm.gm_occuprepaydate AS occuprepaydate,
	               gm.gm_udate AS udate,
	               gm.gm_jisa AS jisa,
	               gm.gm_gover_no AS gover_no,
	               gm.gm_wdate AS wdate,
	               gp.gp_sido_nm AS sido_nm,
	               gp.gp_sgg_nm AS sgg_nm,
	               gp.gp_emd_nm AS emd_nm,
	               gp.gp_ri_nm AS ri_nm,
	               gp.gp_jibun AS jibun,
	               TRIM(CONCAT(gp.gp_sido_nm, ' ', gp.gp_sgg_nm, ' ', gp.gp_ri_nm, ' ', gp.gp_jibun)) AS address,
	               gp.gp_gover_length AS gover_length,
	               gp.gp_gover_area AS gover_area,
	               gp.gp_jimok_text AS jimok_text,
	               gpm.gp_pay_date AS pay_date,
	               gpm.gp_pay_money AS pay_money,
	               gpm.gp_echo_no AS echo_no,
	               (SELECT COUNT(*) FROM gover_pnu WHERE gover_pnu.gp_gover_no = gm.gm_gover_no) AS pnu_count  <!-- 필지수 계산 -->
	        FROM gover_master gm
	        LEFT JOIN GOVER_PNU gp ON gm.gm_gover_no = gp.gp_gover_no
	        LEFT JOIN GOVER_PERMIT gpm ON gm.gm_gover_no = gpm.gp_gover_no
	        WHERE 1 = 1
	        <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(jisa)" >
	        and gm.gm_jisa=#{jisa}
	        </if>
	        <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(pay_date_start)">
	            AND gpm.gp_pay_date &gt;= TO_DATE(#{pay_date_start}, 'YYYY-MM-DD')
	        </if>
	        <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(pay_date_end)">
	            AND gpm.gp_pay_date &lt;= TO_DATE(#{pay_date_end}, 'YYYY-MM-DD')
	        </if>
	        <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(orderCol)" >
	        ORDER BY ${orderCol} ${desc}
	        </if>
	    ) AS r
	    where 1=1
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(gover_no)" >
			and r.gover_no=#{gover_no}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(use_purpos)" >
			and r.use_purpos=#{use_purpos}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(pmt_office)" >
			and r.pmt_office=#{pmt_office}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(adm_office)" >
			and r.adm_office=#{adm_office}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(idx)" >
			and r.idx like '%${idx}%'
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(address)" >
			and r.address like '%${address}%'
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(right_overlap)" >
			and (SELECT COUNT(o.address) AS overlap
			FROM(
				(
				SELECT trim(concat(gm.gm_sido_nm,' ',gm.gm_sgg_nm,' ',gm.gm_ri_nm,' ',gm.gm_jibun)) as address
				FROM gover_master gm 
				LEFT JOIN GOVER_PNU gp ON gm.gm_gover_no = gp.gp_gover_no
				where 1=1
				)
			) as o  WHERE o.address = r.address GROUP BY o.address ) >1
		</if>
		<if test="length>0">
			limit #{length} offset #{start}
		</if>
	</select>
	
	<select id="selectTotalCount03_2" parameterType="java.util.HashMap" resultType="Integer">
	    SELECT COUNT(*) as count
	    FROM (
	        SELECT gm.gm_idx AS index,
	        	   gm.gm_gover_no AS idx,
	               gm.gm_yongdo AS yongdo,
	               0 AS gidx,
	               gm.gm_pipe_name AS pipename,
	               gm.gm_sun_gubun AS sun_gubun,
	               gm.gm_pipe_meter AS pipe_meter,
	               gm.gm_cancel_yn AS cancel_yn,
	               gm.gm_cancel_date AS cancel_date,
	               gm.gm_cancel_name AS cancel_name,
	               gm.gm_cancel_empcd AS cancel_empcd,
	               gm.gm_use_purpos AS use_purpos,
	               gm.gm_gover_st_date AS gover_st_date,
	               gm.gm_gover_ed_date AS gover_ed_date,
	               CONCAT(gm.gm_gover_st_date, ' ~ ', gm.gm_gover_ed_date) AS period,
	               gm.gm_pmt_status AS pmt_status,
	               gm.gm_dockey AS dockey,
	               gm.gm_pmt_office AS pmt_office,
	               gm.gm_adm_office AS adm_office,
	               gm.gm_office_depart AS office_depart,
	               gm.gm_office_charege AS office_charege,
	               gm.gm_office_contact AS office_contact,
	               gm.gm_office_mobile AS office_mobile,
	               gm.gm_gover_period AS gover_period,
	               gm.gm_pipe_meter2 AS pipe_meter2,
	               gm.gm_save_status AS save_status,
	               gm.gm_newregreason AS newregreason,
	               gm.gm_occunonpayreason AS occunonpayreason,
	               gm.gm_permpossyn AS permpossyn,
	               gm.gm_occuprepayyn AS occuprepayyn,
	               gm.gm_occuprepaydate AS occuprepaydate,
	               gm.gm_udate AS udate,
	               gm.gm_jisa AS jisa,
	               gm.gm_gover_no AS gover_no,
	               gm.gm_wdate AS wdate,
	               gp.gp_sido_nm AS sido_nm,
	               gp.gp_sgg_nm AS sgg_nm,
	               gp.gp_emd_nm AS emd_nm,
	               gp.gp_ri_nm AS ri_nm,
	               gp.gp_jibun AS jibun,
	               TRIM(CONCAT(gp.gp_sido_nm, ' ', gp.gp_sgg_nm, ' ', gp.gp_ri_nm, ' ', gp.gp_jibun)) AS address,
	               gp.gp_gover_length AS gover_length,
	               gp.gp_gover_area AS gover_area,
	               gp.gp_jimok_text AS jimok_text,
	               gpm.gp_pay_date AS pay_date,
	               gpm.gp_pay_money AS pay_money,
	               gpm.gp_echo_no AS echo_no,
	               (SELECT COUNT(*) FROM gover_pnu WHERE gover_pnu.gp_gover_no = gm.gm_gover_no) AS pnu_count  <!-- 필지수 계산 -->
	        FROM gover_master gm
	        LEFT JOIN GOVER_PNU gp ON gm.gm_gover_no = gp.gp_gover_no
	        LEFT JOIN GOVER_PERMIT gpm ON gm.gm_gover_no = gpm.gp_gover_no
	        WHERE 1 = 1
	        <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(jisa)" >
	        and gm.gm_jisa=#{jisa}
	        </if>
	        <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(pay_date_start)">
	            AND gpm.gp_pay_date &gt;= TO_DATE(#{pay_date_start}, 'YYYY-MM-DD')
	        </if>
	        <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(pay_date_end)">
	            AND gpm.gp_pay_date &lt;= TO_DATE(#{pay_date_end}, 'YYYY-MM-DD')
	        </if>
	        <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(orderCol)" >
	        ORDER BY ${orderCol} ${desc}
	        </if>
	    ) AS r
	    WHERE 1 = 1
	    <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(gover_no)" >
	        and r.gover_no=#{gover_no}
	    </if>
	    <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(use_purpos)" >
	        and r.use_purpos=#{use_purpos}
	    </if>
	    <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(pmt_office)" >
	        and r.pmt_office=#{pmt_office}
	    </if>
	    <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(adm_office)" >
	        and r.adm_office=#{adm_office}
	    </if>
	    <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(idx)" >
	        and r.idx like '%${idx}%'
	    </if>
	    <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(address)" >
	        and r.address like '%${address}%'
	    </if>
	    <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(right_overlap)" >
	        and (SELECT COUNT(o.address) AS overlap
	        FROM(
	            (
	            SELECT trim(concat(gm.gm_sido_nm,' ',gm.gm_sgg_nm,' ',gm.gm_ri_nm,' ',gm.gm_jibun)) as address
	            FROM gover_master gm 
	            LEFT JOIN GOVER_PNU gp ON gm.gm_gover_no = gp.gp_gover_no
	            where 1=1
	            )
	        ) as o  WHERE o.address = r.address GROUP BY o.address ) >1
	    </if>
	</select>
	
	
	<select id="selectGoverList03_3" parameterType="java.util.HashMap" resultType="java.util.HashMap">
	    SELECT *,
	           (row_number() OVER()) AS no,
	           r.pnu_count
	    FROM (
	        SELECT gm.gm_idx AS index,
	        	   gm.gm_gover_no AS idx,
	               gm.gm_yongdo AS yongdo,
	               0 AS gidx,
	               gm.gm_pipe_name AS pipename,
	               gm.gm_sun_gubun AS sun_gubun,
	               gm.gm_pipe_meter AS pipe_meter,
	               gm.gm_cancel_yn AS cancel_yn,
	               gm.gm_cancel_date AS cancel_date,
	               gm.gm_cancel_name AS cancel_name,
	               gm.gm_cancel_empcd AS cancel_empcd,
	               gm.gm_use_purpos AS use_purpos,
	               gm.gm_gover_st_date AS gover_st_date,
	               gm.gm_gover_ed_date AS gover_ed_date,
	               CONCAT(gm.gm_gover_st_date, ' ~ ', gm.gm_gover_ed_date) AS period,
	               gm.gm_pmt_status AS pmt_status,
	               gm.gm_dockey AS dockey,
	               gm.gm_pmt_office AS pmt_office,
	               gm.gm_adm_office AS adm_office,
	               gm.gm_office_depart AS office_depart,
	               gm.gm_office_charege AS office_charege,
	               gm.gm_office_contact AS office_contact,
	               gm.gm_office_mobile AS office_mobile,
	               gm.gm_gover_period AS gover_period,
	               gm.gm_pipe_meter2 AS pipe_meter2,
	               gm.gm_save_status AS save_status,
	               gm.gm_newregreason AS newregreason,
	               gm.gm_occunonpayreason AS occunonpayreason,
	               gm.gm_permpossyn AS permpossyn,
	               gm.gm_occuprepayyn AS occuprepayyn,
	               gm.gm_occuprepaydate AS occuprepaydate,
	               gm.gm_udate AS udate,
	               gm.gm_jisa AS jisa,
	               gm.gm_gover_no AS gover_no,
	               gm.gm_wdate AS wdate,
	               gp.gp_sido_nm AS sido_nm,
	               gp.gp_sgg_nm AS sgg_nm,
	               gp.gp_emd_nm AS emd_nm,
	               gp.gp_ri_nm AS ri_nm,
	               gp.gp_jibun AS jibun,
	               TRIM(CONCAT(gp.gp_sido_nm, ' ', gp.gp_sgg_nm, ' ', gp.gp_ri_nm, ' ', gp.gp_jibun)) AS address,
	               gp.gp_gover_length AS gover_length,
	               gp.gp_gover_area AS gover_area,
	               gp.gp_jimok_text AS jimok_text,
	               gpm.gp_pay_date AS pay_date,
	               gpm.gp_pay_money AS pay_money,
	               gpm.gp_echo_no AS echo_no,
	               (SELECT COUNT(*) FROM gover_pnu WHERE gover_pnu.gp_gover_no = gm.gm_gover_no) AS pnu_count  <!-- 필지수 계산 -->
	        FROM gover_master gm
	        LEFT JOIN GOVER_PNU gp ON gm.gm_gover_no = gp.gp_gover_no
	        LEFT JOIN GOVER_PERMIT gpm ON gm.gm_gover_no = gpm.gp_gover_no
	        WHERE 1 = 1
	        <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(jisa)" >
	        and gm.gm_jisa=#{jisa}
	        </if>
	        <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(pay_date_start)">
	            AND gpm.gp_pay_date &gt;= TO_DATE(#{pay_date_start}, 'YYYY-MM-DD')
	        </if>
	        <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(pay_date_end)">
	            AND gpm.gp_pay_date &lt;= TO_DATE(#{pay_date_end}, 'YYYY-MM-DD')
	        </if>
	        <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(orderCol)" >
	        ORDER BY ${orderCol} ${desc}
	        </if>
	    ) AS r
	    where 1=1
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(gover_no)" >
			and r.gover_no=#{gover_no}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(use_purpos)" >
			and r.use_purpos=#{use_purpos}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(pmt_office)" >
			and r.pmt_office=#{pmt_office}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(adm_office)" >
			and r.adm_office=#{adm_office}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(idx)" >
			and r.idx like '%${idx}%'
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(address)" >
			and r.address like '%${address}%'
		</if>
	    <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(cancel_yn)">
	        and r.cancel_yn = #{cancel_yn}
	    </if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(right_overlap)" >
			and (SELECT COUNT(o.address) AS overlap
			FROM(
				(
				SELECT trim(concat(gm.gm_sido_nm,' ',gm.gm_sgg_nm,' ',gm.gm_ri_nm,' ',gm.gm_jibun)) as address
				FROM gover_master gm 
				LEFT JOIN GOVER_PNU gp ON gm.gm_gover_no = gp.gp_gover_no
				where 1=1
				)
			) as o  WHERE o.address = r.address GROUP BY o.address ) >1
		</if>
		<if test="length>0">
			limit #{length} offset #{start}
		</if>
	</select>
	
	<select id="selectTotalCount03_3" parameterType="java.util.HashMap" resultType="Integer">
	    SELECT COUNT(*) as count
	    FROM (
	        SELECT gm.gm_idx AS index,
	        	   gm.gm_gover_no AS idx,
	               gm.gm_yongdo AS yongdo,
	               0 AS gidx,
	               gm.gm_pipe_name AS pipename,
	               gm.gm_sun_gubun AS sun_gubun,
	               gm.gm_pipe_meter AS pipe_meter,
	               gm.gm_cancel_yn AS cancel_yn,
	               gm.gm_cancel_date AS cancel_date,
	               gm.gm_cancel_name AS cancel_name,
	               gm.gm_cancel_empcd AS cancel_empcd,
	               gm.gm_use_purpos AS use_purpos,
	               gm.gm_gover_st_date AS gover_st_date,
	               gm.gm_gover_ed_date AS gover_ed_date,
	               CONCAT(gm.gm_gover_st_date, ' ~ ', gm.gm_gover_ed_date) AS period,
	               gm.gm_pmt_status AS pmt_status,
	               gm.gm_dockey AS dockey,
	               gm.gm_pmt_office AS pmt_office,
	               gm.gm_adm_office AS adm_office,
	               gm.gm_office_depart AS office_depart,
	               gm.gm_office_charege AS office_charege,
	               gm.gm_office_contact AS office_contact,
	               gm.gm_office_mobile AS office_mobile,
	               gm.gm_gover_period AS gover_period,
	               gm.gm_pipe_meter2 AS pipe_meter2,
	               gm.gm_save_status AS save_status,
	               gm.gm_newregreason AS newregreason,
	               gm.gm_occunonpayreason AS occunonpayreason,
	               gm.gm_permpossyn AS permpossyn,
	               gm.gm_occuprepayyn AS occuprepayyn,
	               gm.gm_occuprepaydate AS occuprepaydate,
	               gm.gm_udate AS udate,
	               gm.gm_jisa AS jisa,
	               gm.gm_gover_no AS gover_no,
	               gm.gm_wdate AS wdate,
	               gp.gp_sido_nm AS sido_nm,
	               gp.gp_sgg_nm AS sgg_nm,
	               gp.gp_emd_nm AS emd_nm,
	               gp.gp_ri_nm AS ri_nm,
	               gp.gp_jibun AS jibun,
	               TRIM(CONCAT(gp.gp_sido_nm, ' ', gp.gp_sgg_nm, ' ', gp.gp_ri_nm, ' ', gp.gp_jibun)) AS address,
	               gp.gp_gover_length AS gover_length,
	               gp.gp_gover_area AS gover_area,
	               gp.gp_jimok_text AS jimok_text,
	               gpm.gp_pay_date AS pay_date,
	               gpm.gp_pay_money AS pay_money,
	               gpm.gp_echo_no AS echo_no,
	               (SELECT COUNT(*) FROM gover_pnu WHERE gover_pnu.gp_gover_no = gm.gm_gover_no) AS pnu_count  <!-- 필지수 계산 -->
	        FROM gover_master gm
	        LEFT JOIN GOVER_PNU gp ON gm.gm_gover_no = gp.gp_gover_no
	        LEFT JOIN GOVER_PERMIT gpm ON gm.gm_gover_no = gpm.gp_gover_no
	        WHERE 1 = 1
	        <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(jisa)" >
	        and gm.gm_jisa=#{jisa}
	        </if>
	        <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(pay_date_start)">
	            AND gpm.gp_pay_date &gt;= TO_DATE(#{pay_date_start}, 'YYYY-MM-DD')
	        </if>
	        <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(pay_date_end)">
	            AND gpm.gp_pay_date &lt;= TO_DATE(#{pay_date_end}, 'YYYY-MM-DD')
	        </if>
	        <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(orderCol)" >
	        ORDER BY ${orderCol} ${desc}
	        </if>
	    ) AS r
	    WHERE 1 = 1
	    <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(gover_no)" >
	        and r.gover_no=#{gover_no}
	    </if>
	    <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(use_purpos)" >
	        and r.use_purpos=#{use_purpos}
	    </if>
	    <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(pmt_office)" >
	        and r.pmt_office=#{pmt_office}
	    </if>
	    <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(adm_office)" >
	        and r.adm_office=#{adm_office}
	    </if>
	    <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(idx)" >
	        and r.idx like '%${idx}%'
	    </if>
	    <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(address)" >
	        and r.address like '%${address}%'
	    </if>
	    <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(cancel_yn)">
	        and r.cancel_yn = #{cancel_yn}
	    </if>
	    <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(right_overlap)" >
	        and (SELECT COUNT(o.address) AS overlap
	        FROM(
	            (
	            SELECT trim(concat(gm.gm_sido_nm,' ',gm.gm_sgg_nm,' ',gm.gm_ri_nm,' ',gm.gm_jibun)) as address
	            FROM gover_master gm 
	            LEFT JOIN GOVER_PNU gp ON gm.gm_gover_no = gp.gp_gover_no
	            where 1=1
	            )
	        ) as o  WHERE o.address = r.address GROUP BY o.address ) >1
	    </if>
	</select>
	
	<select id="selectRepFlagPnu" parameterType="java.util.HashMap" resultType="java.util.HashMap">
	    SELECT 
	        gp_gover_own_yn AS gover_own_yn,
	        gp_pipe_overlap_yn AS pipe_overlap_yn,
	        gp_sido_nm AS sido_nm,
	        gp_sgg_nm AS sgg_nm,
	        gp_emd_nm AS emd_nm,
	        gp_ri_nm AS ri_nm,
	        gp_jibun AS jibun,
	        gp_jimok_text AS jimok_text,
	        gp_jijuk_area AS jijuk_area,
	        gp_dosiplan AS dosiplan
	    FROM gover_pnu
	    WHERE gp_gover_no = #{idx}
	    AND gp_rep_flag = 'Y'
	</select>
	
	<!-- 지사에 따른 허가관청 목록 조회 -->
	<select id="selectPmtOfficesByJisa" parameterType="String" resultType="java.util.HashMap">
	    SELECT so_pmt_office, so_sort_order
	    FROM (
	        SELECT so_pmt_office, so_sort_order, ROW_NUMBER() OVER (PARTITION BY so_pmt_office ORDER BY so_sort_order) as rn
	        FROM sys_officemng
	        WHERE so_jisa = #{jisa}
	        AND so_approve = 'Y'
	    ) AS temp
	    WHERE rn = 1
	    ORDER BY so_sort_order
	</select>

	<!-- 지사와 허가관청에 따른 관리기관 목록 조회 -->
	<select id="selectAdmOfficesByJisaAndPmtOffice" parameterType="java.util.Map" resultType="java.util.HashMap">
	    SELECT DISTINCT so_adm_office, so_sort_order
	    FROM sys_officemng
	    WHERE so_jisa = #{jisa}
	    AND so_pmt_office = #{pmt_office}
	    AND so_approve = 'Y'
	    ORDER BY so_sort_order ASC
	</select>
	
	<!-- 지사에 따른 관로명 목록 조회 -->
	<select id="selectPipeNameByJisa" parameterType="java.util.HashMap" resultType="java.util.HashMap">
	    SELECT jzn_zone_name
	    FROM jisa_zone_name
	    WHERE jzn_jisa = #{jisa}
	    ORDER BY jzn_idx ASC
	</select>

	<select id="selectGoverPnuList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT * ,(row_number() OVER()) AS no
		 from
		 (
		 SELECT GP.gp_SEQ AS SEQ
		, GP.gp_addrcode AS ADDRCODE
		, GP.gp_dosiplan AS DOSIPLAN
		, GP.gp_echo_no AS ECHO_NO
		, GP.gp_emd_nm AS EMD_NM
		, GP.gp_gover_no AS GOVER_NO
		, GP.gp_gover_own_yn AS GOVER_OWN_YN
		, GP.gp_jibun AS JIBUN
		, GP.gp_jibun_full AS JIBUN_FULL
		, GP.gp_jijuk_area AS JIJUK_AREA
		, GP.gp_jimok_text AS JIMOK_TEXT
		, GP.gp_pnu AS PNU
		, GP.gp_ri_nm AS RI_NM
		, GP.gp_sgg_nm AS SGG_NM
		, GP.gp_sido_nm AS SIDO_NM
		, GP.gp_gover_length AS GOVER_LENGTH
		,GP.gp_gover_area AS GOVER_AREA
		, GP.gp_adm_office AS ADM_OFFICE
		, GP.gp_use_purpos AS USE_PURPOS
		, GP.gp_rep_flag AS REP_FLAG
		, COALESCE(JKM.pipe_overlap_yn, GP.gp_pipe_overlap_yn) AS PIPE_OVERLAP_YN
		, JKM.jisang_status AS JISANG_STATUS
		, CASE 
		    WHEN JKM.jisa IS NOT NULL  THEN JKM.jisa 
		    ELSE GM.gm_jisa 
		 END AS JISA
		,JKM.x as x
		,jKM.y as Y
		FROM GOVER_PNU GP
                LEFT JOIN JIJUK_2024 JKM ON trim(GP.gp_pnu) = JKM.PNU
                LEFT JOIN GOVER_MASTER  GM ON GM.gm_gover_no = GP.gp_gover_no
		WHERE 1=1
		and GP.gp_gover_no =#{GOVER_NO}
		ORDER BY GP.gp_rep_flag DESC, GP.gp_seq ASC
		) T
	</select>
	<select id="selectNextGoverNo" resultType="Integer" parameterType="HashMap">
		
		SELECT NEXTVAL('gover_permit_seq')
	</select>
	
	<insert id="insertGoverPmt" parameterType="HashMap">
		Insert into GOVER_PERMIT
		( gp_GOVER_NO, gp_PMT_NO, gp_PMT_NAME, gp_SISEOLNAME, gp_PMT_OFFICE, gp_ADM_OFFICE, gp_PMT_ST_DATE, gp_PMT_ED_DATE
		, gp_NEXT_DATE, gp_BUSEO, gp_NM, gp_PHONE_NUMBER, gp_PAY_WAY, gp_PAY_DATE, gp_PAY_MONEY, gp_UPDATE_DATE
		, gp_SEQ, gp_PMT_FIRST_DATE, gp_DOSIPLAN, gp_GOVER_LENGTH, gp_GOVER_AREA, gp_PAY_VAT )
		Values
		( #{GOVER_NO}, #{PMT_NO}, #{PMT_NAME}, #{SISEOLNAME}, #{PMT_OFFICE}, #{ADM_OFFICE}, to_date(#{PMT_ST_DATE}, 'yyyy-mm-dd'), to_date(#{PMT_ED_DATE},'yyyy-mm-dd'), to_date(#{NEXT_DATE}, 'yyyy-mm-dd')
		, #{BUSEO}, #{NM}, #{PHONE_NUMBER}, #{PAY_WAY}, TO_DATE(#{PAY_DATE}, 'yyyy-mm-dd'), #{PAY_MONEY}, CURRENT_TIMESTAMP, #{NEXTSEQ}, TO_DATE(#{PMT_FIRST_DATE}, 'yyyy-mm-dd'), #{DOSIPLAN}
		,nullif(#{PMT_GOVER_LENGTH},'')::numeric
		,nullif(#{PMT_GOVER_AREA},'')::numeric, #{PAY_VAT} )
	</insert>
	<select id="selectGoverPnuLogSeq" parameterType="HashMap" resultType="String">
		SELECT COALESCE(MAX(LOG_SEQ), 0) + 1 AS LOG_SEQ
FROM GOVER_PNU_LOG
WHERE GOVER_NO = #{GOVER_NO}
  AND PMT_SEQ = #{PMT_SEQ};

	</select>
	
	<insert id="insertGoverPnu" parameterType="HashMap">
INSERT
     INTO GOVER_PNU (
           gp_SEQ
           , gp_GOVER_NO
           , gp_PNU
           , gp_ADDRCODE
           , gp_SIDO_NM
           , gp_SGG_NM
           , gp_EMD_NM
           , gp_RI_NM
           , gp_JIBUN
           , gp_JIBUN_FULL
           , gp_GOVER_OWN_YN
           , gp_JIJUK_AREA
           , gp_JIMOK_TEXT
           , gp_GOVER_LENGTH
           , gp_GOVER_AREA
           , gp_ADM_OFFICE
           , gp_USE_PURPOS
           , gp_REP_FLAG
           , gp_PIPE_OVERLAP_YN
        )
VALUES
	( nextval('gover_pnu_seq')
        , #{GOVER_NO}
        , #{IN_PNU}
        , #{ADDRCODE}
        , #{SIDO_NM}
        , #{SGG_NM}
        , #{EMD_NM}
		, #{RI_NM}
		, #{JIBUN}
		, #{JIBUN_FULL}
		, #{GOVEROWNYN}
		, nullif(#{JIJUK_AREA},'')::numeric
		, #{JIMOK_TEXT}
		, #{GOVER_LENGTH}::numeric
		, #{GOVER_AREA}::numeric
		, #{ADM_OFFICE}
		, #{USE_PURPOS}
		, #{REP_FLAG}
		, #{PIPEYN}
    )
	</insert>
	<update id="updaeGoverPnu" parameterType="HashMap">
UPDATE GOVER_PNU
SET gp_PNU = #{IN_PNU}
    , gp_ADDRCODE = #{ADDRCODE}
    , gp_SIDO_NM = #{SIDO_NM}
    , gp_SGG_NM = #{SGG_NM}
    , gp_EMD_NM = #{EMD_NM}
    , gp_RI_NM = #{RI_NM}
    , gp_JIBUN = #{JIBUN}
    , gp_JIBUN_FULL = #{JIBUN_FULL}
    , gp_GOVER_OWN_YN = #{GOVEROWNYN}
    , gp_JIJUK_AREA = nullif(#{JIJUK_AREA},'')::numeric
    , gp_JIMOK_TEXT = #{JIMOK_TEXT}
    , gp_GOVER_LENGTH = #{GOVER_LENGTH}::numeric
    , gp_GOVER_AREA = #{GOVER_AREA}::numeric
    , gp_ADM_OFFICE = #{ADM_OFFICE}
    , gp_USE_PURPOS = #{USE_PURPOS}
    , gp_REP_FLAG = #{REP_FLAG}
    , gp_PIPE_OVERLAP_YN = #{PIPEYN}
WHERE gp_GOVER_NO = #{GOVER_NO}

	</update>
	
	
	<insert id="insertGoverPnuLog" parameterType="HashMap">
		INSERT INTO GOVER_PNU_LOG (
		GOVER_NO
		, PMT_SEQ
		, LOG_SEQ
		, PAY_YR
		, PNU
		, ADDRCODE
		, ECHO_NO
		, SIDO_NM
		, SGG_NM
		, EMD_NM
		, RI_NM
		, JIBUN
		, JIBUN_FULL
		, JIJUK_AREA
		, JIMOK_TEXT
		, DOSIPLAN
		, GOVER_OWN_YN
		, GOVER_LENGTH
		, GOVER_AREA
		, ADM_OFFICE
		, USE_PURPOS
		) VALUES (
		#{GOVER_NO}
		, #{PMT_SEQ}
		, #{LOG_SEQ}::numeric
		, #{PAY_YR}
		, #{PNU}
		, #{ADDRCODE}
		, #{ECHO_NO}
		, #{SIDO_NM}
		, #{SGG_NM}
		, #{EMD_NM}
		, #{RI_NM}
		, #{JIBUN}
		, #{JIBUN_FULL}
		, #{JIJUK_AREA}
		, #{JIMOK_TEXT}
		, #{DOSIPLAN}
		, #{GOVER_OWN_YN}
		, #{GOVER_LENGTH}
		, #{GOVER_AREA}
		, #{ADM_OFFICE}
		, #{USE_PURPOS}
		)
	</insert>
	
	
	
	<select id="selectGoverPmtLastForApproval" resultType="Integer" parameterType="HashMap">
		SELECT GP.gp_buseo as BUSEO
		, GP.gp_dosiplan as DOSIPLAN
		, GP.gp_echo_no as ECHO_NO
		, GP.gp_GOVER_AREA AS GOVER_AREA
		, GP.gp_GOVER_LENGTH AS GOVER_LENGTH
		, GP.gp_gover_no as GOVER_NO
		, TO_CHAR(GP.gp_NEXT_DATE, 'YYYY-MM-DD') AS NEXT_DATE
		, GP.gp_nm as NM
		, TO_CHAR(GP.gp_PAY_DATE, 'YYYY-MM-DD') AS PAY_DATE
		, GP.gp_pay_money as PAY_MONEY
		, GP.gp_pay_way as PAY_WAY
		, GP.gp_phone_number as PHONE_NUMBER
		, TO_CHAR(GP.gp_PMT_ED_DATE, 'YYYY-MM-DD') AS PMT_ED_DATE
		, TO_CHAR(GP.gp_PMT_FIRST_DATE, 'YYYY-MM-DD') AS PMT_FIRST_DATE
		, GP.gp_pmt_name as PMT_NAME
		, GP.gp_pmt_no as PMT_NO
		, GP.gp_pmt_office as PMT_OFFICE
		, GP.gp_adm_office as ADM_OFFICE
		, TO_CHAR(GP.gp_PMT_ST_DATE, 'YYYY-MM-DD') AS PMT_ST_DATE
		, GP.gp_SEQ AS SEQ
		, GP.gp_SISEOLNAME AS SISEOLNAME
		, TO_CHAR(GP.gp_UPDATE_DATE, 'YYYY-MM-DD') AS UPDATE_DATE
		, PA.pa_STATUS
		, PA.pa_OUT_FLAG
		, PA.pa_OUT_URL
		, GP.gp_DOCKEY
		, ( SELECT S.gm_GOVER_PERIOD
		FROM gover_master S
		WHERE S.gm_GOVER_NO = GP.gp_GOVER_NO) AS GOVER_PERIOD
		, GP.gp_PAY_VAT
		FROM GOVER_PERMIT GP
		LEFT JOIN PLMS_APPROVAL PA ON GP.gp_DOCKEY = PA.pa_DOCKEY
		WHERE GP.gp_GOVER_NO = #{GOVERNO}
		AND GP.gp_SEQ = (SELECT MAX(S.gp_SEQ) FROM GOVER_PERMIT S WHERE S.gp_GOVER_NO =#{GOVERNO} )
		ORDER BY GP.gp_SEQ DESC
	</select>
	<select id="selectGoverRowDetail_FilesObject" resultType="HashMap" parameterType="HashMap">
		SELECT *
		FROM GOVER_ATCFILE
		WHERE ga_GOVER_NO = #{FILENO}
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(FILE_SEQ)" >
		
			AND ga_FILE_SEQ = #{FILE_SEQ}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(PMTNO)" >
		
			AND ga_PMT_NO = #{PMTNO}
		</if>
		ORDER BY ga_SEQ DESC
                , ga_FILE_PATH DESC
	</select>
	
	<update id="updateGoverEchoNo" parameterType="HashMap">
		UPDATE gover_permit SET
		gp_DOCKEY = #{DOCKEY}
		WHERE gp_GOVER_NO = #{GOVER_NO}
	</update>
	
	
	<select id="selectGoverPayList" resultType="HashMap" parameterType="HashMap">
SELECT 
    TO_CHAR(GP.gp_PAY_DATE, 'YYYY') AS PAY_YR,
    GP.gp_seq AS SEQ,  -- SEQ는 숫자라서 TO_CHAR 생략 가능
    TO_CHAR(GP.gp_PAY_DATE, 'YYYY-MM-DD') AS PAY_DATE,
    GP.gp_pay_money as PAY_MONEY,
    TO_CHAR(GP.gp_PMT_ST_DATE, 'YYYY-MM-DD') AS PMT_ST_DATE,
    TO_CHAR(GP.gp_PMT_ED_DATE, 'YYYY-MM-DD') AS PMT_ED_DATE,
    GP.gp_pmt_no as PMT_NO,
    PA.pa_status as STATUS,
    PA.pa_out_flag as OUT_FLAG,
    PA.pa_deptcd as DEPTCD,
    PA.pa_updeptcd as UPDEPTCD,
    PA.pa_out_url as OUT_URL,
    GP.gp_dockey as DOCKEY,
    GP.gp_buseo as BUSEO,
    GP.gp_dosiplan as DOSIPLAN,
    GP.gp_echo_no as ECHO_NO,
    TO_CHAR(GP.gp_GOVER_AREA, 'FM999999999.00') AS GOVER_AREA,  -- 숫자 포맷 처리
    TO_CHAR(GP.gp_GOVER_LENGTH, 'FM999999999.00') AS GOVER_LENGTH,  -- 숫자 포맷 처리
    GP.gp_gover_no as GOVER_NO,
    TO_CHAR(GP.gp_NEXT_DATE, 'YYYY-MM-DD') AS NEXT_DATE,
    GP.gp_nm as NM,
    GP.gp_pay_way as PAY_WAY,
    GP.gp_phone_number as PHONE_NUMBER,
    TO_CHAR(GP.gp_PMT_FIRST_DATE, 'YYYY-MM-DD') AS PMT_FIRST_DATE,
    GP.gp_pmt_name as PMT_NAME,
    GP.gp_pmt_office as PMT_OFFICE,
    GP.gp_adm_office as ADM_OFFICE,
    GP.gp_siseolname as SISEOLNAME,
    TO_CHAR(GP.gp_UPDATE_DATE, 'YYYY-MM-DD') AS UPDATE_DATE
FROM 
    GOVER_PERMIT GP
LEFT JOIN 
    PLMS_APPROVAL PA ON GP.gp_DOCKEY = PA.pa_DOCKEY
WHERE 
    GP.gp_gover_no = #{GOVER_NO}
    AND GP.gp_PAY_DATE IS NOT NULL
    AND (PA.pa_STATUS IS NOT NULL AND PA.pa_STATUS NOT IN ('X'))
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(SEQ)" >
		
			AND GP.gp_SEQ = #{SEQ}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(PMTNO)" >
		
			AND GP.gp_SEQ = #{PMTNO}
		</if>
		ORDER BY GP.gp_GOVER_NO ASC
		, GP.gp_SEQ DESC
	</select>
	
		<update id="updateJijukMasterStatus_Gover" parameterType="HashMap">
		UPDATE JIJUK_2024 SET
		JISANG_STATUS = 'N'
		<!-- , ERP_NO = '' -->
		, JISANG_NO = ''
		, DOSIPLAN = ''
		, GOVER_OWN_YN = 'N'
		, JISA = ''
		WHERE PNU = #{STR_PNU}
	</update>
	
		<select id="selectNotsetNextNo"  resultType="HashMap" parameterType="HashMap">
		SELECT COALESCE(MAX(CAST(SUBSTRING(nm_NOTSET_NO, 3) AS NUMERIC)), 0) AS NOW_NOTSETNO 
FROM NOTSET_MASTER

	</select>
	<update id="insertGoverTerminationAdd" parameterType="HashMap">
		UPDATE GOVER_MASTER
		SET
		gm_CANCEL_YN = 'Y'
		,gm_CANCEL_DATE = TO_DATE(#{CANCLEDATE},'yyyy-mm-dd')
		,gm_CANCEL_NAME = #{USERNAME}
		,gm_CANCEL_EMPCD = nullif(#{EMPCD},'')
		WHERE gm_GOVER_NO = #{GOVERNO}

	</update>
	
	<insert id="insertGoverModifyHistory" parameterType="HashMap">
		Insert into GOVER_MODIFY
		( gm_GOVER_NO, gm_MODIFY_DATE, gm_GUBUN, gm_CONT, gm_USER_NAME, gm_USER_ID)
		Values
		(#{GOVER_NO}, CURRENT_TIMESTAMP, #{GUBUN}, #{CONT}, #{USER_NAME}, #{USER_ID})
	</insert>
	
	<insert id="insertGoverMaster" parameterType="HashMap">
		Insert into GOVER_MASTER
		( 
		gm_GOVER_NO
		, gm_JISA
		, gm_YONGDO
		, gm_PIPE_NAME
		, gm_SUN_GUBUN
		, gm_PIPE_METER
		, gm_GOVER_ST_DATE
		, gm_GOVER_ED_DATE
		, gm_PMT_STATUS
		, gm_OFFICE_DEPART
		, gm_OFFICE_CHAREGE
		, gm_OFFICE_CONTACT
		, gm_OFFICE_MOBILE
		, gm_GOVER_PERIOD
		, gm_PMT_OFFICE
		, gm_ADM_OFFICE
		, gm_SAVE_STATUS
		, gm_PIPE_METER2 
		)
		Values
		( 
		#{GOVER_NO}
		, #{JISA}
		, #{YONGDO}
		, #{PIPE_NAME}
		, #{SUN_GUBUN}
		, nullif(#{PIPE_METER},'')::numeric
		, to_date(#{GOVER_ST_DATE}, 'yyyy-mm-dd')
		, to_date(#{GOVER_ED_DATE}, 'yyyy-mm-dd')
		, #{PMT_STATUS}
		, #{OFFICE_DEPART}
		, #{OFFICE_CHARGE}
		, #{OFFICE_CONTACT}
		, #{OFFICE_MOBILE}
		, #{GOVER_PERIOD}
		, #{PMT_OFFICE}
		, #{ADM_OFFICE}
		, #{SAVE_STATUS}
		, nullif(#{PIPE_METER2},'')::numeric
		 )
	</insert>
	<update id="updateGoverMaster" parameterType="HashMap">
		UPDATE GOVER_MASTER
		SET
		gm_JISA = #{JISA}
		, gm_YONGDO = #{YONGDO}
		, gm_pipe_name = #{PIPE_NAME}
		, gm_SUN_GUBUN = #{SUN_GUBUN}
		, gm_PIPE_METER = nullif(#{PIPE_METER},'')::numeric
		, gm_PIPE_METER2 = nullif(#{PIPE_METER2},'')::numeric
		, gm_GOVER_ST_DATE = to_date(#{GOVER_ST_DATE}, 'yyyy-mm-dd')
		, gm_GOVER_ED_DATE = to_date(#{GOVER_ED_DATE}, 'yyyy-mm-dd')
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(PMT_OFFICE)" >
			, gm_PMT_OFFICE = #{PMT_OFFICE}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(ADM_OFFICE)" >
			, gm_ADM_OFFICE = #{ADM_OFFICE}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(OFFICE_DEPART)" >
			, gm_OFFICE_DEPART = #{OFFICE_DEPART}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(OFFICE_CHARGE)" >
			, gm_office_charege = #{OFFICE_CHARGE}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(OFFICE_CONTACT)" >
			, gm_OFFICE_CONTACT = #{OFFICE_CONTACT}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(OFFICE_MOBILE)" >
			, gm_OFFICE_MOBILE = #{OFFICE_MOBILE}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(GOVER_PERIOD)" >
			, gm_GOVER_PERIOD = #{GOVER_PERIOD}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(NEWREGREASON)" >
			, gm_NEWREGREASON = #{NEWREGREASON}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(OCCUNONPAYREASON)" >
			, gm_OCCUNONPAYREASON = #{OCCUNONPAYREASON}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(PERMPOSSYN)" >
			, gm_PERMPOSSYN = #{PERMPOSSYN}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(OCCUPREPAYYN)" >
			, gm_OCCUPREPAYYN = #{OCCUPREPAYYN}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(OCCUPREPAYDATE)" >
			, gm_OCCUPREPAYDATE = #{OCCUPREPAYDATE}
		</if>
		, gm_SAVE_STATUS = #{SAVE_STATUS}
		
		
		
		WHERE gm_GOVER_NO = #{GOVER_NO}

	</update>
	
	<delete id="deleteGoverPNU" parameterType="HashMap">
		DELETE FROM GOVER_PNU
		WHERE gp_GOVER_NO =#{GOVER_NO}
	</delete>
<select id="selectTogiData"  resultType="HashMap" parameterType="HashMap">
           
            SELECT PNU, SIDO_NM, SGG_NM, EMD_NM, RI_NM, JIBUN, JIMOK_TEXT, GOVER_OWN_YN, JISANG_STATUS, ERP_NO, JISANG_NO
            FROM JIJUK_2024
			WHERE PNU = #{PNU}
			ORDER BY PNU ASC
			
	</select>
	<select id="selectGoverRowDetailFilesObject" resultType="HashMap" parameterType="HashMap">
		SELECT *
		FROM GOVER_ATCFILE
		WHERE 
		ga_SEQ = #{FILESEQ}
		ORDER BY ga_SEQ DESC
                , ga_FILE_PATH DESC
	</select>
	<update id="updateSeqFile_Gover" parameterType="HashMap">
		UPDATE GOVER_ATCFILE SET
		ga_GOVER_NO = #{GOVER_NO}
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(ADD_PMT_NO)" >
			, ga_PMT_NO = #{ADD_PMT_NO}
		</if>
		WHERE ga_FILE_SEQ = #{FILESEQ}
	</update>

	<update id="updateSeqFile_Gover_SEQ" parameterType="HashMap">
		UPDATE GOVER_ATCFILE SET
		ga_GOVER_NO = #{GOVER_NO}
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(ADD_PMT_NO)" >
			, ga_PMT_NO = #{ADD_PMT_NO}
		</if>
		WHERE ga_SEQ = #{FILESEQ}
	</update>
	
		<delete id="deleteGoverFile" parameterType="HashMap">
		DELETE FROM GOVER_ATCFILE
		WHERE ga_GOVER_NO =#{GOVER_NO}
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(SEQ)" >
			AND ga_FILE_SEQ =#{SEQ}
		</if>
	</delete>
	<delete id="deleteGoverPNUObject" parameterType="HashMap">
		DELETE FROM GOVER_PNU
		WHERE gp_GOVER_NO = #{GOVER_NO}
		AND gp_PNU = #{PNU}
	</delete>
	
	
	<update id="updateGoverMasterStatus" parameterType="HashMap">
		UPDATE GOVER_MASTER
		SET gm_SAVE_STATUS = #{SAVE_STATUS}
		WHERE gm_GOVER_NO = #{GOVER_NO}
	</update>
	
	<select id="selectTogiMgtGoverSearch" resultType="HashMap" parameterType="HashMap">
	SELECT JOIN_MST.JISANG_STATUS,
       COUNT(*) AS CNT
FROM (
    SELECT JM.jm_JISANG_NO AS MASTER_NO,
           'JISANG' AS JISANG_STATUS,
           JM.jm_jisa as JISA,
           JM.jm_sido_nm as SIDO_NM,
           JM.jm_sgg_nm as SGG_NM,
           JM.jm_emd_nm as EMD_NM,
           JM.jm_ri_nm as RI_NM,
           JM.jm_jibun as JIBUN,
           JM.jm_pnu as PNU,
           JM.jm_addrcode as ADDRCODE,
           JM.jm_jasan_no as JASAN_NO,
           TO_CHAR(JM.jm_CHUIDEUK_DATE, 'YYYY-MM-DD') AS CHUIDEUK_DATE,
           JM.jm_chuideuk_money as CHUIDEUK_MONEY,
           JM.jm_jasan_money as JASAN_MONEY,
           NULL AS PMT_NO,
           NULL AS PAY_MONEY,
           NULL AS PAY_DATE,
           NULL AS PMT_ST_DATE,
           NULL AS PMT_ED_DATE,
           NULL AS GOVER_LENGTH,
           NULL AS GOVER_AREA,
           NULL AS PIPE_METER,
           NULL AS PIPE_METER2,
           JS.js_souja_name as SOUJA_NAME,
           (SELECT COUNT(js_JISANG_NO) - 1
            FROM JISANG_SOUJA
            WHERE js_JISANG_NO = JM.jm_JISANG_NO) AS SOUJA_CNT,
           JM.jm_gover_own_yn as GOVER_OWN_YN,
           COALESCE(JM.jm_COMPLE_YN, 'N') AS COMPLE_YN
    FROM JISANG_MASTER JM
    LEFT JOIN (
        SELECT *
        FROM (
            SELECT js_JISANG_NO,
                   js_SOUJA_NAME,
                   ROW_NUMBER() OVER (PARTITION BY js_JISANG_NO ORDER BY js_JISANG_NO ASC) AS ROW_IDX
            FROM JISANG_SOUJA
            GROUP BY js_JISANG_NO, js_SOUJA_NAME
        ) AS js_inner
        WHERE ROW_IDX = 1
    ) JS ON JM.jm_JISANG_NO = JS.js_JISANG_NO
    WHERE (JM.jm_CANCEL_YN IS NULL OR JM.jm_CANCEL_YN != 'Y')

    UNION ALL

    SELECT GP.gp_GOVER_NO AS MASTER_NO,
           'GOVER' AS JISANG_STATUS,
           (SELECT S.gm_jisa as JISA
            FROM GOVER_MASTER S
            WHERE S.gm_GOVER_NO = GP.gp_GOVER_NO) AS JISA,
           GP.gp_sido_nm as SIDO_NM,
           GP.gp_sgg_nm as SGG_NM,
           GP.gp_emd_nm as EMD_NM,
           GP.gp_ri_nm as RI_NM,
           GP.gp_jibun as JIBUN,
           GP.gp_pnu as PNU,
           GP.gp_addrcode as ADDRCODE,
           NULL AS JASAN_NO,
           NULL AS CHUIDEUK_DATE,
           NULL AS CHUIDEUK_MONEY,
           NULL AS JASAN_MONEY,
           GPE.PMT_NO,
           GPE.PAY_MONEY,
           TO_CHAR(GPE.PAY_DATE, 'YYYY-MM-DD') AS PAY_DATE,
           TO_CHAR(GM.gm_GOVER_ST_DATE, 'YYYY-MM-DD') AS PMT_ST_DATE,
           TO_CHAR(GM.gm_GOVER_ED_DATE, 'YYYY-MM-DD') AS PMT_ED_DATE,
           GP.gp_gover_length as GOVER_LENGTH,
           GP.gp_gover_area as GOVER_AREA,
           (SELECT S.gm_pipe_meter as PIPE_METER
            FROM GOVER_MASTER S
            WHERE S.gm_GOVER_NO = GP.gp_GOVER_NO) AS PIPE_METER,
           (SELECT S.gm_PIPE_METER2
            FROM GOVER_MASTER S
            WHERE S.gm_GOVER_NO = GP.gp_GOVER_NO) AS PIPE_METER2,
           NULL AS SOUJA_NAME,
           0 AS SOUJA_CNT,
           GP.gp_gover_own_yn as GOVER_OWN_YN,
           'N' AS COMPLE_YN
    FROM GOVER_PNU GP
    LEFT JOIN (
        SELECT S.gp_gover_no as GOVER_NO,
               S.gp_pay_money as PAY_MONEY,
               S.gp_pay_vat as PAY_VAT,
               S.gp_pay_date as PAY_DATE,
               S.gp_pay_way as PAY_WAY,
               S.gp_pmt_no as PMT_NO,
               S.gp_pmt_st_date as PMT_ST_DATE,
               S.gp_pmt_ed_date as PMT_ED_DATE
        FROM GOVER_PERMIT S
        INNER JOIN (
            SELECT MAX(SS.gp_SEQ) AS SEQ,
                   SS.gp_gover_no as GOVER_NO
            FROM GOVER_PERMIT SS
            WHERE SS.gp_PMT_NO IS NOT NULL
            AND SS.gp_DOCKEY IN (
                SELECT SSS.pa_dockey as DOCKEY
                FROM PLMS_APPROVAL SSS
                WHERE SSS.pa_STATUS IS NOT NULL
                AND SSS.pa_STATUS != 'X'
            )
            GROUP BY SS.gp_GOVER_NO
        ) SS ON S.gp_SEQ = SS.SEQ
        AND S.gp_GOVER_NO = SS.GOVER_NO
    ) GPE ON GP.gp_GOVER_NO = GPE.GOVER_NO
    LEFT JOIN GOVER_MASTER GM ON GP.gp_GOVER_NO = GM.gm_GOVER_NO
    WHERE GM.gm_SAVE_STATUS = 'A'
    AND GM.gm_CANCEL_YN IS NULL

    UNION ALL

    SELECT NM.nm_NOTSET_NO AS MASTER_NO,
           'NOTSET' AS JISANG_STATUS,
           NM.nm_jisa as JISA,
           NM.nm_sido_nm as SIDO_NM,
           NM.nm_sgg_nm as SGG_NM,
           NM.nm_emd_nm as EMD_NM,
           NM.nm_ri_nm as RI_NM,
           NM.nm_jibun as JIBUN,
           NM.nm_pnu as PNU,
           NM.nm_addrcode as ADDRCODE,
           NULL AS JASAN_NO,
           NULL AS CHUIDEUK_DATE,
           NULL AS CHUIDEUK_MONEY,
           NULL AS JASAN_MONEY,
           NULL AS PMT_NO,
           NULL AS PAY_MONEY,
           NULL AS PAY_DATE,
           NULL AS PMT_ST_DATE,
           NULL AS PMT_ED_DATE,
           NULL AS GOVER_LENGTH,
           NULL AS GOVER_AREA,
           NULL AS PIPE_METER,
           NULL AS PIPE_METER2,
           NS.ns_souja_name as SOUJA_NAME,
           (SELECT COUNT(ns_NOTSET_NO) - 1
            FROM NOTSET_SOUJA
            WHERE ns_NOTSET_NO = NM.nm_NOTSET_NO) AS SOUJA_CNT,
           NM.nm_gover_own_yn as GOVER_OWN_YN,
           'N' AS COMPLE_YN
    FROM NOTSET_MASTER NM
    LEFT JOIN (
        SELECT *
        FROM (
            SELECT ns_NOTSET_NO,
                   ns_SOUJA_NAME,
                   ROW_NUMBER() OVER (PARTITION BY ns_NOTSET_NO ORDER BY ns_NOTSET_NO ASC) AS ROW_IDX
            FROM NOTSET_SOUJA
            GROUP BY ns_NOTSET_NO, ns_SOUJA_NAME
        ) AS ns_inner
        WHERE ROW_IDX = 1
    ) NS ON NM.nm_NOTSET_NO = NS.ns_NOTSET_NO
    WHERE NM.nm_DEL_FLAG = 'N'
) JOIN_MST
WHERE COALESCE(JOIN_MST.GOVER_OWN_YN, 'N') = 'Y'
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(JISA)" >
			AND JOIN_MST.${KIJUN} = #{JISA}
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(ADDRCODE)" >
			AND SUBSTR( JOIN_MST.PNU, 0, 5) like '${ADDRCODE}%'
		</if>
		GROUP BY JOIN_MST.JISANG_STATUS
	</select>
	
	
	<select id="selectMaxOfficeMng" resultType="HashMap" parameterType="HashMap">
		SELECT MAX(T.so_ADM_SEQ)+1 AS MX_ADM_SEQ FROM SYS_OFFICEMNG T
	</select>

	<insert id="insertOfficeMng" parameterType="HashMap">
	    INSERT INTO SYS_OFFICEMNG (
	        so_ADM_SEQ
	        , so_JISA
	        , so_PMT_OFFICE
	        , so_ADM_OFFICE
	        , so_SORT_ORDER
	        , so_approve
	    ) VALUES (
	        #{ADM_SEQ, jdbcType=BIGINT}
	        , #{JISA}
	        , #{PMT_OFFICE}
	        , #{ADM_OFFICE}
	        , #{ADM_SEQ, jdbcType=BIGINT}
	        , #{APPROVE}
	    )
	</insert>
	
	<select id="selectOfficeInfoAll" resultType="HashMap" parameterType="HashMap">
		SELECT TT.*,(row_number() over()) as NO
		FROM (	
			SELECT 
			T.so_idx as idx,
			T.so_adm_seq as ADM_SEQ, 
			T.so_jisa as JISA, 
			T.so_pmt_office as PMT_OFFICE, 
			T.so_adm_office as ADM_OFFICE,
			T.so_approve as APPROVE
			FROM SYS_OFFICEMNG T
			WHERE 1 = 1
			<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(JISA)" >
			AND T.so_JISA = #{JISA}
			</if>
			ORDER BY T.so_JISA ASC, T.so_PMT_OFFICE ASC, T.so_ADM_OFFICE ASC
			)TT
	</select>
	
	<select id="selectOfficeInfo" resultType="HashMap" parameterType="HashMap">
		SELECT TT.*
		FROM (	
			SELECT 
			T.so_idx as idx,
			T.so_adm_seq as ADM_SEQ, 
			T.so_jisa as JISA, 
			T.so_pmt_office as PMT_OFFICE, 
			T.so_adm_office as ADM_OFFICE,
			T.so_approve as APPROVE
			FROM SYS_OFFICEMNG T
			WHERE 1 = 1
			and T.so_idx=${idx}		
			)TT
	</select>
	
	<select id="selectOfficeHistoryList" resultType="HashMap" parameterType="HashMap">
		SELECT *
		from sys_office_history
		WHERE 1 = 1
		and adm_seq=#{seq}::varchar
	</select>

	
	<select id="selectOfficeJisaCount" resultType="integer" parameterType="HashMap">
		SELECT count(*)
		FROM SYS_OFFICEMNG T
		WHERE 1 = 1
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(JISA)" >
			AND T.so_JISA = #{JISA}
		</if>
	</select>
	
	<insert id="insertJisangUploadData" parameterType="java.util.HashMap" useGeneratedKeys="true" keyColumn="ga_idx" keyProperty="ga_idx">
		INSERT INTO gover_atcfile 
		(
		 ga_jisang_no
		 ,ga_seq
		 ,ga_file_path
		 ,ga_file_nm
		 ,ga_file_seq
		) 
		 VALUES (
		  #{goverNo}
		  ,#{seq}::integer
		  ,#{fpath}
		  ,#{fname}
		  ,#{fseq}
		  )
	</insert>

	<update id="updateApproveStatus" parameterType="hashmap">
	    UPDATE SYS_OFFICEMNG
	    SET so_approve = 'Y'
	    WHERE so_idx = CAST(#{idx} AS INTEGER)
	</update>

	<insert id="insertGoverUploadData" parameterType="java.util.HashMap" useGeneratedKeys="true" keyColumn="ga_idx" keyProperty="ga_idx">
		
		INSERT INTO gover_atcfile 
		(

		 ga_gover_no
		 ,ga_seq
		 ,ga_file_path
		 ,ga_file_nm
		 ,ga_file_seq
		) 
		 VALUES (
		  #{goverNo}
		  ,#{seq}::integer
		  ,#{fpath}
		  ,#{fname}
		  ,#{fseq}
		  
		    )
	
	</insert>
	
	<select id="getGoverAtcFileSeq" parameterType="java.util.HashMap" resultType="integer">
		SELECT MAX(ga_file_seq) FROM gover_atcfile ga WHERE ga.ga_gover_no=#{GOVER_NO};
	
	</select>
	<select id="selectGoverDocInfo" resultType="HashMap" parameterType="HashMap">
		SELECT * FROM PLMS_APPROVAL where pa_DOCKEY in (select max(gp_dockey) from GOVER_PERMIT where gp_GOVER_NO = #{GOVER_NO} ) and (pa_status is null or pa_status not in ('X'))
	</select>
	
	
	<update id="updateGoverMasterDockey" parameterType="HashMap">
		update GOVER_PERMIT
		set gp_DOCKEY = ''
		where gp_DOCKEY in (select max(gp_dockey) from GOVER_PERMIT where gp_GOVER_NO = #{GOVERNO} )
	</update>
	

</mapper>