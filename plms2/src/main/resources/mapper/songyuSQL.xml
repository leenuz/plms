<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="songyuSQL">


<select id="selectTotalCount" parameterType="java.util.HashMap" resultType="Integer">
	SELECT count(*) as count FROM (	
		(
			SELECT
			jm.jm_idx as index 
			,jm.jm_jisang_no AS idx
			,'jisang' as right_type
			,'지상권' as right
			,jm.jm_jisa AS jisa 
			,COALESCE(jm.jm_pipe_yn,'N') AS pipe_yn
			,jm.jm_toji_type AS toji_type
			,jm.jm_pipe_meter AS pipe_meter
			,jm.jm_jimok_text AS jimok_text
			,js.js_souja_name AS souja_name
			,COALESCE(jm.jm_jijuk_area,null) AS jijuk_area
			
			,jm.jm_sido_nm AS sido_nm
		,jm.jm_sgg_nm AS sgg_nm
		,jm.jm_emd_nm AS emd_nm
		,jm.jm_ri_nm AS ri_nm
		,jm.jm_jibun AS jibun
		,trim(concat(jm.jm_sido_nm,' ',jm.jm_sgg_nm,' ',jm.jm_ri_nm,' ',jm.jm_jibun)) as address
		,COALESCE(jm.jm_jasan_no,'') AS jasan_no
		,COALESCE(jm.jm_comple_yn,'') AS comple_yn
		,COALESCE(jm.jm_permitted_yn,'') AS permitted_yn
		
		,COALESCE(jm.jm_chuideuk_date,null) AS chuideuk_date
		,COALESCE('','') AS gover_date
		,null as pay_date
		,null as gover_area
		,null as gover_length
		,jm.jm_jasan_money as jasan_money
		,null as pay_money
		,jm.jm_cancel_yn AS cancel_yn
		,jm.jm_manage_yn as manage_yn
		,jm.jm_dosiplan as dosiplan
		,case
			WHEN (SELECT count(dm.dm_idx) FROM dosi_master dm WHERE dm.dm_pnu=jm.jm_pnu)>0 THEN 'Y'
			WHEN  (SELECT count(dm.dm_idx) FROM dosi_master dm WHERE dm.dm_pnu=jm.jm_pnu)=0 THEN 'N'
		 END AS toji_plan
			FROM jisang_master jm LEFT JOIN jisang_souja js ON js.js_jisang_no=jm.jm_jisang_no
			where 1=1
			<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(jisa)" >
			and jm.jm_jisa=#{jisa}
			</if>
			
			
		
		)
		UNION ALL 
		(
			SELECT 
			gm.gm_idx as index 
		,gm.gm_gover_no AS idx
		,'gover' as right_type
		,'점용' as right
		,gm.gm_jisa AS jisa
		,COALESCE(gp.gp_pipe_overlap_yn,'N') AS pipe_yn
		,null AS toji_type
		,gm.gm_pipe_meter AS pipe_meter
		,gp.gp_jimok_text AS jimok_text
		,gm.gm_adm_office AS souja_name
		,gp.gp_jijuk_area AS jijuk_area
		,gp.gp_sido_nm AS sido_nm
		,gp.gp_sgg_nm AS sgg_nm
		,gp.gp_emd_nm AS emd_nm
		,gp.gp_ri_nm AS ri_nm
		,gp.gp_jibun AS jibun
		,trim(concat(gp.gp_sido_nm,' ',gp.gp_sgg_nm,' ',gp.gp_ri_nm,' ',gp.gp_jibun)) as address
		,COALESCE('','') AS jasan_no
		,COALESCE('','') AS comple_yn
		,COALESCE('','') AS permitted_yn
		,null AS chuideuk_date
		,concat(gm.gm_gover_st_date,'~',gm.gm_gover_ed_date) AS gover_date
		,gpp.gp_pay_date as pay_date
		,gpp.gp_gover_area as gover_area
		,gpp.gp_gover_length as gover_length
		,null as jasan_money
		,gpp.gp_pay_money as pay_money
		,gm.gm_cancel_yn AS cancel_yn
		,null as manage_yn
		,gp.gp_dosiplan as dosiplan
		,null as toji_plan
			FROM gover_master gm 
			LEFT JOIN gover_pnu gp ON gp.gp_gover_no = gm.gm_gover_no
			LEFT JOIN gover_permit gpp ON gpp.gp_gover_no=gm.gm_gover_no
			where 1=1 and gp.gp_gover_no = gm.gm_gover_no
			<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(jisa)" >
			and gm.gm_jisa=#{jisa}
			</if>
		
		)
		UNION ALL
		(
			SELECT 
			nm.nm_idx as index 
			,nm.nm_notset_no AS idx
			,'notset' as right_type
			,'미설정' as right
			,nm.nm_jisa AS jisa 
			,COALESCE(nm.nm_pipe_yn,'N') AS pipe_yn
			,nm.nm_toji_type AS toji_type
			,nm.nm_pipe_meter AS pipe_meter
			,nm.nm_jimok_text AS jimok_text
			,ns.ns_souja_name AS souja_name
			,nm.nm_jijuk_area AS jijuk_area
			,nm.nm_sido_nm AS sido_nm
		,nm.nm_sgg_nm AS sgg_nm
		,nm.nm_emd_nm AS emd_nm
		,nm.nm_ri_nm AS ri_nm
		,nm.nm_jibun AS jibun
		,trim(concat(nm.nm_sido_nm,' ',nm.nm_sgg_nm,' ',nm.nm_ri_nm,' ',nm.nm_jibun)) as address
		,COALESCE('','') AS jasan_no
		,COALESCE('','') AS comple_yn
		,COALESCE('','') AS permitted_yn
		,COALESCE(null::date,null) AS chuideuk_date
		
		,COALESCE('','') AS gover_date
		,null as pay_date
		,null as gover_area
		,null as gover_length
		,null as jasan_money
		,null as pay_money
		,null as cancel_yn
		,nm.nm_manage_yn as manage_yn
		,NULL AS dosiplan
		,NULL as toji_plan
			FROM notset_master nm LEFT JOIN notset_souja ns ON ns.ns_notset_no=nm.nm_notset_no
			where 1=1
			<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(jisa)" >
			and nm.nm_jisa=#{jisa}
			</if>
		)
	) as r 
	where 1=1
	<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(idx)" >
	and r.idx=#{idx}
	</if>
	<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(cancelYn)" >
	and r.cancel_yn=#{cancelYn}
	</if>
	<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(manageYn)" >
	and r.manage_yn=#{manageYn}
	</if>
	<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(dosiplan)" >
	and r.dosiplan=#{dosiplan}
	</if>
	<if test="@com.slsolution.plms.common.CmCodeService@isNotEmpty(right_type)" >
	and r.right_type in <foreach item="item" index="index" collection="right_type" open="(" separator="," close=")">#{item}</foreach>
	</if> 
	<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(address)" >
	and r.address like '${address}%'
	</if>
	<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(toji_plan_type)" >
	and r.toji_plan=#{toji_plan_type}
	</if>
	<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(right_overlap)" >
	and (SELECT COUNT(o.address) AS overlap 
		FROM
		  (
		  		(
					SELECT trim(concat(jm.jm_sido_nm,' ',jm.jm_sgg_nm,' ',jm.jm_ri_nm,' ',jm.jm_jibun)) as address
					FROM jisang_master jm LEFT JOIN jisang_souja js ON js.js_jisang_no=jm.jm_jisang_no
					where 1=1
		
				)
				UNION ALL 
				(
					SELECT trim(concat(gp.gp_sido_nm,' ',gp.gp_sgg_nm,' ',gp.gp_ri_nm,' ',gp.gp_jibun)) as address
					FROM gover_master gm 
					LEFT JOIN gover_pnu gp ON gp.gp_gover_no = gm.gm_gover_no
					LEFT JOIN gover_permit gpp ON gpp.gp_gover_no=gm.gm_gover_no
					where 1=1 and gp.gp_gover_no = gm.gm_gover_no
		
				)
				UNION ALL
				(
					SELECT trim(concat(nm.nm_sido_nm,' ',nm.nm_sgg_nm,' ',nm.nm_ri_nm,' ',nm.nm_jibun)) as address
					FROM notset_master nm LEFT JOIN notset_souja ns ON ns.ns_notset_no=nm.nm_notset_no
					where 1=1
		
				)
		  
		  ) as o  WHERE o.address = r.address GROUP BY o.address ) >1
	</if>
	<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(toji_type)" >
	and r.toji_type=#{toji_type}
	</if>
	
</select>

<select id="selectAllList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
	SELECT *,(row_number() over()) as no
	 FROM (	
		(
			SELECT
			jm.jm_idx as index 
			,jm.jm_jisang_no AS idx
			,0 as gidx
			,'jisang' as right_type
			,'지상권' as right
			,jm.jm_jisa AS jisa 
			,COALESCE(jm.jm_pipe_yn,'N') AS pipe_yn
			,jm.jm_toji_type AS toji_type
			,jm.jm_pipe_meter AS pipe_meter
			,jm.jm_jimok_text AS jimok_text
			,js.js_souja_name AS souja_name
			,COALESCE(jm.jm_jijuk_area,null) AS jijuk_area
			
			,jm.jm_sido_nm AS sido_nm
		,jm.jm_sgg_nm AS sgg_nm
		,jm.jm_emd_nm AS emd_nm
		,jm.jm_ri_nm AS ri_nm
		,jm.jm_jibun AS jibun
		,trim(concat(jm.jm_sido_nm,' ',jm.jm_sgg_nm,' ',jm.jm_emd_nm,' ',jm.jm_ri_nm,' ',jm.jm_jibun)) as address
		,COALESCE(jm.jm_jasan_no,'') AS jasan_no
		,COALESCE(jm.jm_comple_yn,'') AS comple_yn
		,COALESCE(jm.jm_permitted_yn,'') AS permitted_yn
		
		,COALESCE(jm.jm_chuideuk_date,null) AS chuideuk_date
		,COALESCE('','') AS gover_date
		,null as pay_date
		,null as gover_area
		,null as gover_length
		,jm.jm_jasan_money as jasan_money
		,null as pay_money
		,jm.jm_cancel_yn AS cancel_yn
		,jm.jm_manage_yn as manage_yn
		,jm.jm_dosiplan as dosiplan
		,case
			WHEN (SELECT count(dm.dm_idx) FROM dosi_master dm WHERE dm.dm_pnu=jm.jm_pnu)>0 THEN 'Y'
			WHEN  (SELECT count(dm.dm_idx) FROM dosi_master dm WHERE dm.dm_pnu=jm.jm_pnu)=0 THEN 'N'
		 END AS toji_plan
			FROM jisang_master jm LEFT JOIN jisang_souja js ON js.js_jisang_no=jm.jm_jisang_no
			where 1=1
			<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(jisa)" >
			and jm.jm_jisa=#{jisa}
			</if>
			
			
		
		)
		UNION ALL 
		(
			SELECT 
			gm.gm_idx as index 
		,gm.gm_gover_no AS idx
		,coalesce(gp.gp_idx,0) as gidx
		,'gover' as right_type
		,'점용' as right
		,gm.gm_jisa AS jisa
		,COALESCE(gp.gp_pipe_overlap_yn,'N') AS pipe_yn
		,null AS toji_type
		,gm.gm_pipe_meter AS pipe_meter
		,gp.gp_jimok_text AS jimok_text
		,gm.gm_adm_office AS souja_name
		,gp.gp_jijuk_area AS jijuk_area
		,gp.gp_sido_nm AS sido_nm
		,gp.gp_sgg_nm AS sgg_nm
		,gp.gp_emd_nm AS emd_nm
		,gp.gp_ri_nm AS ri_nm
		,gp.gp_jibun AS jibun
		,trim(concat(gp.gp_sido_nm,' ',gp.gp_sgg_nm,' ',gp.gp_emd_nm,' ',gp.gp_ri_nm,' ',gp.gp_jibun)) as address
		,COALESCE('','') AS jasan_no
		,COALESCE('','') AS comple_yn
		,COALESCE('','') AS permitted_yn
		,null AS chuideuk_date
		,concat(gm.gm_gover_st_date,'~',gm.gm_gover_ed_date) AS gover_date
		,gpp.gp_pay_date as pay_date
		,gpp.gp_gover_area as gover_area
		,gpp.gp_gover_length as gover_length
		,null as jasan_money
		,gpp.gp_pay_money as pay_money
		,gm.gm_cancel_yn AS cancel_yn
		,null as manage_yn
		,gp.gp_dosiplan as dosiplan
		,null as toji_plan
			FROM gover_master gm 
			LEFT JOIN gover_pnu gp ON gp.gp_gover_no = gm.gm_gover_no
			LEFT JOIN gover_permit gpp ON gpp.gp_gover_no=gm.gm_gover_no
			where 1=1 and gp.gp_gover_no = gm.gm_gover_no
			<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(jisa)" >
			and gm.gm_jisa=#{jisa}
			</if>
			and gp.gp_pnu is not null
		
		)
		UNION ALL
		(
			SELECT 
			nm.nm_idx as index 
			,nm.nm_notset_no AS idx
			,0 as gidx
			,'notset' as right_type
			,'미설정' as right
			,nm.nm_jisa AS jisa 
			,COALESCE(nm.nm_pipe_yn,'N') AS pipe_yn
			,nm.nm_toji_type AS toji_type
			,nm.nm_pipe_meter AS pipe_meter
			,nm.nm_jimok_text AS jimok_text
			,ns.ns_souja_name AS souja_name
			,nm.nm_jijuk_area AS jijuk_area
			,nm.nm_sido_nm AS sido_nm
		,nm.nm_sgg_nm AS sgg_nm
		,nm.nm_emd_nm AS emd_nm
		,nm.nm_ri_nm AS ri_nm
		,nm.nm_jibun AS jibun
		,trim(concat(nm.nm_sido_nm,' ',nm.nm_sgg_nm,' ',nm.nm_emd_nm,' ',nm.nm_ri_nm,' ',nm.nm_jibun)) as address
		,COALESCE('','') AS jasan_no
		,COALESCE('','') AS comple_yn
		,COALESCE('','') AS permitted_yn
		,COALESCE(null::date,null) AS chuideuk_date
		
		,COALESCE('','') AS gover_date
		,null as pay_date
		,null as gover_area
		,null as gover_length
		,null as jasan_money
		,null as pay_money
		,null as cancel_yn
		,nm.nm_manage_yn as manage_yn
		,NULL AS dosiplan
		,NULL as toji_plan
			FROM notset_master nm LEFT JOIN notset_souja ns ON ns.ns_notset_no=nm.nm_notset_no
			where 1=1
			<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(jisa)" >
			and nm.nm_jisa=#{jisa}
			</if>
		)
	) as r
	where 1=1
	<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(idx)" >
	and r.idx=#{idx}
	</if>
	<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(cancelYn)" >
	and r.cancel_yn=#{cancelYn}
	</if>
	<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(manageYn)" >
	and r.manage_yn=#{manageYn}
	</if>
	<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(dosiplan)" >
	and r.dosiplan=#{dosiplan}
	</if>
	<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(address)" >
	and r.address like '${address}%'
	</if>
	<if test="@com.slsolution.plms.common.CmCodeService@isNotEmpty(right_type)" >
	and r.right_type in <foreach item="item" index="index" collection="right_type" open="(" separator="," close=")">#{item}</foreach>
	</if> 
	<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(toji_plan_type)" >
	and r.toji_plan=#{toji_plan_type}
	</if>
	<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(toji_type)" >
	and r.toji_type=#{toji_type}
	</if>
	<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(right_overlap)" >
	and (SELECT COUNT(o.address) AS overlap 
		FROM
		  (
		  		(
					SELECT trim(concat(jm.jm_sido_nm,' ',jm.jm_sgg_nm,' ',jm.jm_emd_nm,' ',jm.jm_ri_nm,' ',jm.jm_jibun)) as address
					FROM jisang_master jm LEFT JOIN jisang_souja js ON js.js_jisang_no=jm.jm_jisang_no
					where 1=1
		
				)
				UNION ALL 
				(
					SELECT trim(concat(gp.gp_sido_nm,' ',gp.gp_sgg_nm,' ',gp.gp_emd_nm,' ',gp.gp_ri_nm,' ',gp.gp_jibun)) as address
					FROM gover_master gm 
					LEFT JOIN gover_pnu gp ON gp.gp_gover_no = gm.gm_gover_no
					LEFT JOIN gover_permit gpp ON gpp.gp_gover_no=gm.gm_gover_no
					where 1=1 and gp.gp_gover_no = gm.gm_gover_no
					and gp.gp_pnu is not null
		
				)
				UNION ALL
				(
					SELECT trim(concat(nm.nm_sido_nm,' ',nm.nm_sgg_nm,' ',nm.nm_emd_nm,' ',nm.nm_ri_nm,' ',nm.nm_jibun)) as address
					FROM notset_master nm LEFT JOIN notset_souja ns ON ns.ns_notset_no=nm.nm_notset_no
					where 1=1
		
				)
		  
		  ) as o  WHERE o.address = r.address GROUP BY o.address ) >1
	</if>
	
	<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(orderCol)" >
	ORDER BY r.${orderCol} ${desc}
	</if>
	<if test="length>0"> 
	 limit #{length} offset #{start}
	 </if>

</select>
	<select id="selectAllList2" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		select jm_set_money,jm_save_status from jisang_master 
	</select>
	
	
	
	<select id="selectNotsetNextNo" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT 
    CASE 
        WHEN MAX(CAST(SUBSTRING(nm_NOTSET_NO, 3) AS INTEGER)) IS NULL THEN '0' 
        ELSE MAX(CAST(SUBSTRING(nm_NOTSET_NO, 3) AS INTEGER)) 
    END AS NOW_NOTSETNO
FROM NOTSET_MASTER;

	</select>
	
	
	<insert id="insertNotsetMaster" parameterType="HashMap">
		Insert into NOTSET_MASTER
		(
		nm_NOTSET_NO
		, nm_SIDO_NM
		, nm_SGG_NM
		, nm_EMD_NM
		, nm_RI_NM
		, nm_JIBUN
		, nm_JISA
		, nm_JIJUK_AREA
		, nm_PIPE_NAME
		, nm_SUN_GUBUN
		, nm_COMPLE_YN
		,nm_GOVER_OWN_YN
		, nm_ADDRCODE
		, nm_PNU
		, nm_JIMOK_TEXT
		, nm_DOCKEY
		, nm_PIPE_YN
		, nm_PIPE_METER
		, nm_PIPE_METER2
		, nm_TOJI_TYPE
		)
		Values
		(
		#{NOTSET_NO}
		, {#SIDO_NM}
		, #{SGG_NM}
		, #{EMD_NM}
		, #{RI_NM}
		, #{JIBUN}
		, #{JISA}
		, #{JIJUK_AREA}
		, #{PIPE_NAME}
		, #{SUN_GUBUN}
		, #{COMPLE_YN}
		,#{GOVER_OWN_YN}
		, #{ADDRCODE}
		, #{PNU}
		, #{JIMOK_TEXT}
		, #{DOCKEY}
		, #{PIPE_YN}
		, #{PIPE_METER}
		, #{PIPE_METER2}
		, #{TOJI_TYPE}
		)
	</insert>
	<update id="updateTogiJisang_Status2Null" parameterType="HashMap">
		UPDATE JIJUK_2024 SET
		JISANG_STATUS = TO_CHAR(#{STATUS})
			 , JISANG_NO = null
			 , JISA = null
			 <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(GOVEROWNYN)" >
		
			, GOVER_OWN_YN = TO_CHAR(#{GOVEROWNYN})
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(JASANNO)" >
			, ERP_NO = TO_CHAR(#{JASANNO})
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(DOSIPLAN)" >
			, DOSIPLAN = TO_CHAR(#{DOSIPLAN})
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(PIPEYN)" >
			, PIPE_OVERLAP_YN = TO_CHAR(#{PIPEYN})
		</if>
		WHERE PNU = TO_CHAR(#{PNU})
	</update>
	<update id="updateTogiJisang_Status" parameterType="HashMap">
		UPDATE JIJUK_2024 SET
		JISANG_STATUS = TO_CHAR(#{STATUS})
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(GOVEROWNYN)" >
			, GOVER_OWN_YN = TO_CHAR(#{GOVEROWNYN})
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(JISANGNO)" >
			, JISANG_NO = TO_CHAR(#{JISANGNO})
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(JASANNO)" >
			, ERP_NO = TO_CHAR(#{JASANNO})
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(DOSIPLAN)" >
			, DOSIPLAN = TO_CHAR(#{DOSIPLAN})
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(JISA)" >
			, JISA = TO_CHAR(#{JISA})
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(PIPEYN)" >
			, PIPE_OVERLAP_YN = TO_CHAR(#{PIPEYN})
		</if>
		WHERE PNU = TO_CHAR(#{PNU})
	</update>
	
	<select id="selectNotsetRowDetail_KibonInfo"  parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT NM.nm_notset_no as NOTSET_NO
		, NM.nm_jisa as JISA
		, NM.nm_pipe_name as PIPE_NAME
		, NM.nm_sun_gubun as SUN_GUBUN
		, NM.nm_sido_nm as SIDO_NM
		, NM.nm_sgg_nm as SGG_NM
		, NM.nm_emd_nm as EMD_NM
		, NM.nm_ri_nm as RI_NM
		, NM.nm_jibun as JIBUN
		, NM.nm_jijuk_area as JIJUK_AREA
		, NM.nm_jimok_text as JIMOK_TEXT
		, NM.nm_pnu as PNU
		, NM.nm_pipe_yn as PIPE_YN
		, NM.nm_pipe_meter as PIPE_METER
		, NM.nm_pipe_meter2 as PIPE_METER2
		, NM.nm_gover_own_yn as GOVER_OWN_YN
		, NM.nm_addrcode as ADDRCODE
		FROM NOTSET_MASTER NM
		WHERE NM.nm_NOTSET_NO = TO_CHAR(#{NOTSET_NO})
	</select>
	
	<update id="updateNotsetMasterStatus" parameterType="HashMap">
		UPDATE JIJUK_2024 SET
		JISANG_STATUS = 'N'
		, ERP_NO = ''
		, JISANG_NO = ''
		, DOSIPLAN = ''
		, GOVER_OWN_YN = 'N'
		, JISA = ''
		WHERE PNU IN ( SELECT nm_PNU PNU FROM NOTSET_MASTER WHERE nm_NOTSET_NO = TO_CHAR(#{JISANGNO}) )
	</update>
	
	<update id="updateNotsetMaster" parameterType="HashMap">
		UPDATE NOTSET_MASTER
		SET
		nm_SIDO_NM = #{SIDO_NM}
		, nm_SGG_NM = #{SGG_NM}
		, nm_EMD_NM = #{EMD_NM}
		, nm_RI_NM = #{RI_NM}
		, nm_JIBUN = #{JIBUN}
		, nm_JISA = #{JISA}
		, nm_JIJUK_AREA = to_number(#{JIJUK_AREA})
		, nm_PIPE_NAME = #{PIPE_NAME}
		, nm_SUN_GUBUN = #{SUN_GUBUN}
		, nm_ADDRCODE = #{ADDRCODE}
		, nm_PIPE_YN = #{PIPE_YN}
		, nm_PIPE_METER = #{PIPE_METER}
		, nm_PIPE_METER2 = #{PIPE_METER2}
		, nm_PNU = #{PNU}
		, nm_GOVER_OWN_YN = #{GOVER_OWN_YN}
		, nm_JIMOK_TEXT = #{JIMOK_TEXT}

		WHERE nm_NOTSET_NO = TO_CHAR(#{NOTSET_NO})

	</update>
	
	<insert id="insertNotsetModifyHistory" parameterType="HashMap">
		Insert into NOTSET_MODIFY
		( nn_NOTSET_NO, nn_MODIFY_DATE, nn_GUBUN, nn_CONT, nn_USER_NAME, nn_USER_ID )
		Values
		(#{NOTSET_NO}, CURRENT_TIMESTAMP, #{GUBUN}, #{CONT}, #{USER_NAME}, #{USER_ID})
	</insert>
	
	<!-- <update id="updateTogiJisang_Status" parameterType="HashMap">
		UPDATE JIJUK_2024 SET
		JISANG_STATUS = TO_CHAR(#{STATUS})
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(GOVEROWNYN)" >
			, GOVER_OWN_YN = TO_CHAR(#{GOVEROWNYN})
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(JISANGNO)" >
			, JISANG_NO = TO_CHAR(#{JISANGNO})
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(JASANNO)" >
			, ERP_NO = TO_CHAR(#{JASANNO})
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(DOSIPLAN)" >
			, DOSIPLAN = TO_CHAR(#{DOSIPLAN})
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(JISA)" >
			, JISA = TO_CHAR(#{JISA})
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(PIPEYN)" >
			, PIPE_OVERLAP_YN = TO_CHAR(#{PIPEYN})
		</if>
		WHERE PNU = TO_CHAR(#{PNU})
	</update> -->
	
	<delete id="deleteNotsetSoyu" parameterType="HashMap">
		DELETE FROM NOTSET_SOUJA
		WHERE ns_NOTSET_NO = TO_CHAR(#{NOTSET_NO})
	</delete>
	<insert id="insertNotsetSoyu" parameterType="HashMap">
		Insert into NOTSET_SOUJA
		(ns_NOTSET_NO, ns_JIBUN, ns_SOUJA_NAME, ns_ADDRESS, ns_CONTACT)
		Values
		(#{NOTSET_NO}, #{JIBUN}, #{NAME}, #{ADDR}, #{TEL})
	</insert>
		<select id="selectNotsetRowDetail_Files" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT *
		FROM NOTSET_ATCFILE
		WHERE na_NOTSET_NO = TO_CHAR(#{NOTSET_NO})
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(SEQ)" >
			AND na_SEQ = TO_CHAR(#SEQ#)
		</if>
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(FILE_SEQ)" >
			AND na_FILE_SEQ = TO_CHAR(#{FILE_SEQ})
		</if>
		ORDER BY na_SEQ DESC
	</select>
		<delete id="notsetDeleteFile" parameterType="HashMap">
		DELETE FROM NOTSET_ATCFILE
		WHERE na_NOTSET_NO = TO_CHAR(#{NOTSET_NO})
		<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(SEQ)" >
			AND na_FILE_SEQ = TO_CHAR(#{SEQ})
		</if>
	</delete>
	<select id="selectNotset_ATCFILE_NoCheck" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT * FROM NOTSET_ATCFILE
		WHERE na_SEQ = TO_CHAR(#{FILESEQ})
	</select>
		<update id="updateNotsetSeqFile" parameterType="HashMap">
		UPDATE NOTSET_ATCFILE SET
		na_NOTSET_NO = TO_CHAR(#{NOTSET_NO})
		WHERE na_SEQ = TO_CHAR(#{FILE_SEQ})
	</update>
	<select id="makePnuIssueSeq" resultType="String" parameterType="HashMap">
 
			SELECT COALESCE(MAX(S.pi_SEQ), 0) + 1 AS SEQ FROM POTENTIAL_ISSUE S

	</select>
	<insert id="insertPnuIssue" parameterType="HashMap">
	 
		INSERT INTO POTENTIAL_ISSUE (
		        pi_PNU
		        , pi_SEQ
		        , pi_CODE_DEPTH1
		        , pi_CODE_DEPTH2
		        , pi_CODE_DEPTH3
		        , pi_ISSUE_COMMENT
		        , pi_DEL_FLAG
		        , pi_ISSUE_DATE
		        , pi_REGISTED_YN
		        , pi_PERMITTED_YN
		        , pi_ADDRCODE
		        , pi_JIBUN
		) VALUES (
		        #{PNU}
		        , #{SEQ}
		        , #{CODE_DEPTH1}
		        , #{CODE_DEPTH2}
		        , #{CODE_DEPTH3}
		        , #{ISSUE_COMMENT}
		        , 'N'
		        , CURRENT_TIMESTAMP
		        , #{REGISTED_YN}
		        , #{PERMITTED_YN}
		        , #{ADDRCODE}
		        , #{JIBUN}
		)
	
	</insert>
	<insert id="insertPnuIssueHistory" parameterType="HashMap">
	 
			INSERT INTO POTENTIAL_ISSUE_HISTORY (
			        pih_HISTORY_SEQ
			        , pih_PNU
			        , pih_SEQ
			        , pih_HISTORY_TYPE
			        , pih_CONTENT
			        , pih_HISTORY_DATE
			        , pih_ADDRCODE
			        , pih_JIBUN
			) VALUES (
			        (SELECT COALESCE(MAX(S.pih_HISTORY_SEQ), 0) + 1 FROM POTENTIAL_ISSUE_HISTORY S)
			        , #{PNU}
			        , #{SEQ}
			        , #{HISTORY_TYPE}
			        , #{HISTORY_CONTENT}
			        , CURRENT_TIMESTAMP
			        , #{ADDRCODE}
			        , #{JIBUN}
			)
	
	</insert>
	<update id="updateMinwonPnuComplete" parameterType="HashMap"> 
			UPDATE MINWON_PNU
			   SET mp_COMP_DATE = CURRENT_TIMESTAMP
			 WHERE mp_MINWON_SEQ = #{MINWON_SEQ}
			   AND mp_PNU = #{PNU}
	</update>
	<insert id="insertJijukLog" parameterType="HashMap"> 
       INSERT INTO PLMS_JIJUK_LOG (
		    LOG_SEQ,
		    PNU,
		    JISANG_NO_OLD,
		    JISANG_NO,
		    JISANG_STATUS_OLD,
		    JISANG_STATUS,
		    GOVER_OWN_YN_OLD,
		    GOVER_OWN_YN,
		    PIPE_OVERLAP_YN_OLD,
		    PIPE_OVERLAP_YN,
		    JISA_OLD,
		    JISA,
		    LOG_TIME,
		    LOG_USER,
		    LOG_TYPE
		) 
		VALUES (
		    (SELECT COALESCE(MAX(LOG_SEQ), 0) + 1 FROM PLMS_JIJUK_LOG),
		    #{PNU},
		    #{JISANG_NO_OLD},
		    #{JISANG_NO},
		    #{JISANG_STATUS_OLD},
		    #{JISANG_STATUS},
		    #{GOVER_OWN_YN_OLD},
		    #{GOVER_OWN_YN},
		    #{PIPE_OVERLAP_YN_OLD},
		    #{PIPE_OVERLAP_YN},
		    #{JISA_OLD},
		    #{JISA},
		    CURRENT_TIMESTAMP,
		    #{LOG_USER},
		    #{LOG_TYPE}
		)

</insert>
<select id="selectGoverNextNo" resultType="String" parameterType="HashMap">
		SELECT COALESCE(MAX(CAST(SUBSTRING(gm_GOVER_NO, 3) AS NUMERIC)), 0) AS NOW_GOVERNO 
		FROM GOVER_MASTER;

	</select>
</mapper>